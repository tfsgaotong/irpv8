package com.tfs.irp.app.dao.impl;

import com.tfs.irp.app.dao.IrpAppDAO;
import com.tfs.irp.app.entity.IrpApp;
import com.tfs.irp.app.entity.IrpAppExample;
import com.tfs.irp.util.PageUtil;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class IrpAppDAOImpl extends SqlMapClientDaoSupport implements IrpAppDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_APPLIST
	 * 
	 * @ibatorgenerated Thu Sep 26 16:04:51 CST 2013
	 */
	public int countByExample(IrpAppExample example) throws SQLException {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"IRP_APPLIST.ibatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_APPLIST
	 * 
	 * @ibatorgenerated Thu Sep 26 16:04:51 CST 2013
	 */
	public int deleteByExample(IrpAppExample example) throws SQLException {
		int rows = getSqlMapClientTemplate().delete(
				"IRP_APPLIST.ibatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_APPLIST
	 * 
	 * @ibatorgenerated Thu Sep 26 16:04:51 CST 2013
	 */
	public void insert(IrpApp record) throws SQLException {
		getSqlMapClientTemplate().insert("IRP_APPLIST.ibatorgenerated_insert",
				record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_APPLIST
	 * 
	 * @ibatorgenerated Thu Sep 26 16:04:51 CST 2013
	 */
	public void insertSelective(IrpApp record) throws SQLException {
		getSqlMapClientTemplate().insert(
				"IRP_APPLIST.ibatorgenerated_insertSelective", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_APPLIST
	 * 
	 * @ibatorgenerated Thu Sep 26 16:04:51 CST 2013
	 */
	@SuppressWarnings("unchecked")
	public List<IrpApp> selectByExample(IrpAppExample example)
			throws SQLException {
		List<IrpApp> list = getSqlMapClientTemplate().queryForList(
				"IRP_APPLIST.ibatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_APPLIST
	 * 
	 * @ibatorgenerated Thu Sep 26 16:04:51 CST 2013
	 */
	public int updateByExampleSelective(IrpApp record, IrpAppExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_APPLIST.ibatorgenerated_updateByExampleSelective", parms);
		return rows;
	}

	public int updateByExamplebyStatus(IrpApp record) {
		int rows = 0;
		rows = getSqlMapClientTemplate().update(
				"IRP_APPLIST.ibatorgenerated_updateBystatus", record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_APPLIST
	 * 
	 * @ibatorgenerated Thu Sep 26 16:04:51 CST 2013
	 */
	public int updateByExample(IrpApp record, IrpAppExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_APPLIST.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds
	 * to the database table IRP_APPLIST
	 * 
	 * @ibatorgenerated Thu Sep 26 16:04:51 CST 2013
	 */
	private static class UpdateByExampleParms extends IrpAppExample {
		private Object record;

		public UpdateByExampleParms(Object record, IrpAppExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<IrpApp> selectByExample(IrpAppExample example, PageUtil pageUtil) {
		List<IrpApp> list = null;
		if (pageUtil == null) {
			list = getSqlMapClientTemplate().queryForList(
					"IRP_APPLIST.ibatorgenerated_selectByExample", example);
		} else {
			list = getSqlMapClientTemplate().queryForList(
					"IRP_APPLIST.ibatorgenerated_selectByExample", example,
					pageUtil.getPageIndex(), pageUtil.getPageSize());
		}
		return list;
	}

	@Override
	public IrpApp findappbyid(Long applistid) {
		IrpApp key = new IrpApp();
		key.setApplistid(applistid);
		IrpApp record = null;
		record = (IrpApp) getSqlMapClientTemplate().queryForObject(
				"IRP_APPLIST.ibatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	@Override
	public int updateByPrimaryKeySelective(IrpApp record) {
		int rows = 0;
		rows = getSqlMapClientTemplate().update(
				"IRP_APPLIST.ibatorgenerated_updateByPrimaryKeySelective",
				record);
		return rows;
	}

	// ibatorgenerated_selectByuserid

	@Override
	public List<IrpApp> findappbyuserid(Long userid) {
		List<IrpApp> list = null;
		list = getSqlMapClientTemplate().queryForList(
				"IRP_APPLIST.ibatorgenerated_selectByuserid", userid);
		return list;
	}

	@Override
	public List<IrpApp> findappbystatus(Long status) {

		return null;
	}

	@Override
	public List<IrpApp> findappuserdisplay(PageUtil pageUtil,
			Map<String, Long> map) {
		List<IrpApp> list = null;
		if (pageUtil == null) {
			list = getSqlMapClientTemplate()
					.queryForList(
							"IRP_APPLIST.ibatorgenerated_selectByuseridandstatusanddisplay",
							map);
		} else {
			list = getSqlMapClientTemplate()
					.queryForList(
							"IRP_APPLIST.ibatorgenerated_selectByuseridandstatusanddisplay",
							map, pageUtil.getPageIndex(),
							pageUtil.getPageSize());
		}
		return list;
	}

	@Override
	public List<IrpApp> findappusernotdisplay(PageUtil pageUtil,
			Map<String, Long> map) {
		List<IrpApp> list = null;
		list = getSqlMapClientTemplate()
				.queryForList(
						"IRP_APPLIST.ibatorgenerated_selectBynotuseridandstatusanddisplay",
						map, pageUtil.getPageIndex(), pageUtil.getPageSize());
		return list;
	}

	@Override
	public int findappuserdisplaycount(Map<String, Long> map) {
		Integer count = null;
		count = (Integer) getSqlMapClientTemplate().queryForObject(
				"IRP_APPLIST.ibatorgenerated_appuserdisplaycount", map);
		return count;
	}

	@Override
	public int findappusernotdisplaycount(Map<String, Long> map) {
		Integer count = null;
		count = (Integer) getSqlMapClientTemplate().queryForObject(
				"IRP_APPLIST.ibatorgenerated_appusernotdisplaycount", map);
		return count;
	}

}