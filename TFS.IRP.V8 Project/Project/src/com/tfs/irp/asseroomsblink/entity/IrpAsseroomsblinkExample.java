package com.tfs.irp.asseroomsblink.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpAsseroomsblinkExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_ASSEROOMSBLINK
	 * @ibatorgenerated  Mon Aug 22 10:46:46 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_ASSEROOMSBLINK
	 * @ibatorgenerated  Mon Aug 22 10:46:46 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ASSEROOMSBLINK
	 * @ibatorgenerated  Mon Aug 22 10:46:46 CST 2016
	 */
	public IrpAsseroomsblinkExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ASSEROOMSBLINK
	 * @ibatorgenerated  Mon Aug 22 10:46:46 CST 2016
	 */
	protected IrpAsseroomsblinkExample(IrpAsseroomsblinkExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ASSEROOMSBLINK
	 * @ibatorgenerated  Mon Aug 22 10:46:46 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ASSEROOMSBLINK
	 * @ibatorgenerated  Mon Aug 22 10:46:46 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ASSEROOMSBLINK
	 * @ibatorgenerated  Mon Aug 22 10:46:46 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ASSEROOMSBLINK
	 * @ibatorgenerated  Mon Aug 22 10:46:46 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ASSEROOMSBLINK
	 * @ibatorgenerated  Mon Aug 22 10:46:46 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ASSEROOMSBLINK
	 * @ibatorgenerated  Mon Aug 22 10:46:46 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ASSEROOMSBLINK
	 * @ibatorgenerated  Mon Aug 22 10:46:46 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_ASSEROOMSBLINK
	 * @ibatorgenerated  Mon Aug 22 10:46:46 CST 2016
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andAsseroomsblinkidIsNull() {
			addCriterion("ASSEROOMSBLINKID is null");
			return this;
		}

		public Criteria andAsseroomsblinkidIsNotNull() {
			addCriterion("ASSEROOMSBLINKID is not null");
			return this;
		}

		public Criteria andAsseroomsblinkidEqualTo(Long value) {
			addCriterion("ASSEROOMSBLINKID =", value, "asseroomsblinkid");
			return this;
		}

		public Criteria andAsseroomsblinkidNotEqualTo(Long value) {
			addCriterion("ASSEROOMSBLINKID <>", value, "asseroomsblinkid");
			return this;
		}

		public Criteria andAsseroomsblinkidGreaterThan(Long value) {
			addCriterion("ASSEROOMSBLINKID >", value, "asseroomsblinkid");
			return this;
		}

		public Criteria andAsseroomsblinkidGreaterThanOrEqualTo(Long value) {
			addCriterion("ASSEROOMSBLINKID >=", value, "asseroomsblinkid");
			return this;
		}

		public Criteria andAsseroomsblinkidLessThan(Long value) {
			addCriterion("ASSEROOMSBLINKID <", value, "asseroomsblinkid");
			return this;
		}

		public Criteria andAsseroomsblinkidLessThanOrEqualTo(Long value) {
			addCriterion("ASSEROOMSBLINKID <=", value, "asseroomsblinkid");
			return this;
		}

		public Criteria andAsseroomsblinkidIn(List<Long> values) {
			addCriterion("ASSEROOMSBLINKID in", values, "asseroomsblinkid");
			return this;
		}

		public Criteria andAsseroomsblinkidNotIn(List<Long> values) {
			addCriterion("ASSEROOMSBLINKID not in", values, "asseroomsblinkid");
			return this;
		}

		public Criteria andAsseroomsblinkidBetween(Long value1, Long value2) {
			addCriterion("ASSEROOMSBLINKID between", value1, value2,
					"asseroomsblinkid");
			return this;
		}

		public Criteria andAsseroomsblinkidNotBetween(Long value1, Long value2) {
			addCriterion("ASSEROOMSBLINKID not between", value1, value2,
					"asseroomsblinkid");
			return this;
		}

		public Criteria andAsseroomidIsNull() {
			addCriterion("ASSEROOMID is null");
			return this;
		}

		public Criteria andAsseroomidIsNotNull() {
			addCriterion("ASSEROOMID is not null");
			return this;
		}

		public Criteria andAsseroomidEqualTo(Long value) {
			addCriterion("ASSEROOMID =", value, "asseroomid");
			return this;
		}

		public Criteria andAsseroomidNotEqualTo(Long value) {
			addCriterion("ASSEROOMID <>", value, "asseroomid");
			return this;
		}

		public Criteria andAsseroomidGreaterThan(Long value) {
			addCriterion("ASSEROOMID >", value, "asseroomid");
			return this;
		}

		public Criteria andAsseroomidGreaterThanOrEqualTo(Long value) {
			addCriterion("ASSEROOMID >=", value, "asseroomid");
			return this;
		}

		public Criteria andAsseroomidLessThan(Long value) {
			addCriterion("ASSEROOMID <", value, "asseroomid");
			return this;
		}

		public Criteria andAsseroomidLessThanOrEqualTo(Long value) {
			addCriterion("ASSEROOMID <=", value, "asseroomid");
			return this;
		}

		public Criteria andAsseroomidIn(List<Long> values) {
			addCriterion("ASSEROOMID in", values, "asseroomid");
			return this;
		}

		public Criteria andAsseroomidNotIn(List<Long> values) {
			addCriterion("ASSEROOMID not in", values, "asseroomid");
			return this;
		}

		public Criteria andAsseroomidBetween(Long value1, Long value2) {
			addCriterion("ASSEROOMID between", value1, value2, "asseroomid");
			return this;
		}

		public Criteria andAsseroomidNotBetween(Long value1, Long value2) {
			addCriterion("ASSEROOMID not between", value1, value2, "asseroomid");
			return this;
		}

		public Criteria andAsseroomsbidIsNull() {
			addCriterion("ASSEROOMSBID is null");
			return this;
		}

		public Criteria andAsseroomsbidIsNotNull() {
			addCriterion("ASSEROOMSBID is not null");
			return this;
		}

		public Criteria andAsseroomsbidEqualTo(Long value) {
			addCriterion("ASSEROOMSBID =", value, "asseroomsbid");
			return this;
		}

		public Criteria andAsseroomsbidNotEqualTo(Long value) {
			addCriterion("ASSEROOMSBID <>", value, "asseroomsbid");
			return this;
		}

		public Criteria andAsseroomsbidGreaterThan(Long value) {
			addCriterion("ASSEROOMSBID >", value, "asseroomsbid");
			return this;
		}

		public Criteria andAsseroomsbidGreaterThanOrEqualTo(Long value) {
			addCriterion("ASSEROOMSBID >=", value, "asseroomsbid");
			return this;
		}

		public Criteria andAsseroomsbidLessThan(Long value) {
			addCriterion("ASSEROOMSBID <", value, "asseroomsbid");
			return this;
		}

		public Criteria andAsseroomsbidLessThanOrEqualTo(Long value) {
			addCriterion("ASSEROOMSBID <=", value, "asseroomsbid");
			return this;
		}

		public Criteria andAsseroomsbidIn(List<Long> values) {
			addCriterion("ASSEROOMSBID in", values, "asseroomsbid");
			return this;
		}

		public Criteria andAsseroomsbidNotIn(List<Long> values) {
			addCriterion("ASSEROOMSBID not in", values, "asseroomsbid");
			return this;
		}

		public Criteria andAsseroomsbidBetween(Long value1, Long value2) {
			addCriterion("ASSEROOMSBID between", value1, value2, "asseroomsbid");
			return this;
		}

		public Criteria andAsseroomsbidNotBetween(Long value1, Long value2) {
			addCriterion("ASSEROOMSBID not between", value1, value2,
					"asseroomsbid");
			return this;
		}

		public Criteria andAsseroomsblinkstatusIsNull() {
			addCriterion("ASSEROOMSBLINKSTATUS is null");
			return this;
		}

		public Criteria andAsseroomsblinkstatusIsNotNull() {
			addCriterion("ASSEROOMSBLINKSTATUS is not null");
			return this;
		}

		public Criteria andAsseroomsblinkstatusEqualTo(Integer value) {
			addCriterion("ASSEROOMSBLINKSTATUS =", value,
					"asseroomsblinkstatus");
			return this;
		}

		public Criteria andAsseroomsblinkstatusNotEqualTo(Integer value) {
			addCriterion("ASSEROOMSBLINKSTATUS <>", value,
					"asseroomsblinkstatus");
			return this;
		}

		public Criteria andAsseroomsblinkstatusGreaterThan(Integer value) {
			addCriterion("ASSEROOMSBLINKSTATUS >", value,
					"asseroomsblinkstatus");
			return this;
		}

		public Criteria andAsseroomsblinkstatusGreaterThanOrEqualTo(
				Integer value) {
			addCriterion("ASSEROOMSBLINKSTATUS >=", value,
					"asseroomsblinkstatus");
			return this;
		}

		public Criteria andAsseroomsblinkstatusLessThan(Integer value) {
			addCriterion("ASSEROOMSBLINKSTATUS <", value,
					"asseroomsblinkstatus");
			return this;
		}

		public Criteria andAsseroomsblinkstatusLessThanOrEqualTo(Integer value) {
			addCriterion("ASSEROOMSBLINKSTATUS <=", value,
					"asseroomsblinkstatus");
			return this;
		}

		public Criteria andAsseroomsblinkstatusIn(List<Integer> values) {
			addCriterion("ASSEROOMSBLINKSTATUS in", values,
					"asseroomsblinkstatus");
			return this;
		}

		public Criteria andAsseroomsblinkstatusNotIn(List<Integer> values) {
			addCriterion("ASSEROOMSBLINKSTATUS not in", values,
					"asseroomsblinkstatus");
			return this;
		}

		public Criteria andAsseroomsblinkstatusBetween(Integer value1,
				Integer value2) {
			addCriterion("ASSEROOMSBLINKSTATUS between", value1, value2,
					"asseroomsblinkstatus");
			return this;
		}

		public Criteria andAsseroomsblinkstatusNotBetween(Integer value1,
				Integer value2) {
			addCriterion("ASSEROOMSBLINKSTATUS not between", value1, value2,
					"asseroomsblinkstatus");
			return this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterion("CRTIME =", value, "crtime");
			return this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterion("CRTIME <>", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterion("CRTIME >", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("CRTIME >=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterion("CRTIME <", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterion("CRTIME <=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterion("CRTIME in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterion("CRTIME not in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterion("CRTIME between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterion("CRTIME not between", value1, value2, "crtime");
			return this;
		}
	}
}