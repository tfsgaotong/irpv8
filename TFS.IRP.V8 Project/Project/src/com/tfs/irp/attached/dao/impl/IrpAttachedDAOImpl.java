package com.tfs.irp.attached.dao.impl;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;


import com.tfs.irp.attached.dao.IrpAttachedDAO;
import com.tfs.irp.attached.entity.IrpAttached;
import com.tfs.irp.attached.entity.IrpAttachedExample;
import com.tfs.irp.util.PageUtil;

public class IrpAttachedDAOImpl  extends SqlMapClientDaoSupport implements IrpAttachedDAO {
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	public int countByExample(IrpAttachedExample example) throws SQLException {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"IRP_ATTACHED.ibatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	public int deleteByExample(IrpAttachedExample example) throws SQLException {
		int rows = getSqlMapClientTemplate().delete(
				"IRP_ATTACHED.ibatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	public int deleteByPrimaryKey(Long attachedid) throws SQLException {
		IrpAttached key = new IrpAttached();
		key.setAttachedid(attachedid);
		int rows = getSqlMapClientTemplate().delete(
				"IRP_ATTACHED.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	public void insert(IrpAttached record) throws SQLException {
		getSqlMapClientTemplate().insert("IRP_ATTACHED.ibatorgenerated_insert", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	public void insertSelective(IrpAttached record) throws SQLException {
		getSqlMapClientTemplate().insert("IRP_ATTACHED.ibatorgenerated_insertSelective",
				record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	@SuppressWarnings("unchecked")
	public List<IrpAttached> selectByExampleWithBLOBs(IrpAttachedExample example)
			throws SQLException {
		List<IrpAttached> list = getSqlMapClientTemplate().queryForList(
				"IRP_ATTACHED.ibatorgenerated_selectByExampleWithBLOBs",
				example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	@SuppressWarnings("unchecked")
	public List<IrpAttached> selectByExampleWithoutBLOBs(
			IrpAttachedExample example) throws SQLException {
		List<IrpAttached> list = getSqlMapClientTemplate().queryForList(
				"IRP_ATTACHED.ibatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	public IrpAttached selectByPrimaryKey(Long attachedid) throws SQLException {
		IrpAttached key = new IrpAttached();
		key.setAttachedid(attachedid);
		IrpAttached record = (IrpAttached) getSqlMapClientTemplate().queryForObject(
				"IRP_ATTACHED.ibatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	public int updateByExampleSelective(IrpAttached record,
			IrpAttachedExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_ATTACHED.ibatorgenerated_updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	public int updateByExampleWithBLOBs(IrpAttached record,
			IrpAttachedExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_ATTACHED.ibatorgenerated_updateByExampleWithBLOBs", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	public int updateByExampleWithoutBLOBs(IrpAttached record,
			IrpAttachedExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_ATTACHED.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	public int updateByPrimaryKeySelective(IrpAttached record)
			throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"IRP_ATTACHED.ibatorgenerated_updateByPrimaryKeySelective",
				record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	public int updateByPrimaryKeyWithBLOBs(IrpAttached record)
			throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"IRP_ATTACHED.ibatorgenerated_updateByPrimaryKeyWithBLOBs",
				record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	public int updateByPrimaryKeyWithoutBLOBs(IrpAttached record)
			throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"IRP_ATTACHED.ibatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_ATTACHED
	 * @ibatorgenerated  Tue Sep 17 10:40:38 CST 2013
	 */
	private static class UpdateByExampleParms extends IrpAttachedExample {
		private Object record;

		public UpdateByExampleParms(Object record, IrpAttachedExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}

	@Override
	public List<IrpAttached> getAttacehedByAttDocId(Long _attDocid,Integer _attDocidType)
			throws SQLException {
	Map map = new HashMap();
	map.put("attdocid", _attDocid);
	map.put("attdocidtype", _attDocidType);
		return getSqlMapClientTemplate().queryForList("IRP_ATTACHED.getAttacehedByAttDocId", map);
		
	}

	@Override
	public List<IrpAttached> getPortionAttached(Long _attDocid,Integer _attdocidtype)
			throws SQLException {
		// TODO Auto-generated method stub
		List<IrpAttached> list = null;
		Map map = new HashMap();
		map.put("attdocid",_attDocid);
		map.put("attdocidtype",_attdocidtype);
		list = this.getSqlMapClientTemplate().queryForList("IRP_ATTACHED.ibatorgenerated_selectportionbyquestionid", map);
		return list;
	} 
	@Override
	public List<IrpAttached> getAttachedByExampleSelf(
			IrpAttachedExample attachedExample, PageUtil pageUtil)
			throws SQLException {
		List<IrpAttached> list = null;
		list = this.getSqlMapClientTemplate().queryForList("IRP_ATTACHED.getAttachedByExampleSelf", attachedExample,pageUtil.getPageIndex(), pageUtil.getPageSize());
		return list;
	}

	@Override
	public List<IrpAttached> getAttachedByAttprop(Long taskid,
			Integer projectDocidtype) {
		Map map = new HashMap();
		map.put("attprop", taskid);
		map.put("attdocidtype", projectDocidtype);
			return getSqlMapClientTemplate().queryForList("IRP_ATTACHED.getAttacehedByattprop", map);
			
		}
}