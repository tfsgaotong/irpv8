package com.tfs.irp.bug_config.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpBugConfigExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_BUG_CONFIG
     *
     * @ibatorgenerated Thu Jan 21 15:14:13 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_BUG_CONFIG
     *
     * @ibatorgenerated Thu Jan 21 15:14:13 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_BUG_CONFIG
     *
     * @ibatorgenerated Thu Jan 21 15:14:13 CST 2016
     */
    public IrpBugConfigExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_BUG_CONFIG
     *
     * @ibatorgenerated Thu Jan 21 15:14:13 CST 2016
     */
    protected IrpBugConfigExample(IrpBugConfigExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_BUG_CONFIG
     *
     * @ibatorgenerated Thu Jan 21 15:14:13 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_BUG_CONFIG
     *
     * @ibatorgenerated Thu Jan 21 15:14:13 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_BUG_CONFIG
     *
     * @ibatorgenerated Thu Jan 21 15:14:13 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_BUG_CONFIG
     *
     * @ibatorgenerated Thu Jan 21 15:14:13 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_BUG_CONFIG
     *
     * @ibatorgenerated Thu Jan 21 15:14:13 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_BUG_CONFIG
     *
     * @ibatorgenerated Thu Jan 21 15:14:13 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_BUG_CONFIG
     *
     * @ibatorgenerated Thu Jan 21 15:14:13 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_BUG_CONFIG
     *
     * @ibatorgenerated Thu Jan 21 15:14:13 CST 2016
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andBugconfigidIsNull() {
            addCriterion("BUGCONFIGID is null");
            return this;
        }

        public Criteria andBugconfigidIsNotNull() {
            addCriterion("BUGCONFIGID is not null");
            return this;
        }

        public Criteria andBugconfigidEqualTo(Long value) {
            addCriterion("BUGCONFIGID =", value, "bugconfigid");
            return this;
        }

        public Criteria andBugconfigidNotEqualTo(Long value) {
            addCriterion("BUGCONFIGID <>", value, "bugconfigid");
            return this;
        }

        public Criteria andBugconfigidGreaterThan(Long value) {
            addCriterion("BUGCONFIGID >", value, "bugconfigid");
            return this;
        }

        public Criteria andBugconfigidGreaterThanOrEqualTo(Long value) {
            addCriterion("BUGCONFIGID >=", value, "bugconfigid");
            return this;
        }

        public Criteria andBugconfigidLessThan(Long value) {
            addCriterion("BUGCONFIGID <", value, "bugconfigid");
            return this;
        }

        public Criteria andBugconfigidLessThanOrEqualTo(Long value) {
            addCriterion("BUGCONFIGID <=", value, "bugconfigid");
            return this;
        }

        public Criteria andBugconfigidIn(List<Long> values) {
            addCriterion("BUGCONFIGID in", values, "bugconfigid");
            return this;
        }

        public Criteria andBugconfigidNotIn(List<Long> values) {
            addCriterion("BUGCONFIGID not in", values, "bugconfigid");
            return this;
        }

        public Criteria andBugconfigidBetween(Long value1, Long value2) {
            addCriterion("BUGCONFIGID between", value1, value2, "bugconfigid");
            return this;
        }

        public Criteria andBugconfigidNotBetween(Long value1, Long value2) {
            addCriterion("BUGCONFIGID not between", value1, value2, "bugconfigid");
            return this;
        }

        public Criteria andProidIsNull() {
            addCriterion("PROID is null");
            return this;
        }

        public Criteria andProidIsNotNull() {
            addCriterion("PROID is not null");
            return this;
        }

        public Criteria andProidEqualTo(Long value) {
            addCriterion("PROID =", value, "proid");
            return this;
        }

        public Criteria andProidNotEqualTo(Long value) {
            addCriterion("PROID <>", value, "proid");
            return this;
        }

        public Criteria andProidGreaterThan(Long value) {
            addCriterion("PROID >", value, "proid");
            return this;
        }

        public Criteria andProidGreaterThanOrEqualTo(Long value) {
            addCriterion("PROID >=", value, "proid");
            return this;
        }

        public Criteria andProidLessThan(Long value) {
            addCriterion("PROID <", value, "proid");
            return this;
        }

        public Criteria andProidLessThanOrEqualTo(Long value) {
            addCriterion("PROID <=", value, "proid");
            return this;
        }

        public Criteria andProidIn(List<Long> values) {
            addCriterion("PROID in", values, "proid");
            return this;
        }

        public Criteria andProidNotIn(List<Long> values) {
            addCriterion("PROID not in", values, "proid");
            return this;
        }

        public Criteria andProidBetween(Long value1, Long value2) {
            addCriterion("PROID between", value1, value2, "proid");
            return this;
        }

        public Criteria andProidNotBetween(Long value1, Long value2) {
            addCriterion("PROID not between", value1, value2, "proid");
            return this;
        }

        public Criteria andVersionnameIsNull() {
            addCriterion("VERSIONNAME is null");
            return this;
        }

        public Criteria andVersionnameIsNotNull() {
            addCriterion("VERSIONNAME is not null");
            return this;
        }

        public Criteria andVersionnameEqualTo(String value) {
            addCriterion("VERSIONNAME =", value, "versionname");
            return this;
        }

        public Criteria andVersionnameNotEqualTo(String value) {
            addCriterion("VERSIONNAME <>", value, "versionname");
            return this;
        }

        public Criteria andVersionnameGreaterThan(String value) {
            addCriterion("VERSIONNAME >", value, "versionname");
            return this;
        }

        public Criteria andVersionnameGreaterThanOrEqualTo(String value) {
            addCriterion("VERSIONNAME >=", value, "versionname");
            return this;
        }

        public Criteria andVersionnameLessThan(String value) {
            addCriterion("VERSIONNAME <", value, "versionname");
            return this;
        }

        public Criteria andVersionnameLessThanOrEqualTo(String value) {
            addCriterion("VERSIONNAME <=", value, "versionname");
            return this;
        }

        public Criteria andVersionnameLike(String value) {
            addCriterion("VERSIONNAME like", value, "versionname");
            return this;
        }

        public Criteria andVersionnameNotLike(String value) {
            addCriterion("VERSIONNAME not like", value, "versionname");
            return this;
        }

        public Criteria andVersionnameIn(List<String> values) {
            addCriterion("VERSIONNAME in", values, "versionname");
            return this;
        }

        public Criteria andVersionnameNotIn(List<String> values) {
            addCriterion("VERSIONNAME not in", values, "versionname");
            return this;
        }

        public Criteria andVersionnameBetween(String value1, String value2) {
            addCriterion("VERSIONNAME between", value1, value2, "versionname");
            return this;
        }

        public Criteria andVersionnameNotBetween(String value1, String value2) {
            addCriterion("VERSIONNAME not between", value1, value2, "versionname");
            return this;
        }

        public Criteria andModulnameIsNull() {
            addCriterion("MODULNAME is null");
            return this;
        }

        public Criteria andModulnameIsNotNull() {
            addCriterion("MODULNAME is not null");
            return this;
        }

        public Criteria andModulnameEqualTo(String value) {
            addCriterion("MODULNAME =", value, "modulname");
            return this;
        }

        public Criteria andModulnameNotEqualTo(String value) {
            addCriterion("MODULNAME <>", value, "modulname");
            return this;
        }

        public Criteria andModulnameGreaterThan(String value) {
            addCriterion("MODULNAME >", value, "modulname");
            return this;
        }

        public Criteria andModulnameGreaterThanOrEqualTo(String value) {
            addCriterion("MODULNAME >=", value, "modulname");
            return this;
        }

        public Criteria andModulnameLessThan(String value) {
            addCriterion("MODULNAME <", value, "modulname");
            return this;
        }

        public Criteria andModulnameLessThanOrEqualTo(String value) {
            addCriterion("MODULNAME <=", value, "modulname");
            return this;
        }

        public Criteria andModulnameLike(String value) {
            addCriterion("MODULNAME like", value, "modulname");
            return this;
        }

        public Criteria andModulnameNotLike(String value) {
            addCriterion("MODULNAME not like", value, "modulname");
            return this;
        }

        public Criteria andModulnameIn(List<String> values) {
            addCriterion("MODULNAME in", values, "modulname");
            return this;
        }

        public Criteria andModulnameNotIn(List<String> values) {
            addCriterion("MODULNAME not in", values, "modulname");
            return this;
        }

        public Criteria andModulnameBetween(String value1, String value2) {
            addCriterion("MODULNAME between", value1, value2, "modulname");
            return this;
        }

        public Criteria andModulnameNotBetween(String value1, String value2) {
            addCriterion("MODULNAME not between", value1, value2, "modulname");
            return this;
        }

        public Criteria andVersioncommentIsNull() {
            addCriterion("VERSIONCOMMENT is null");
            return this;
        }

        public Criteria andVersioncommentIsNotNull() {
            addCriterion("VERSIONCOMMENT is not null");
            return this;
        }

        public Criteria andVersioncommentEqualTo(String value) {
            addCriterion("VERSIONCOMMENT =", value, "versioncomment");
            return this;
        }

        public Criteria andVersioncommentNotEqualTo(String value) {
            addCriterion("VERSIONCOMMENT <>", value, "versioncomment");
            return this;
        }

        public Criteria andVersioncommentGreaterThan(String value) {
            addCriterion("VERSIONCOMMENT >", value, "versioncomment");
            return this;
        }

        public Criteria andVersioncommentGreaterThanOrEqualTo(String value) {
            addCriterion("VERSIONCOMMENT >=", value, "versioncomment");
            return this;
        }

        public Criteria andVersioncommentLessThan(String value) {
            addCriterion("VERSIONCOMMENT <", value, "versioncomment");
            return this;
        }

        public Criteria andVersioncommentLessThanOrEqualTo(String value) {
            addCriterion("VERSIONCOMMENT <=", value, "versioncomment");
            return this;
        }

        public Criteria andVersioncommentLike(String value) {
            addCriterion("VERSIONCOMMENT like", value, "versioncomment");
            return this;
        }

        public Criteria andVersioncommentNotLike(String value) {
            addCriterion("VERSIONCOMMENT not like", value, "versioncomment");
            return this;
        }

        public Criteria andVersioncommentIn(List<String> values) {
            addCriterion("VERSIONCOMMENT in", values, "versioncomment");
            return this;
        }

        public Criteria andVersioncommentNotIn(List<String> values) {
            addCriterion("VERSIONCOMMENT not in", values, "versioncomment");
            return this;
        }

        public Criteria andVersioncommentBetween(String value1, String value2) {
            addCriterion("VERSIONCOMMENT between", value1, value2, "versioncomment");
            return this;
        }

        public Criteria andVersioncommentNotBetween(String value1, String value2) {
            addCriterion("VERSIONCOMMENT not between", value1, value2, "versioncomment");
            return this;
        }

        public Criteria andModulcommentIsNull() {
            addCriterion("MODULCOMMENT is null");
            return this;
        }

        public Criteria andModulcommentIsNotNull() {
            addCriterion("MODULCOMMENT is not null");
            return this;
        }

        public Criteria andModulcommentEqualTo(String value) {
            addCriterion("MODULCOMMENT =", value, "modulcomment");
            return this;
        }

        public Criteria andModulcommentNotEqualTo(String value) {
            addCriterion("MODULCOMMENT <>", value, "modulcomment");
            return this;
        }

        public Criteria andModulcommentGreaterThan(String value) {
            addCriterion("MODULCOMMENT >", value, "modulcomment");
            return this;
        }

        public Criteria andModulcommentGreaterThanOrEqualTo(String value) {
            addCriterion("MODULCOMMENT >=", value, "modulcomment");
            return this;
        }

        public Criteria andModulcommentLessThan(String value) {
            addCriterion("MODULCOMMENT <", value, "modulcomment");
            return this;
        }

        public Criteria andModulcommentLessThanOrEqualTo(String value) {
            addCriterion("MODULCOMMENT <=", value, "modulcomment");
            return this;
        }

        public Criteria andModulcommentLike(String value) {
            addCriterion("MODULCOMMENT like", value, "modulcomment");
            return this;
        }

        public Criteria andModulcommentNotLike(String value) {
            addCriterion("MODULCOMMENT not like", value, "modulcomment");
            return this;
        }

        public Criteria andModulcommentIn(List<String> values) {
            addCriterion("MODULCOMMENT in", values, "modulcomment");
            return this;
        }

        public Criteria andModulcommentNotIn(List<String> values) {
            addCriterion("MODULCOMMENT not in", values, "modulcomment");
            return this;
        }

        public Criteria andModulcommentBetween(String value1, String value2) {
            addCriterion("MODULCOMMENT between", value1, value2, "modulcomment");
            return this;
        }

        public Criteria andModulcommentNotBetween(String value1, String value2) {
            addCriterion("MODULCOMMENT not between", value1, value2, "modulcomment");
            return this;
        }

        public Criteria andConfigtypeIsNull() {
            addCriterion("CONFIGTYPE is null");
            return this;
        }

        public Criteria andConfigtypeIsNotNull() {
            addCriterion("CONFIGTYPE is not null");
            return this;
        }

        public Criteria andConfigtypeEqualTo(Long value) {
            addCriterion("CONFIGTYPE =", value, "configtype");
            return this;
        }

        public Criteria andConfigtypeNotEqualTo(Long value) {
            addCriterion("CONFIGTYPE <>", value, "configtype");
            return this;
        }

        public Criteria andConfigtypeGreaterThan(Long value) {
            addCriterion("CONFIGTYPE >", value, "configtype");
            return this;
        }

        public Criteria andConfigtypeGreaterThanOrEqualTo(Long value) {
            addCriterion("CONFIGTYPE >=", value, "configtype");
            return this;
        }

        public Criteria andConfigtypeLessThan(Long value) {
            addCriterion("CONFIGTYPE <", value, "configtype");
            return this;
        }

        public Criteria andConfigtypeLessThanOrEqualTo(Long value) {
            addCriterion("CONFIGTYPE <=", value, "configtype");
            return this;
        }

        public Criteria andConfigtypeIn(List<Long> values) {
            addCriterion("CONFIGTYPE in", values, "configtype");
            return this;
        }

        public Criteria andConfigtypeNotIn(List<Long> values) {
            addCriterion("CONFIGTYPE not in", values, "configtype");
            return this;
        }

        public Criteria andConfigtypeBetween(Long value1, Long value2) {
            addCriterion("CONFIGTYPE between", value1, value2, "configtype");
            return this;
        }

        public Criteria andConfigtypeNotBetween(Long value1, Long value2) {
            addCriterion("CONFIGTYPE not between", value1, value2, "configtype");
            return this;
        }
    }
}