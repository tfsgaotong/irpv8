package com.tfs.irp.channel.dao.impl;

import com.tfs.irp.attached.entity.IrpAttachedExample;
import com.tfs.irp.channel.dao.IrpChannelDAO;
import com.tfs.irp.channel.entity.IrpChannel;
import com.tfs.irp.channel.entity.IrpChannelExample;
import com.tfs.irp.channel.service.IrpChannelService;
import com.tfs.irp.docstatus.entity.IrpDocstatus;
import com.tfs.irp.docstatus.entity.IrpDocstatusExample;
import com.tfs.irp.util.PageUtil;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class IrpChannelDAOImpl extends SqlMapClientDaoSupport implements IrpChannelDAO {
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHANNEL
	 * @ibatorgenerated  Tue Mar 26 17:33:55 CST 2013
	 */
	public int countByExample(IrpChannelExample example) throws SQLException {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"IRP_CHANNEL.ibatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHANNEL
	 * @ibatorgenerated  Tue Mar 26 17:33:55 CST 2013
	 */
	public int deleteByExample(IrpChannelExample example) throws SQLException {
		int rows =0;
		rows = getSqlMapClientTemplate().delete( "IRP_CHANNEL.ibatorgenerated_deleteByExample", example);
		return rows;
	}
	
	
	public int reorderByChannel(Map<String, Object> _mParam) {
		int rows = 0;
		rows = getSqlMapClientTemplate().update("IRP_CHANNEL.updateChnlOrderToCount", _mParam);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHANNEL
	 * @ibatorgenerated  Tue Mar 26 17:33:55 CST 2013
	 */
	public int deleteByPrimaryKey(Long channelid) throws SQLException {
		IrpChannel key = new IrpChannel();
		key.setChannelid(channelid);
		int rows = getSqlMapClientTemplate().delete(
				"IRP_CHANNEL.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHANNEL
	 * @ibatorgenerated  Tue Mar 26 17:33:55 CST 2013
	 */
	public void insert(IrpChannel record) throws SQLException {
		getSqlMapClientTemplate().insert("IRP_CHANNEL.ibatorgenerated_insert", record);
	}
	//修改比当前选择栏目的chnlorder大的值
	public void updateChnlOrder(HashMap<String,Long> map)throws SQLException{
		 getSqlMapClientTemplate().update("IRP_CHANNEL.updatechnlorder",map);
	} 
	
	public void insertSelective(IrpChannel record) throws SQLException {
		//同一级的栏目下排序
		Long _siteid=record.getSiteid(); 
		Long _parentid=record.getParentid();
		Long _chnlOrder=record.getChnlorder();
		if(_chnlOrder!=null ){ 
			HashMap<String,Long> map=new HashMap<String, Long>();
			map.put("siteid",_siteid);
			map.put("parentid",_parentid);
			map.put("chnlorder",_chnlOrder);
			//如果添加默认
	 		if( _chnlOrder==0){ 
	 			record.setChnlorder(1L);//排在第一位 
	 			updateChnlOrder(map); //调用它的修改方法将比他大的全部加1
		     }else{  
			 	record.setChnlorder(_chnlOrder+1);
			 	updateChnlOrder(map);//调用它的修改方法将比他大的全部加1
			 }  	
	 	} 
			getSqlMapClientTemplate().insert("IRP_CHANNEL.ibatorgenerated_insertSelective",record);
	}
 
	@SuppressWarnings("unchecked")
	public List<IrpChannel> selectByExample(IrpChannelExample example)
			throws SQLException {
		List<IrpChannel> list = getSqlMapClientTemplate().queryForList(
				"IRP_CHANNEL.ibatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHANNEL
	 * @ibatorgenerated  Tue Mar 26 17:33:55 CST 2013
	 */
	public IrpChannel selectByPrimaryKey(Long channelid) throws SQLException {
		IrpChannel key = new IrpChannel();
		key.setChannelid(channelid);
		IrpChannel record = (IrpChannel) getSqlMapClientTemplate().queryForObject(
				"IRP_CHANNEL.ibatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHANNEL
	 * @ibatorgenerated  Tue Mar 26 17:33:55 CST 2013
	 */
	public int updateByExampleSelective(IrpChannel record,
			IrpChannelExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_CHANNEL.ibatorgenerated_updateByExampleSelective", parms);
		return rows;
	}
	private static class UpdateByExampleParms extends IrpChannelExample {
		private Object record;

		public UpdateByExampleParms(Object record, IrpChannelExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}

 /**
  * 根据自己的id查询自己的chnlorder
  */
	public Long selectChnlOrderByChannelid(Long _channelid){
		
		Long _nchnlorder=(Long) getSqlMapClientTemplate().queryForObject("IRP_CHANNEL.selectChnlOrderByChannelId",_channelid);
		return _nchnlorder;
	}
	//排序
	 public void updateChnlOrderJiaBetweenBAndC(HashMap<String,Long> map){
		 IrpChannelExample example=new IrpChannelExample();
		 example.createCriteria().andSiteidEqualTo(map.get("siteid"))
		           					.andParentidEqualTo(map.get("parentid"))
		           					.andChnlorderBetween(map.get("minOrder"), map.get("maxOrder"));
		getSqlMapClientTemplate().update("IRP_CHANNEL.updateChnlOrderJiaBetweenBAndC", example);
	 }
     public void updateChnlOrderJianBetweenBAndC(HashMap<String,Long> map){
		 IrpChannelExample example=new IrpChannelExample(); 
		 example.createCriteria().andSiteidEqualTo(map.get("siteid"))
		           					.andParentidEqualTo(map.get("parentid"))
		           					.andChnlorderBetween(map.get("minOrder"), map.get("maxOrder"));
		 getSqlMapClientTemplate().update("IRP_CHANNEL.updateChnlOrderJianBetweenBAndC", example);
	 } 
	public int updateByPrimaryKeySelective(IrpChannel record) throws SQLException {
		int rows =0;
			 Long thischnlOrder=selectChnlOrderByChannelid(record.getChannelid());
			 Long _chnlOrder=record.getChnlorder(); 
			 //判断这两个siteorder
			 if(thischnlOrder!=null && thischnlOrder!=null ){ 
				 HashMap<String,Long> map =new HashMap<String, Long>() ; //相等不执行任何操作 
				 map.put("siteid",record.getSiteid());
				 map.put("parentid",record.getParentid());
				 if(_chnlOrder!=null ){
					 if(_chnlOrder==0){ 
						 record.setChnlorder(1L);//将自己排在首位
						 map.put("chnlorder",0L);
						 updateChnlOrder(map); 
					 }else if(thischnlOrder>_chnlOrder){//本身大于选择
					 ///查询他们之间的所有siteorder 不包括本身
						map.put("minOrder", _chnlOrder+1);
						map.put("maxOrder", thischnlOrder);  
							record.setChnlorder(_chnlOrder+1);
							updateChnlOrderJiaBetweenBAndC(map); 
					 }  else if(thischnlOrder<_chnlOrder)//本身小于选择
					 {
						 map.put("minOrder", thischnlOrder);  
						 map.put("maxOrder", _chnlOrder);
						 record.setChnlorder(_chnlOrder); 
						 updateChnlOrderJianBetweenBAndC(map); 
					 } 
				 } 
				 //若果他和本身相等就不处理 
				 rows = getSqlMapClientTemplate().update( "IRP_CHANNEL.ibatorgenerated_updateByPrimaryKeySelective", record);
			 }
			 return rows;
	}

	@Override
	public List<IrpChannel> selectChannelIdsByExample(IrpChannelExample example) throws SQLException {
		List<IrpChannel> list = getSqlMapClientTemplate().queryForList( "IRP_CHANNEL.selectChannelIdsByExample", example);
		return list;
	}
	
	@Override
	public List<Long> selectIdsByExample(IrpChannelExample example) throws SQLException {
		List<Long> list = getSqlMapClientTemplate().queryForList( "IRP_CHANNEL.selectIdsByExample", example);
		return list;
	}
	public int updateByExample(IrpChannel record, IrpChannelExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_CHANNEL.ibatorgenerated_updateByExample", parms);
		return rows;
	}
	public int updateByPrimaryKey(IrpChannel record) throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"IRP_CHANNEL.ibatorgenerated_updateByPrimaryKey", record);
		return rows;
	} 
	 
    @Override
    public List<IrpChannel> site_allChannel(PageUtil pageUtil,IrpChannelExample example)throws SQLException {  
    	 List<IrpChannel> list=null;
    	if(pageUtil!=null){
    		list=getSqlMapClientTemplate().queryForList("IRP_CHANNEL.site_toallChannel",example,pageUtil.getPageIndex(), pageUtil.getPageSize()); 
         }
    	else{
    	  list=getSqlMapClientTemplate().queryForList("IRP_CHANNEL.site_toallChannel",example);  
    	}  
    	 return list;
    }
    @Override
    public int findChild_Channl_CountByParentId(Long channelid) throws SQLException { 
    	 return 0;
    }
    @Override
    public int updateStatusByParentid(Map<String, Object> _mParam)throws SQLException {  
        int nCount= getSqlMapClientTemplate().update("IRP_CHANNEL.updateStatusByParentID", _mParam);
    	return nCount;
    }
    public Long selectChannelIdsByChnlName(String chnlname)throws SQLException {
    	  Long chnlid=(Long)getSqlMapClientTemplate().queryForObject("IRP_CHANNEL.selectChannelIdsByChnlName", chnlname); 
       	  return chnlid;
    }
   
    @Override
    public int countByMap(IrpChannelExample example)throws SQLException { 
    	 int chnlid=(Integer)getSqlMapClientTemplate().queryForObject("IRP_CHANNEL.selectCountByMap", example);   
    	 return chnlid;
    }
 @Override
public String findChannelNameByChannelid(Long _channelid)throws SQLException {
	// TODO Auto-generated method stub
	 String chnlName=(String)getSqlMapClientTemplate().queryForObject("IRP_CHANNEL.selectChanDescByChannelId",_channelid);
	 return chnlName;
}

@Override
public List<IrpChannel> selectByExample(PageUtil page, IrpChannelExample example) {
	List<IrpChannel> list = getSqlMapClientTemplate().queryForList("IRP_CHANNEL.ibatorgenerated_selectByExample", example,page.getPageIndex(),page.getPageSize());
	return list;
}
}