package com.tfs.irp.chnl_doc_link.dao.impl;

import com.tfs.irp.chnl_doc_link.dao.IrpChnlDocLinkDAO;
import com.tfs.irp.chnl_doc_link.entity.IrpChnlDocLink;
import com.tfs.irp.chnl_doc_link.entity.IrpChnlDocLinkExample; 
import com.tfs.irp.util.PageUtil;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class IrpChnlDocLinkDAOImpl extends SqlMapClientDaoSupport implements IrpChnlDocLinkDAO {
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHNL_DOC_LINK
	 * @ibatorgenerated  Fri Sep 27 15:45:21 CST 2013
	 */
	public int countByExample(IrpChnlDocLinkExample example)
			throws SQLException {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"IRP_CHNL_DOC_LINK.ibatorgenerated_countByExample", example);
		return count;
	}
	@Override
	public int typicalDocLinkAmount(IrpChnlDocLinkExample example) throws SQLException {
			Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
					"IRP_CHNL_DOC_LINK.typicalDocLinkamount", example);
			return count;
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHNL_DOC_LINK
	 * @ibatorgenerated  Fri Sep 27 15:45:21 CST 2013
	 */
	public int deleteByExample(IrpChnlDocLinkExample example)
			throws SQLException {
		int rows = getSqlMapClientTemplate().delete(
				"IRP_CHNL_DOC_LINK.ibatorgenerated_deleteByExample", example);
		return rows;
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHNL_DOC_LINK
	 * @ibatorgenerated  Fri Sep 27 15:45:21 CST 2013
	 */
	public int deleteByPrimaryKey(Long chnldocid) throws SQLException {
		IrpChnlDocLink key = new IrpChnlDocLink();
		key.setChnldocid(chnldocid);
		int rows = getSqlMapClientTemplate().delete(
				"IRP_CHNL_DOC_LINK.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHNL_DOC_LINK
	 * @ibatorgenerated  Fri Sep 27 15:45:21 CST 2013
	 */
	public void insert(IrpChnlDocLink record) throws SQLException {
		getSqlMapClientTemplate().insert("IRP_CHNL_DOC_LINK.ibatorgenerated_insert", record);
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHNL_DOC_LINK
	 * @ibatorgenerated  Fri Sep 27 15:45:21 CST 2013
	 */
	public void insertSelective(IrpChnlDocLink record) throws SQLException {
		getSqlMapClientTemplate().insert(
				"IRP_CHNL_DOC_LINK.ibatorgenerated_insertSelective", record);
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHNL_DOC_LINK
	 * @ibatorgenerated  Fri Sep 27 15:45:21 CST 2013
	 */
	@SuppressWarnings("unchecked")
	public List<IrpChnlDocLink> selectByExample(IrpChnlDocLinkExample example)
			throws SQLException {
		List<IrpChnlDocLink> list = getSqlMapClientTemplate().queryForList(
				"IRP_CHNL_DOC_LINK.ibatorgenerated_selectByExample", example);
		return list;
	}
	@Override
	public List<IrpChnlDocLink> selectByExample(IrpChnlDocLinkExample example,PageUtil pageUtil)
			throws SQLException {
		List<IrpChnlDocLink> list = null;
		if(pageUtil==null){
			 list = getSqlMapClientTemplate().queryForList( "IRP_CHNL_DOC_LINK.ibatorgenerated_selectByExample", example);

		}else{
			list = getSqlMapClientTemplate().queryForList( "IRP_CHNL_DOC_LINK.ibatorgenerated_selectByExample", example,pageUtil.getPageIndex(),pageUtil.getPageSize());
			
		}
		return list;
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHNL_DOC_LINK
	 * @ibatorgenerated  Fri Sep 27 15:45:21 CST 2013
	 */
	public IrpChnlDocLink selectByPrimaryKey(Long chnldocid)
			throws SQLException {
		IrpChnlDocLink key = new IrpChnlDocLink();
		key.setChnldocid(chnldocid);
		IrpChnlDocLink record = (IrpChnlDocLink) getSqlMapClientTemplate().queryForObject(
				"IRP_CHNL_DOC_LINK.ibatorgenerated_selectByPrimaryKey", key);
		return record;
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHNL_DOC_LINK
	 * @ibatorgenerated  Fri Sep 27 15:45:21 CST 2013
	 */
	public int updateByExampleSelective(IrpChnlDocLink record,
			IrpChnlDocLinkExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_CHNL_DOC_LINK.ibatorgenerated_updateByExampleSelective",
				parms);
		return rows;
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHNL_DOC_LINK
	 * @ibatorgenerated  Fri Sep 27 15:45:21 CST 2013
	 */
	public int updateByExample(IrpChnlDocLink record,
			IrpChnlDocLinkExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_CHNL_DOC_LINK.ibatorgenerated_updateByExample", parms);
		return rows;
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHNL_DOC_LINK
	 * @ibatorgenerated  Fri Sep 27 15:45:21 CST 2013
	 */
	public int updateByPrimaryKeySelective(IrpChnlDocLink record)
			throws SQLException {
		int rows = getSqlMapClientTemplate()
				.update("IRP_CHNL_DOC_LINK.ibatorgenerated_updateByPrimaryKeySelective",
						record);
		return rows;
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_CHNL_DOC_LINK
	 * @ibatorgenerated  Fri Sep 27 15:45:21 CST 2013
	 */
	public int updateByPrimaryKey(IrpChnlDocLink record) throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"IRP_CHNL_DOC_LINK.ibatorgenerated_updateByPrimaryKey", record);
		return rows;
	}
	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_CHNL_DOC_LINK
	 * @ibatorgenerated  Fri Sep 27 15:45:21 CST 2013
	 */
	private static class UpdateByExampleParms extends IrpChnlDocLinkExample {
		private Object record;

		public UpdateByExampleParms(Object record, IrpChnlDocLinkExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
	@Override
public List<IrpChnlDocLink> monthDocument(Long _chnltype) throws SQLException{
	// TODO Auto-generated method stub
	List list =  new ArrayList();
	list= getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.monthdocument",_chnltype);
	return  list; 
	 
}
	@Override
public List<Long> findDocidsByExample( IrpChnlDocLinkExample chnlDocLinkExample)	throws SQLException {
	List<Long>  list =  getSqlMapClientTemplate().queryForList( "IRP_CHNL_DOC_LINK.DocidsByExample", chnlDocLinkExample);
	return   list;
}


	@Override 
	public int sumByExample(IrpChnlDocLinkExample example)throws SQLException {
		 return (Integer)getSqlMapClientTemplate().queryForObject( "IRP_CHNL_DOC_LINK.ibatorgenerated_findSumByExample", example);
	}
	public int updateByChannelidExampleSelective(IrpChnlDocLink record, IrpChnlDocLinkExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update( "IRP_CHNL_DOC_LINK.updateChannelidByParentid", parms);
		return rows;
	}

	@Override
    public Long selectStatusByChnlDocid(Long chnldocid)throws SQLException {
    	Long status=new Long(0);
			List<Long> list=getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.selectStatusByChnlDocid", chnldocid);
			if(list!=null && list.size()!=0){
				status=list.get(0);
			}
    	return status;
    }
   
   
	@Override
	public List<Long> findChanDocIdByDocid(Long docid) throws SQLException {
		List<Long> chandocids=new ArrayList<Long>();
		chandocids=getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.findChanDocidByDocId",docid);
	        return chandocids;
	}
    
    @Override
    public List<IrpChnlDocLink> chan_AllDocLink(PageUtil pageUtil,IrpChnlDocLinkExample example) throws SQLException { 
    	/**/ 
    	List<IrpChnlDocLink> list= null;
    			if(pageUtil!=null){
    				list=getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.chan_allDocLink",example,pageUtil.getPageIndex(),pageUtil.getPageSize());
    			}else{
    				list=getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.chan_allDocLink",example);
    			}
    	 return list;
    }
    @Override
    public List<IrpChnlDocLink> site_AllDocLink(PageUtil pageUtil,IrpChnlDocLinkExample example) throws SQLException {  
    	 List<IrpChnlDocLink> list= getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.site_allDocLink",example,pageUtil.getPageIndex(),pageUtil.getPageSize());
    	 return list;
    } 
    @Override
    public List<IrpChnlDocLink> chan_AllDocLinkGC(PageUtil pageUtil ,IrpChnlDocLinkExample example) throws SQLException {
      List<IrpChnlDocLink> list= getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.chan_allDocLinkGC",example,pageUtil.getPageIndex(),pageUtil.getPageSize());
       return list;
    }
    @Override
    public List<IrpChnlDocLink> site_AllDocLinkGC(PageUtil pageUtil,IrpChnlDocLinkExample example) throws SQLException { 
    	 List<IrpChnlDocLink> list= getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.site_allDocLinkGC",example,pageUtil.getPageIndex(),pageUtil.getPageSize());
    	  return list;
    } 
   
    @Override
    public int  updateChan_Doc_ChannelidByChannelid(HashMap<String,Long> map)throws SQLException { 
    	return getSqlMapClientTemplate().update("IRP_CHNL_DOC_LINK.updateChan_Doc_ChannelidByChannelid",map);
    }
 @Override
public Long findChan_Doc_ChannelidByChannelid(Long channelid)
		throws SQLException { 
	      List<Long> list=getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.findChan_Doc_ChannelidByChannelid",channelid);
	     Long chanid=new Long(0);
	      if(list!=null &&list.size()!=0){
	    	   chanid=list.get(0);
	      }
	      return chanid;
}
 @Override
public int updateStatusByChnlDocid(HashMap<String, Long> map) throws SQLException {
	
	 int nCount= getSqlMapClientTemplate().update("IRP_CHNL_DOC_LINK.updateStatusByChnlDocid",map);
	 return nCount;
}
 public Long selectChnlDocidByDoctitle(String doctitle)throws SQLException {
	 return (Long)getSqlMapClientTemplate().queryForObject(doctitle);
	 
 }
 @Override
public List<IrpChnlDocLink> chan_allDoctitle(Long channelid) throws SQLException {
	 List<IrpChnlDocLink> linkds= getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.chan_allDoctitle",channelid);
	 return linkds;
}
 public int selectCountBySiteIdAndDocStatus(IrpChnlDocLinkExample example) throws SQLException {
	 int nCount=0;
	 nCount=(Integer)getSqlMapClientTemplate().queryForObject("IRP_CHNL_DOC_LINK.selectCountBySiteIdAndDocStatus", example);
	 return nCount; 
 }
 public int selectCountByChannelidAndDocStatus(IrpChnlDocLinkExample example) throws SQLException {
	 int nCount=0;
	 nCount=(Integer)getSqlMapClientTemplate().queryForObject("IRP_CHNL_DOC_LINK.selectCountByChannelidAndDocStatus", example);
	 return nCount; 
 }
 public int selectCountBySiteIdAndDocStatusGC(IrpChnlDocLinkExample example) throws SQLException {
	 int nCount=0;
	 nCount=(Integer)getSqlMapClientTemplate().queryForObject("IRP_CHNL_DOC_LINK.selectCountBySiteIdAndDocStatusGC", example);
	 return nCount; 
 }
 public int selectCountByChannelidAndDocStatusGC(IrpChnlDocLinkExample example) throws SQLException {
	 int nCount=0;
	 nCount=(Integer)getSqlMapClientTemplate().queryForObject("IRP_CHNL_DOC_LINK.selectCountByChannelidAndDocStatusGC", example);
	 return nCount; 
 }
 @Override
 public List<IrpChnlDocLink> getPersonLink(PageUtil pageUtil,IrpChnlDocLinkExample example) throws SQLException { 
 	 List<IrpChnlDocLink> list= getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.chan_allDocLink",example,pageUtil.getPageIndex(),pageUtil.getPageSize());
 	 return list;
 }
 @Override
public List  getCruSeridsByExample(IrpChnlDocLinkExample chnlDocLinkExample)throws SQLException  {
	// TODO Auto-generated method stub
	 List list= getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.ibatorgenerated_sumByExample",chnlDocLinkExample);
	return list;
}
 @Override
public List<IrpChnlDocLink> typicalDocLink(IrpChnlDocLinkExample example,PageUtil pageUtil) throws SQLException {
	// TODO Auto-generated method stub
	 if(pageUtil==null){
		return  getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.typicalDocLink",example);
	 } 
	return getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.typicalDocLink",example,pageUtil.getPageIndex(),pageUtil.getPageSize());
}
@Override
public  List<HashMap<String,Object>>  findJuBaoDocument(HashMap<String,Object> map,PageUtil pageUtil)throws SQLException {
	return getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.jubaodocument", map,pageUtil.getPageIndex(),pageUtil.getPageSize());
}
@Override
public Integer findJuBaoDocumentCount(HashMap<String, Object> map) throws SQLException {
	return (Integer) getSqlMapClientTemplate().queryForObject("IRP_CHNL_DOC_LINK.jubaocount",map);
}
	@Override
	public List<Map<String, Object>> findNewCommentDatas(Map<String, Object> _mParam, int nDataCount) throws SQLException {
		return getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.newCommentData", _mParam, 0, nDataCount);
	}
	
	@SuppressWarnings("unchecked")
	public List<IrpChnlDocLink> selectEssenceDocs(Map<String, Object> _mParam, PageUtil pageUtil) throws SQLException {
		List<IrpChnlDocLink> list =  getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.selectEssenceDocs", _mParam, pageUtil.getPageIndex(), pageUtil.getPageSize());
		return list;
	}
	
	public int countEssenceDocs(Map<String, Object> _mParam) throws SQLException {
		Object count = getSqlMapClientTemplate().queryForList("IRP_CHNL_DOC_LINK.countEssenceDocs", _mParam);
		if(count==null || count.toString().isEmpty()){
			return 0;
		}else{
			return Integer.parseInt(count.toString());
		}
	}
}