package com.tfs.irp.complain.dao.impl;

import com.tfs.irp.complain.dao.IrpComplainDAO;
import com.tfs.irp.complain.entity.IrpComplain;
import com.tfs.irp.complain.entity.IrpComplainExample;
import com.tfs.irp.util.PageUtil;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class IrpComplainDAOImpl extends SqlMapClientDaoSupport implements
		IrpComplainDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_COMPLAIN
	 * 
	 * @ibatorgenerated Tue Sep 24 10:03:35 CST 2013
	 */
	public int countByExample(IrpComplainExample example) throws SQLException {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"IRP_COMPLAIN.ibatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_COMPLAIN
	 * 
	 * @ibatorgenerated Tue Sep 24 10:03:35 CST 2013
	 */
	public int deleteByExample(IrpComplainExample example) throws SQLException {
		int rows = getSqlMapClientTemplate().delete(
				"IRP_COMPLAIN.ibatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_COMPLAIN
	 * 
	 * @ibatorgenerated Tue Sep 24 10:03:35 CST 2013
	 */
	public int deleteByPrimaryKey(Long complainid) throws SQLException {
		IrpComplain key = new IrpComplain();
		key.setComplainid(complainid);
		int rows = getSqlMapClientTemplate().delete(
				"IRP_COMPLAIN.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_COMPLAIN
	 * 
	 * @ibatorgenerated Tue Sep 24 10:03:35 CST 2013
	 */
	public void insert(IrpComplain record) throws SQLException {
		getSqlMapClientTemplate().insert("IRP_COMPLAIN.ibatorgenerated_insert",
				record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_COMPLAIN
	 * 
	 * @ibatorgenerated Tue Sep 24 10:03:35 CST 2013
	 */
	public void insertSelective(IrpComplain record) throws SQLException {
		getSqlMapClientTemplate().insert(
				"IRP_COMPLAIN.ibatorgenerated_insertSelective", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_COMPLAIN
	 * 
	 * @ibatorgenerated Tue Sep 24 10:03:35 CST 2013
	 */
	@SuppressWarnings("unchecked")
	public List<IrpComplain> selectByExample(IrpComplainExample example)
			throws SQLException {
		List<IrpComplain> list = getSqlMapClientTemplate().queryForList(
				"IRP_COMPLAIN.ibatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_COMPLAIN
	 * 
	 * @ibatorgenerated Tue Sep 24 10:03:35 CST 2013
	 */
	public IrpComplain selectByPrimaryKey(Long complainid) throws SQLException {
		IrpComplain key = new IrpComplain();
		key.setComplainid(complainid);
		IrpComplain record = (IrpComplain) getSqlMapClientTemplate()
				.queryForObject(
						"IRP_COMPLAIN.ibatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_COMPLAIN
	 * 
	 * @ibatorgenerated Tue Sep 24 10:03:35 CST 2013
	 */
	public int updateByExampleSelective(IrpComplain record,
			IrpComplainExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_COMPLAIN.ibatorgenerated_updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_COMPLAIN
	 * 
	 * @ibatorgenerated Tue Sep 24 10:03:35 CST 2013
	 */
	public int updateByExample(IrpComplain record, IrpComplainExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_COMPLAIN.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_COMPLAIN
	 * 
	 * @ibatorgenerated Tue Sep 24 10:03:35 CST 2013
	 */
	public int updateByPrimaryKeySelective(IrpComplain record)
			throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"IRP_COMPLAIN.ibatorgenerated_updateByPrimaryKeySelective",
				record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table IRP_COMPLAIN
	 * 
	 * @ibatorgenerated Tue Sep 24 10:03:35 CST 2013
	 */
	public int updateByPrimaryKey(IrpComplain record) throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"IRP_COMPLAIN.ibatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds
	 * to the database table IRP_COMPLAIN
	 * 
	 * @ibatorgenerated Tue Sep 24 10:03:35 CST 2013
	 */
	private static class UpdateByExampleParms extends IrpComplainExample {
		private Object record;

		public UpdateByExampleParms(Object record, IrpComplainExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}

	@Override
	public List<IrpComplain> selectByExample(Map<String, Object> map,
			PageUtil pageUtil) {
		List<IrpComplain> list = null;
		if (pageUtil != null) {
			list = getSqlMapClientTemplate().queryForList(
					"IRP_COMPLAIN.ibatorgenerated_complain", map,
					pageUtil.getPageIndex(), pageUtil.getPageSize());
		} else {
			list = getSqlMapClientTemplate().queryForList(
					"IRP_COMPLAIN.ibatorgenerated_complain", map);
		}
		return list;
	}
}