package com.tfs.irp.dbupdate.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class IrpDbupdateExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_DBUPDATE
	 * @ibatorgenerated  Wed Sep 11 13:03:13 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_DBUPDATE
	 * @ibatorgenerated  Wed Sep 11 13:03:13 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DBUPDATE
	 * @ibatorgenerated  Wed Sep 11 13:03:13 CST 2013
	 */
	public IrpDbupdateExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DBUPDATE
	 * @ibatorgenerated  Wed Sep 11 13:03:13 CST 2013
	 */
	protected IrpDbupdateExample(IrpDbupdateExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DBUPDATE
	 * @ibatorgenerated  Wed Sep 11 13:03:13 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DBUPDATE
	 * @ibatorgenerated  Wed Sep 11 13:03:13 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DBUPDATE
	 * @ibatorgenerated  Wed Sep 11 13:03:13 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DBUPDATE
	 * @ibatorgenerated  Wed Sep 11 13:03:13 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DBUPDATE
	 * @ibatorgenerated  Wed Sep 11 13:03:13 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DBUPDATE
	 * @ibatorgenerated  Wed Sep 11 13:03:13 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DBUPDATE
	 * @ibatorgenerated  Wed Sep 11 13:03:13 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_DBUPDATE
	 * @ibatorgenerated  Wed Sep 11 13:03:13 CST 2013
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andDbupidIsNull() {
			addCriterion("DBUPID is null");
			return this;
		}

		public Criteria andDbupidIsNotNull() {
			addCriterion("DBUPID is not null");
			return this;
		}

		public Criteria andDbupidEqualTo(Long value) {
			addCriterion("DBUPID =", value, "dbupid");
			return this;
		}

		public Criteria andDbupidNotEqualTo(Long value) {
			addCriterion("DBUPID <>", value, "dbupid");
			return this;
		}

		public Criteria andDbupidGreaterThan(Long value) {
			addCriterion("DBUPID >", value, "dbupid");
			return this;
		}

		public Criteria andDbupidGreaterThanOrEqualTo(Long value) {
			addCriterion("DBUPID >=", value, "dbupid");
			return this;
		}

		public Criteria andDbupidLessThan(Long value) {
			addCriterion("DBUPID <", value, "dbupid");
			return this;
		}

		public Criteria andDbupidLessThanOrEqualTo(Long value) {
			addCriterion("DBUPID <=", value, "dbupid");
			return this;
		}

		public Criteria andDbupidIn(List<Long> values) {
			addCriterion("DBUPID in", values, "dbupid");
			return this;
		}

		public Criteria andDbupidNotIn(List<Long> values) {
			addCriterion("DBUPID not in", values, "dbupid");
			return this;
		}

		public Criteria andDbupidBetween(Long value1, Long value2) {
			addCriterion("DBUPID between", value1, value2, "dbupid");
			return this;
		}

		public Criteria andDbupidNotBetween(Long value1, Long value2) {
			addCriterion("DBUPID not between", value1, value2, "dbupid");
			return this;
		}

		public Criteria andDbupnameIsNull() {
			addCriterion("DBUPNAME is null");
			return this;
		}

		public Criteria andDbupnameIsNotNull() {
			addCriterion("DBUPNAME is not null");
			return this;
		}

		public Criteria andDbupnameEqualTo(String value) {
			addCriterion("DBUPNAME =", value, "dbupname");
			return this;
		}

		public Criteria andDbupnameNotEqualTo(String value) {
			addCriterion("DBUPNAME <>", value, "dbupname");
			return this;
		}

		public Criteria andDbupnameGreaterThan(String value) {
			addCriterion("DBUPNAME >", value, "dbupname");
			return this;
		}

		public Criteria andDbupnameGreaterThanOrEqualTo(String value) {
			addCriterion("DBUPNAME >=", value, "dbupname");
			return this;
		}

		public Criteria andDbupnameLessThan(String value) {
			addCriterion("DBUPNAME <", value, "dbupname");
			return this;
		}

		public Criteria andDbupnameLessThanOrEqualTo(String value) {
			addCriterion("DBUPNAME <=", value, "dbupname");
			return this;
		}

		public Criteria andDbupnameLike(String value) {
			addCriterion("DBUPNAME like", value, "dbupname");
			return this;
		}

		public Criteria andDbupnameNotLike(String value) {
			addCriterion("DBUPNAME not like", value, "dbupname");
			return this;
		}

		public Criteria andDbupnameIn(List<String> values) {
			addCriterion("DBUPNAME in", values, "dbupname");
			return this;
		}

		public Criteria andDbupnameNotIn(List<String> values) {
			addCriterion("DBUPNAME not in", values, "dbupname");
			return this;
		}

		public Criteria andDbupnameBetween(String value1, String value2) {
			addCriterion("DBUPNAME between", value1, value2, "dbupname");
			return this;
		}

		public Criteria andDbupnameNotBetween(String value1, String value2) {
			addCriterion("DBUPNAME not between", value1, value2, "dbupname");
			return this;
		}

		public Criteria andDbupversionIsNull() {
			addCriterion("DBUPVERSION is null");
			return this;
		}

		public Criteria andDbupversionIsNotNull() {
			addCriterion("DBUPVERSION is not null");
			return this;
		}

		public Criteria andDbupversionEqualTo(String value) {
			addCriterion("DBUPVERSION =", value, "dbupversion");
			return this;
		}

		public Criteria andDbupversionNotEqualTo(String value) {
			addCriterion("DBUPVERSION <>", value, "dbupversion");
			return this;
		}

		public Criteria andDbupversionGreaterThan(String value) {
			addCriterion("DBUPVERSION >", value, "dbupversion");
			return this;
		}

		public Criteria andDbupversionGreaterThanOrEqualTo(String value) {
			addCriterion("DBUPVERSION >=", value, "dbupversion");
			return this;
		}

		public Criteria andDbupversionLessThan(String value) {
			addCriterion("DBUPVERSION <", value, "dbupversion");
			return this;
		}

		public Criteria andDbupversionLessThanOrEqualTo(String value) {
			addCriterion("DBUPVERSION <=", value, "dbupversion");
			return this;
		}

		public Criteria andDbupversionLike(String value) {
			addCriterion("DBUPVERSION like", value, "dbupversion");
			return this;
		}

		public Criteria andDbupversionNotLike(String value) {
			addCriterion("DBUPVERSION not like", value, "dbupversion");
			return this;
		}

		public Criteria andDbupversionIn(List<String> values) {
			addCriterion("DBUPVERSION in", values, "dbupversion");
			return this;
		}

		public Criteria andDbupversionNotIn(List<String> values) {
			addCriterion("DBUPVERSION not in", values, "dbupversion");
			return this;
		}

		public Criteria andDbupversionBetween(String value1, String value2) {
			addCriterion("DBUPVERSION between", value1, value2, "dbupversion");
			return this;
		}

		public Criteria andDbupversionNotBetween(String value1, String value2) {
			addCriterion("DBUPVERSION not between", value1, value2,
					"dbupversion");
			return this;
		}

		public Criteria andDbupinfoIsNull() {
			addCriterion("DBUPINFO is null");
			return this;
		}

		public Criteria andDbupinfoIsNotNull() {
			addCriterion("DBUPINFO is not null");
			return this;
		}

		public Criteria andDbupinfoEqualTo(String value) {
			addCriterion("DBUPINFO =", value, "dbupinfo");
			return this;
		}

		public Criteria andDbupinfoNotEqualTo(String value) {
			addCriterion("DBUPINFO <>", value, "dbupinfo");
			return this;
		}

		public Criteria andDbupinfoGreaterThan(String value) {
			addCriterion("DBUPINFO >", value, "dbupinfo");
			return this;
		}

		public Criteria andDbupinfoGreaterThanOrEqualTo(String value) {
			addCriterion("DBUPINFO >=", value, "dbupinfo");
			return this;
		}

		public Criteria andDbupinfoLessThan(String value) {
			addCriterion("DBUPINFO <", value, "dbupinfo");
			return this;
		}

		public Criteria andDbupinfoLessThanOrEqualTo(String value) {
			addCriterion("DBUPINFO <=", value, "dbupinfo");
			return this;
		}

		public Criteria andDbupinfoLike(String value) {
			addCriterion("DBUPINFO like", value, "dbupinfo");
			return this;
		}

		public Criteria andDbupinfoNotLike(String value) {
			addCriterion("DBUPINFO not like", value, "dbupinfo");
			return this;
		}

		public Criteria andDbupinfoIn(List<String> values) {
			addCriterion("DBUPINFO in", values, "dbupinfo");
			return this;
		}

		public Criteria andDbupinfoNotIn(List<String> values) {
			addCriterion("DBUPINFO not in", values, "dbupinfo");
			return this;
		}

		public Criteria andDbupinfoBetween(String value1, String value2) {
			addCriterion("DBUPINFO between", value1, value2, "dbupinfo");
			return this;
		}

		public Criteria andDbupinfoNotBetween(String value1, String value2) {
			addCriterion("DBUPINFO not between", value1, value2, "dbupinfo");
			return this;
		}

		public Criteria andDbupuserIsNull() {
			addCriterion("DBUPUSER is null");
			return this;
		}

		public Criteria andDbupuserIsNotNull() {
			addCriterion("DBUPUSER is not null");
			return this;
		}

		public Criteria andDbupuserEqualTo(String value) {
			addCriterion("DBUPUSER =", value, "dbupuser");
			return this;
		}

		public Criteria andDbupuserNotEqualTo(String value) {
			addCriterion("DBUPUSER <>", value, "dbupuser");
			return this;
		}

		public Criteria andDbupuserGreaterThan(String value) {
			addCriterion("DBUPUSER >", value, "dbupuser");
			return this;
		}

		public Criteria andDbupuserGreaterThanOrEqualTo(String value) {
			addCriterion("DBUPUSER >=", value, "dbupuser");
			return this;
		}

		public Criteria andDbupuserLessThan(String value) {
			addCriterion("DBUPUSER <", value, "dbupuser");
			return this;
		}

		public Criteria andDbupuserLessThanOrEqualTo(String value) {
			addCriterion("DBUPUSER <=", value, "dbupuser");
			return this;
		}

		public Criteria andDbupuserLike(String value) {
			addCriterion("DBUPUSER like", value, "dbupuser");
			return this;
		}

		public Criteria andDbupuserNotLike(String value) {
			addCriterion("DBUPUSER not like", value, "dbupuser");
			return this;
		}

		public Criteria andDbupuserIn(List<String> values) {
			addCriterion("DBUPUSER in", values, "dbupuser");
			return this;
		}

		public Criteria andDbupuserNotIn(List<String> values) {
			addCriterion("DBUPUSER not in", values, "dbupuser");
			return this;
		}

		public Criteria andDbupuserBetween(String value1, String value2) {
			addCriterion("DBUPUSER between", value1, value2, "dbupuser");
			return this;
		}

		public Criteria andDbupuserNotBetween(String value1, String value2) {
			addCriterion("DBUPUSER not between", value1, value2, "dbupuser");
			return this;
		}

		public Criteria andDbuptimeIsNull() {
			addCriterion("DBUPTIME is null");
			return this;
		}

		public Criteria andDbuptimeIsNotNull() {
			addCriterion("DBUPTIME is not null");
			return this;
		}

		public Criteria andDbuptimeEqualTo(Date value) {
			addCriterionForJDBCDate("DBUPTIME =", value, "dbuptime");
			return this;
		}

		public Criteria andDbuptimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("DBUPTIME <>", value, "dbuptime");
			return this;
		}

		public Criteria andDbuptimeGreaterThan(Date value) {
			addCriterionForJDBCDate("DBUPTIME >", value, "dbuptime");
			return this;
		}

		public Criteria andDbuptimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("DBUPTIME >=", value, "dbuptime");
			return this;
		}

		public Criteria andDbuptimeLessThan(Date value) {
			addCriterionForJDBCDate("DBUPTIME <", value, "dbuptime");
			return this;
		}

		public Criteria andDbuptimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("DBUPTIME <=", value, "dbuptime");
			return this;
		}

		public Criteria andDbuptimeIn(List<Date> values) {
			addCriterionForJDBCDate("DBUPTIME in", values, "dbuptime");
			return this;
		}

		public Criteria andDbuptimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("DBUPTIME not in", values, "dbuptime");
			return this;
		}

		public Criteria andDbuptimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("DBUPTIME between", value1, value2,
					"dbuptime");
			return this;
		}

		public Criteria andDbuptimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("DBUPTIME not between", value1, value2,
					"dbuptime");
			return this;
		}

		public Criteria andDbupapptypeIsNull() {
			addCriterion("DBUPAPPTYPE is null");
			return this;
		}

		public Criteria andDbupapptypeIsNotNull() {
			addCriterion("DBUPAPPTYPE is not null");
			return this;
		}

		public Criteria andDbupapptypeEqualTo(String value) {
			addCriterion("DBUPAPPTYPE =", value, "dbupapptype");
			return this;
		}

		public Criteria andDbupapptypeNotEqualTo(String value) {
			addCriterion("DBUPAPPTYPE <>", value, "dbupapptype");
			return this;
		}

		public Criteria andDbupapptypeGreaterThan(String value) {
			addCriterion("DBUPAPPTYPE >", value, "dbupapptype");
			return this;
		}

		public Criteria andDbupapptypeGreaterThanOrEqualTo(String value) {
			addCriterion("DBUPAPPTYPE >=", value, "dbupapptype");
			return this;
		}

		public Criteria andDbupapptypeLessThan(String value) {
			addCriterion("DBUPAPPTYPE <", value, "dbupapptype");
			return this;
		}

		public Criteria andDbupapptypeLessThanOrEqualTo(String value) {
			addCriterion("DBUPAPPTYPE <=", value, "dbupapptype");
			return this;
		}

		public Criteria andDbupapptypeLike(String value) {
			addCriterion("DBUPAPPTYPE like", value, "dbupapptype");
			return this;
		}

		public Criteria andDbupapptypeNotLike(String value) {
			addCriterion("DBUPAPPTYPE not like", value, "dbupapptype");
			return this;
		}

		public Criteria andDbupapptypeIn(List<String> values) {
			addCriterion("DBUPAPPTYPE in", values, "dbupapptype");
			return this;
		}

		public Criteria andDbupapptypeNotIn(List<String> values) {
			addCriterion("DBUPAPPTYPE not in", values, "dbupapptype");
			return this;
		}

		public Criteria andDbupapptypeBetween(String value1, String value2) {
			addCriterion("DBUPAPPTYPE between", value1, value2, "dbupapptype");
			return this;
		}

		public Criteria andDbupapptypeNotBetween(String value1, String value2) {
			addCriterion("DBUPAPPTYPE not between", value1, value2,
					"dbupapptype");
			return this;
		}
	}
}