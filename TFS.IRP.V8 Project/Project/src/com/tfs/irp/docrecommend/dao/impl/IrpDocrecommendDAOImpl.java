package com.tfs.irp.docrecommend.dao.impl;

import com.tfs.irp.docrecommend.dao.IrpDocrecommendDAO;
import com.tfs.irp.docrecommend.entity.IrpDocrecommend;
import com.tfs.irp.docrecommend.entity.IrpDocrecommendExample;
import com.tfs.irp.util.PageUtil;

import java.sql.SQLException;
import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class IrpDocrecommendDAOImpl extends SqlMapClientDaoSupport implements IrpDocrecommendDAO {
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCRECOMMEND
	 * @ibatorgenerated  Thu Jun 06 18:05:47 CST 2013
	 */
	public int countByExample(IrpDocrecommendExample example)
			throws SQLException {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"IRP_DOCRECOMMEND.ibatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCRECOMMEND
	 * @ibatorgenerated  Thu Jun 06 18:05:47 CST 2013
	 */
	public int deleteByExample(IrpDocrecommendExample example)
			throws SQLException {
		int rows = getSqlMapClientTemplate().delete(
				"IRP_DOCRECOMMEND.ibatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCRECOMMEND
	 * @ibatorgenerated  Thu Jun 06 18:05:47 CST 2013
	 */
	public int deleteByPrimaryKey(Long recommendid) throws SQLException {
		IrpDocrecommend key = new IrpDocrecommend();
		key.setRecommendid(recommendid);
		int rows = getSqlMapClientTemplate().delete(
				"IRP_DOCRECOMMEND.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCRECOMMEND
	 * @ibatorgenerated  Thu Jun 06 18:05:47 CST 2013
	 */
	public void insert(IrpDocrecommend record) throws SQLException {
		getSqlMapClientTemplate().insert("IRP_DOCRECOMMEND.ibatorgenerated_insert", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCRECOMMEND
	 * @ibatorgenerated  Thu Jun 06 18:05:47 CST 2013
	 */
	public void insertSelective(IrpDocrecommend record) throws SQLException {
		getSqlMapClientTemplate().insert("IRP_DOCRECOMMEND.ibatorgenerated_insertSelective",
				record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCRECOMMEND
	 * @ibatorgenerated  Thu Jun 06 18:05:47 CST 2013
	 */
	@SuppressWarnings("unchecked")
	public List<IrpDocrecommend> selectByExample(IrpDocrecommendExample example)
			throws SQLException {
		List<IrpDocrecommend> list = getSqlMapClientTemplate().queryForList(
				"IRP_DOCRECOMMEND.ibatorgenerated_selectByExample", example);
		return list;
	}
	 
	@SuppressWarnings("unchecked")
	public List<IrpDocrecommend> selectByExample(PageUtil pageUtil,IrpDocrecommendExample example)
			throws SQLException {
		List<IrpDocrecommend> list = getSqlMapClientTemplate().queryForList(
				"IRP_DOCRECOMMEND.ibatorgenerated_selectByExample", example,pageUtil.getPageIndex(),pageUtil.getPageSize());
		return list;
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCRECOMMEND
	 * @ibatorgenerated  Thu Jun 06 18:05:47 CST 2013
	 */
	public IrpDocrecommend selectByPrimaryKey(Long recommendid)
			throws SQLException {
		IrpDocrecommend key = new IrpDocrecommend();
		key.setRecommendid(recommendid);
		IrpDocrecommend record = (IrpDocrecommend) getSqlMapClientTemplate().queryForObject(
				"IRP_DOCRECOMMEND.ibatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCRECOMMEND
	 * @ibatorgenerated  Thu Jun 06 18:05:47 CST 2013
	 */
	public int updateByExampleSelective(IrpDocrecommend record,
			IrpDocrecommendExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_DOCRECOMMEND.ibatorgenerated_updateByExampleSelective",
				parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCRECOMMEND
	 * @ibatorgenerated  Thu Jun 06 18:05:47 CST 2013
	 */
	public int updateByExample(IrpDocrecommend record,
			IrpDocrecommendExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"IRP_DOCRECOMMEND.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCRECOMMEND
	 * @ibatorgenerated  Thu Jun 06 18:05:47 CST 2013
	 */
	public int updateByPrimaryKeySelective(IrpDocrecommend record)
			throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"IRP_DOCRECOMMEND.ibatorgenerated_updateByPrimaryKeySelective",
				record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCRECOMMEND
	 * @ibatorgenerated  Thu Jun 06 18:05:47 CST 2013
	 */
	public int updateByPrimaryKey(IrpDocrecommend record) throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"IRP_DOCRECOMMEND.ibatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_DOCRECOMMEND
	 * @ibatorgenerated  Thu Jun 06 18:05:47 CST 2013
	 */
	private static class UpdateByExampleParms extends IrpDocrecommendExample {
		private Object record;

		public UpdateByExampleParms(Object record,
				IrpDocrecommendExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
	
}