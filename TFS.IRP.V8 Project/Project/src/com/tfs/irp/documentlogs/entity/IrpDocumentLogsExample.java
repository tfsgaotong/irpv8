package com.tfs.irp.documentlogs.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpDocumentLogsExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_DOCUMENT_LOGS
	 * @ibatorgenerated  Wed Nov 26 15:51:59 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_DOCUMENT_LOGS
	 * @ibatorgenerated  Wed Nov 26 15:51:59 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCUMENT_LOGS
	 * @ibatorgenerated  Wed Nov 26 15:51:59 CST 2014
	 */
	public IrpDocumentLogsExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCUMENT_LOGS
	 * @ibatorgenerated  Wed Nov 26 15:51:59 CST 2014
	 */
	protected IrpDocumentLogsExample(IrpDocumentLogsExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCUMENT_LOGS
	 * @ibatorgenerated  Wed Nov 26 15:51:59 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCUMENT_LOGS
	 * @ibatorgenerated  Wed Nov 26 15:51:59 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCUMENT_LOGS
	 * @ibatorgenerated  Wed Nov 26 15:51:59 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCUMENT_LOGS
	 * @ibatorgenerated  Wed Nov 26 15:51:59 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCUMENT_LOGS
	 * @ibatorgenerated  Wed Nov 26 15:51:59 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCUMENT_LOGS
	 * @ibatorgenerated  Wed Nov 26 15:51:59 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_DOCUMENT_LOGS
	 * @ibatorgenerated  Wed Nov 26 15:51:59 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_DOCUMENT_LOGS
	 * @ibatorgenerated  Wed Nov 26 15:51:59 CST 2014
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andDoclogidIsNull() {
			addCriterion("DOCLOGID is null");
			return this;
		}

		public Criteria andDoclogidIsNotNull() {
			addCriterion("DOCLOGID is not null");
			return this;
		}

		public Criteria andDoclogidEqualTo(Long value) {
			addCriterion("DOCLOGID =", value, "doclogid");
			return this;
		}

		public Criteria andDoclogidNotEqualTo(Long value) {
			addCriterion("DOCLOGID <>", value, "doclogid");
			return this;
		}

		public Criteria andDoclogidGreaterThan(Long value) {
			addCriterion("DOCLOGID >", value, "doclogid");
			return this;
		}

		public Criteria andDoclogidGreaterThanOrEqualTo(Long value) {
			addCriterion("DOCLOGID >=", value, "doclogid");
			return this;
		}

		public Criteria andDoclogidLessThan(Long value) {
			addCriterion("DOCLOGID <", value, "doclogid");
			return this;
		}

		public Criteria andDoclogidLessThanOrEqualTo(Long value) {
			addCriterion("DOCLOGID <=", value, "doclogid");
			return this;
		}

		public Criteria andDoclogidIn(List<Long> values) {
			addCriterion("DOCLOGID in", values, "doclogid");
			return this;
		}

		public Criteria andDoclogidNotIn(List<Long> values) {
			addCriterion("DOCLOGID not in", values, "doclogid");
			return this;
		}

		public Criteria andDoclogidBetween(Long value1, Long value2) {
			addCriterion("DOCLOGID between", value1, value2, "doclogid");
			return this;
		}

		public Criteria andDoclogidNotBetween(Long value1, Long value2) {
			addCriterion("DOCLOGID not between", value1, value2, "doclogid");
			return this;
		}

		public Criteria andDocidIsNull() {
			addCriterion("DOCID is null");
			return this;
		}

		public Criteria andDocidIsNotNull() {
			addCriterion("DOCID is not null");
			return this;
		}

		public Criteria andDocidEqualTo(Long value) {
			addCriterion("DOCID =", value, "docid");
			return this;
		}

		public Criteria andDocidNotEqualTo(Long value) {
			addCriterion("DOCID <>", value, "docid");
			return this;
		}

		public Criteria andDocidGreaterThan(Long value) {
			addCriterion("DOCID >", value, "docid");
			return this;
		}

		public Criteria andDocidGreaterThanOrEqualTo(Long value) {
			addCriterion("DOCID >=", value, "docid");
			return this;
		}

		public Criteria andDocidLessThan(Long value) {
			addCriterion("DOCID <", value, "docid");
			return this;
		}

		public Criteria andDocidLessThanOrEqualTo(Long value) {
			addCriterion("DOCID <=", value, "docid");
			return this;
		}

		public Criteria andDocidIn(List<Long> values) {
			addCriterion("DOCID in", values, "docid");
			return this;
		}

		public Criteria andDocidNotIn(List<Long> values) {
			addCriterion("DOCID not in", values, "docid");
			return this;
		}

		public Criteria andDocidBetween(Long value1, Long value2) {
			addCriterion("DOCID between", value1, value2, "docid");
			return this;
		}

		public Criteria andDocidNotBetween(Long value1, Long value2) {
			addCriterion("DOCID not between", value1, value2, "docid");
			return this;
		}

		public Criteria andOpertypeidIsNull() {
			addCriterion("OPERTYPEID is null");
			return this;
		}

		public Criteria andOpertypeidIsNotNull() {
			addCriterion("OPERTYPEID is not null");
			return this;
		}

		public Criteria andOpertypeidEqualTo(Long value) {
			addCriterion("OPERTYPEID =", value, "opertypeid");
			return this;
		}

		public Criteria andOpertypeidNotEqualTo(Long value) {
			addCriterion("OPERTYPEID <>", value, "opertypeid");
			return this;
		}

		public Criteria andOpertypeidGreaterThan(Long value) {
			addCriterion("OPERTYPEID >", value, "opertypeid");
			return this;
		}

		public Criteria andOpertypeidGreaterThanOrEqualTo(Long value) {
			addCriterion("OPERTYPEID >=", value, "opertypeid");
			return this;
		}

		public Criteria andOpertypeidLessThan(Long value) {
			addCriterion("OPERTYPEID <", value, "opertypeid");
			return this;
		}

		public Criteria andOpertypeidLessThanOrEqualTo(Long value) {
			addCriterion("OPERTYPEID <=", value, "opertypeid");
			return this;
		}

		public Criteria andOpertypeidIn(List<Long> values) {
			addCriterion("OPERTYPEID in", values, "opertypeid");
			return this;
		}

		public Criteria andOpertypeidNotIn(List<Long> values) {
			addCriterion("OPERTYPEID not in", values, "opertypeid");
			return this;
		}

		public Criteria andOpertypeidBetween(Long value1, Long value2) {
			addCriterion("OPERTYPEID between", value1, value2, "opertypeid");
			return this;
		}

		public Criteria andOpertypeidNotBetween(Long value1, Long value2) {
			addCriterion("OPERTYPEID not between", value1, value2, "opertypeid");
			return this;
		}

		public Criteria andOpernameIsNull() {
			addCriterion("OPERNAME is null");
			return this;
		}

		public Criteria andOpernameIsNotNull() {
			addCriterion("OPERNAME is not null");
			return this;
		}

		public Criteria andOpernameEqualTo(String value) {
			addCriterion("OPERNAME =", value, "opername");
			return this;
		}

		public Criteria andOpernameNotEqualTo(String value) {
			addCriterion("OPERNAME <>", value, "opername");
			return this;
		}

		public Criteria andOpernameGreaterThan(String value) {
			addCriterion("OPERNAME >", value, "opername");
			return this;
		}

		public Criteria andOpernameGreaterThanOrEqualTo(String value) {
			addCriterion("OPERNAME >=", value, "opername");
			return this;
		}

		public Criteria andOpernameLessThan(String value) {
			addCriterion("OPERNAME <", value, "opername");
			return this;
		}

		public Criteria andOpernameLessThanOrEqualTo(String value) {
			addCriterion("OPERNAME <=", value, "opername");
			return this;
		}

		public Criteria andOpernameLike(String value) {
			addCriterion("OPERNAME like", value, "opername");
			return this;
		}

		public Criteria andOpernameNotLike(String value) {
			addCriterion("OPERNAME not like", value, "opername");
			return this;
		}

		public Criteria andOpernameIn(List<String> values) {
			addCriterion("OPERNAME in", values, "opername");
			return this;
		}

		public Criteria andOpernameNotIn(List<String> values) {
			addCriterion("OPERNAME not in", values, "opername");
			return this;
		}

		public Criteria andOpernameBetween(String value1, String value2) {
			addCriterion("OPERNAME between", value1, value2, "opername");
			return this;
		}

		public Criteria andOpernameNotBetween(String value1, String value2) {
			addCriterion("OPERNAME not between", value1, value2, "opername");
			return this;
		}

		public Criteria andOpertimeIsNull() {
			addCriterion("OPERTIME is null");
			return this;
		}

		public Criteria andOpertimeIsNotNull() {
			addCriterion("OPERTIME is not null");
			return this;
		}

		public Criteria andOpertimeEqualTo(Date value) {
			addCriterion("OPERTIME =", value, "opertime");
			return this;
		}

		public Criteria andOpertimeNotEqualTo(Date value) {
			addCriterion("OPERTIME <>", value, "opertime");
			return this;
		}

		public Criteria andOpertimeGreaterThan(Date value) {
			addCriterion("OPERTIME >", value, "opertime");
			return this;
		}

		public Criteria andOpertimeGreaterThanOrEqualTo(Date value) {
			addCriterion("OPERTIME >=", value, "opertime");
			return this;
		}

		public Criteria andOpertimeLessThan(Date value) {
			addCriterion("OPERTIME <", value, "opertime");
			return this;
		}

		public Criteria andOpertimeLessThanOrEqualTo(Date value) {
			addCriterion("OPERTIME <=", value, "opertime");
			return this;
		}

		public Criteria andOpertimeIn(List<Date> values) {
			addCriterion("OPERTIME in", values, "opertime");
			return this;
		}

		public Criteria andOpertimeNotIn(List<Date> values) {
			addCriterion("OPERTIME not in", values, "opertime");
			return this;
		}

		public Criteria andOpertimeBetween(Date value1, Date value2) {
			addCriterion("OPERTIME between", value1, value2, "opertime");
			return this;
		}

		public Criteria andOpertimeNotBetween(Date value1, Date value2) {
			addCriterion("OPERTIME not between", value1, value2, "opertime");
			return this;
		}

		public Criteria andHitscountIsNull() {
			addCriterion("HITSCOUNT is null");
			return this;
		}

		public Criteria andHitscountIsNotNull() {
			addCriterion("HITSCOUNT is not null");
			return this;
		}

		public Criteria andHitscountEqualTo(Integer value) {
			addCriterion("HITSCOUNT =", value, "hitscount");
			return this;
		}

		public Criteria andHitscountNotEqualTo(Integer value) {
			addCriterion("HITSCOUNT <>", value, "hitscount");
			return this;
		}

		public Criteria andHitscountGreaterThan(Integer value) {
			addCriterion("HITSCOUNT >", value, "hitscount");
			return this;
		}

		public Criteria andHitscountGreaterThanOrEqualTo(Integer value) {
			addCriterion("HITSCOUNT >=", value, "hitscount");
			return this;
		}

		public Criteria andHitscountLessThan(Integer value) {
			addCriterion("HITSCOUNT <", value, "hitscount");
			return this;
		}

		public Criteria andHitscountLessThanOrEqualTo(Integer value) {
			addCriterion("HITSCOUNT <=", value, "hitscount");
			return this;
		}

		public Criteria andHitscountIn(List<Integer> values) {
			addCriterion("HITSCOUNT in", values, "hitscount");
			return this;
		}

		public Criteria andHitscountNotIn(List<Integer> values) {
			addCriterion("HITSCOUNT not in", values, "hitscount");
			return this;
		}

		public Criteria andHitscountBetween(Integer value1, Integer value2) {
			addCriterion("HITSCOUNT between", value1, value2, "hitscount");
			return this;
		}

		public Criteria andHitscountNotBetween(Integer value1, Integer value2) {
			addCriterion("HITSCOUNT not between", value1, value2, "hitscount");
			return this;
		}

		public Criteria andCruseridIsNull() {
			addCriterion("CRUSERID is null");
			return this;
		}

		public Criteria andCruseridIsNotNull() {
			addCriterion("CRUSERID is not null");
			return this;
		}

		public Criteria andCruseridEqualTo(Long value) {
			addCriterion("CRUSERID =", value, "cruserid");
			return this;
		}

		public Criteria andCruseridNotEqualTo(Long value) {
			addCriterion("CRUSERID <>", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThan(Long value) {
			addCriterion("CRUSERID >", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThanOrEqualTo(Long value) {
			addCriterion("CRUSERID >=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThan(Long value) {
			addCriterion("CRUSERID <", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThanOrEqualTo(Long value) {
			addCriterion("CRUSERID <=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridIn(List<Long> values) {
			addCriterion("CRUSERID in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridNotIn(List<Long> values) {
			addCriterion("CRUSERID not in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridBetween(Long value1, Long value2) {
			addCriterion("CRUSERID between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCruseridNotBetween(Long value1, Long value2) {
			addCriterion("CRUSERID not between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterion("CRTIME =", value, "crtime");
			return this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterion("CRTIME <>", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterion("CRTIME >", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("CRTIME >=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterion("CRTIME <", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterion("CRTIME <=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterion("CRTIME in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterion("CRTIME not in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterion("CRTIME between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterion("CRTIME not between", value1, value2, "crtime");
			return this;
		}
	}
}