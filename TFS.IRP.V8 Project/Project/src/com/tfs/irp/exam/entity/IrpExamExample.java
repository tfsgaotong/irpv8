package com.tfs.irp.exam.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpExamExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table irp_exam
	 * @ibatorgenerated  Wed Oct 29 14:09:06 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table irp_exam
	 * @ibatorgenerated  Wed Oct 29 14:09:06 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam
	 * @ibatorgenerated  Wed Oct 29 14:09:06 CST 2014
	 */
	public IrpExamExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam
	 * @ibatorgenerated  Wed Oct 29 14:09:06 CST 2014
	 */
	protected IrpExamExample(IrpExamExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam
	 * @ibatorgenerated  Wed Oct 29 14:09:06 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam
	 * @ibatorgenerated  Wed Oct 29 14:09:06 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam
	 * @ibatorgenerated  Wed Oct 29 14:09:06 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam
	 * @ibatorgenerated  Wed Oct 29 14:09:06 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam
	 * @ibatorgenerated  Wed Oct 29 14:09:06 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam
	 * @ibatorgenerated  Wed Oct 29 14:09:06 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam
	 * @ibatorgenerated  Wed Oct 29 14:09:06 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table irp_exam
	 * @ibatorgenerated  Wed Oct 29 14:09:06 CST 2014
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andExamidIsNull() {
			addCriterion("EXAMID is null");
			return this;
		}

		public Criteria andExamidIsNotNull() {
			addCriterion("EXAMID is not null");
			return this;
		}

		public Criteria andExamidEqualTo(Long value) {
			addCriterion("EXAMID =", value, "examid");
			return this;
		}

		public Criteria andExamidNotEqualTo(Long value) {
			addCriterion("EXAMID <>", value, "examid");
			return this;
		}

		public Criteria andExamidGreaterThan(Long value) {
			addCriterion("EXAMID >", value, "examid");
			return this;
		}

		public Criteria andExamidGreaterThanOrEqualTo(Long value) {
			addCriterion("EXAMID >=", value, "examid");
			return this;
		}

		public Criteria andExamidLessThan(Long value) {
			addCriterion("EXAMID <", value, "examid");
			return this;
		}

		public Criteria andExamidLessThanOrEqualTo(Long value) {
			addCriterion("EXAMID <=", value, "examid");
			return this;
		}

		public Criteria andExamidIn(List<Long> values) {
			addCriterion("EXAMID in", values, "examid");
			return this;
		}

		public Criteria andExamidNotIn(List<Long> values) {
			addCriterion("EXAMID not in", values, "examid");
			return this;
		}

		public Criteria andExamidBetween(Long value1, Long value2) {
			addCriterion("EXAMID between", value1, value2, "examid");
			return this;
		}

		public Criteria andExamidNotBetween(Long value1, Long value2) {
			addCriterion("EXAMID not between", value1, value2, "examid");
			return this;
		}

		public Criteria andExamnameIsNull() {
			addCriterion("EXAMNAME is null");
			return this;
		}

		public Criteria andExamnameIsNotNull() {
			addCriterion("EXAMNAME is not null");
			return this;
		}

		public Criteria andExamnameEqualTo(String value) {
			addCriterion("EXAMNAME =", value, "examname");
			return this;
		}

		public Criteria andExamnameNotEqualTo(String value) {
			addCriterion("EXAMNAME <>", value, "examname");
			return this;
		}

		public Criteria andExamnameGreaterThan(String value) {
			addCriterion("EXAMNAME >", value, "examname");
			return this;
		}

		public Criteria andExamnameGreaterThanOrEqualTo(String value) {
			addCriterion("EXAMNAME >=", value, "examname");
			return this;
		}

		public Criteria andExamnameLessThan(String value) {
			addCriterion("EXAMNAME <", value, "examname");
			return this;
		}

		public Criteria andExamnameLessThanOrEqualTo(String value) {
			addCriterion("EXAMNAME <=", value, "examname");
			return this;
		}

		public Criteria andExamnameLike(String value) {
			addCriterion("EXAMNAME like", value, "examname");
			return this;
		}

		public Criteria andExamnameNotLike(String value) {
			addCriterion("EXAMNAME not like", value, "examname");
			return this;
		}

		public Criteria andExamnameIn(List<String> values) {
			addCriterion("EXAMNAME in", values, "examname");
			return this;
		}

		public Criteria andExamnameNotIn(List<String> values) {
			addCriterion("EXAMNAME not in", values, "examname");
			return this;
		}

		public Criteria andExamnameBetween(String value1, String value2) {
			addCriterion("EXAMNAME between", value1, value2, "examname");
			return this;
		}

		public Criteria andExamnameNotBetween(String value1, String value2) {
			addCriterion("EXAMNAME not between", value1, value2, "examname");
			return this;
		}

		public Criteria andExamcontentIsNull() {
			addCriterion("EXAMCONTENT is null");
			return this;
		}

		public Criteria andExamcontentIsNotNull() {
			addCriterion("EXAMCONTENT is not null");
			return this;
		}

		public Criteria andExamcontentEqualTo(String value) {
			addCriterion("EXAMCONTENT =", value, "examcontent");
			return this;
		}

		public Criteria andExamcontentNotEqualTo(String value) {
			addCriterion("EXAMCONTENT <>", value, "examcontent");
			return this;
		}

		public Criteria andExamcontentGreaterThan(String value) {
			addCriterion("EXAMCONTENT >", value, "examcontent");
			return this;
		}

		public Criteria andExamcontentGreaterThanOrEqualTo(String value) {
			addCriterion("EXAMCONTENT >=", value, "examcontent");
			return this;
		}

		public Criteria andExamcontentLessThan(String value) {
			addCriterion("EXAMCONTENT <", value, "examcontent");
			return this;
		}

		public Criteria andExamcontentLessThanOrEqualTo(String value) {
			addCriterion("EXAMCONTENT <=", value, "examcontent");
			return this;
		}

		public Criteria andExamcontentLike(String value) {
			addCriterion("EXAMCONTENT like", value, "examcontent");
			return this;
		}

		public Criteria andExamcontentNotLike(String value) {
			addCriterion("EXAMCONTENT not like", value, "examcontent");
			return this;
		}

		public Criteria andExamcontentIn(List<String> values) {
			addCriterion("EXAMCONTENT in", values, "examcontent");
			return this;
		}

		public Criteria andExamcontentNotIn(List<String> values) {
			addCriterion("EXAMCONTENT not in", values, "examcontent");
			return this;
		}

		public Criteria andExamcontentBetween(String value1, String value2) {
			addCriterion("EXAMCONTENT between", value1, value2, "examcontent");
			return this;
		}

		public Criteria andExamcontentNotBetween(String value1, String value2) {
			addCriterion("EXAMCONTENT not between", value1, value2,
					"examcontent");
			return this;
		}

		public Criteria andExamcateIsNull() {
			addCriterion("EXAMCATE is null");
			return this;
		}

		public Criteria andExamcateIsNotNull() {
			addCriterion("EXAMCATE is not null");
			return this;
		}

		public Criteria andExamcateEqualTo(Long value) {
			addCriterion("EXAMCATE =", value, "examcate");
			return this;
		}

		public Criteria andExamcateNotEqualTo(Long value) {
			addCriterion("EXAMCATE <>", value, "examcate");
			return this;
		}

		public Criteria andExamcateGreaterThan(Long value) {
			addCriterion("EXAMCATE >", value, "examcate");
			return this;
		}

		public Criteria andExamcateGreaterThanOrEqualTo(Long value) {
			addCriterion("EXAMCATE >=", value, "examcate");
			return this;
		}

		public Criteria andExamcateLessThan(Long value) {
			addCriterion("EXAMCATE <", value, "examcate");
			return this;
		}

		public Criteria andExamcateLessThanOrEqualTo(Long value) {
			addCriterion("EXAMCATE <=", value, "examcate");
			return this;
		}

		public Criteria andExamcateIn(List<Long> values) {
			addCriterion("EXAMCATE in", values, "examcate");
			return this;
		}

		public Criteria andExamcateNotIn(List<Long> values) {
			addCriterion("EXAMCATE not in", values, "examcate");
			return this;
		}

		public Criteria andExamcateBetween(Long value1, Long value2) {
			addCriterion("EXAMCATE between", value1, value2, "examcate");
			return this;
		}

		public Criteria andExamcateNotBetween(Long value1, Long value2) {
			addCriterion("EXAMCATE not between", value1, value2, "examcate");
			return this;
		}

		public Criteria andExamstatusIsNull() {
			addCriterion("EXAMSTATUS is null");
			return this;
		}

		public Criteria andExamstatusIsNotNull() {
			addCriterion("EXAMSTATUS is not null");
			return this;
		}

		public Criteria andExamstatusEqualTo(Integer value) {
			addCriterion("EXAMSTATUS =", value, "examstatus");
			return this;
		}

		public Criteria andExamstatusNotEqualTo(Integer value) {
			addCriterion("EXAMSTATUS <>", value, "examstatus");
			return this;
		}

		public Criteria andExamstatusGreaterThan(Integer value) {
			addCriterion("EXAMSTATUS >", value, "examstatus");
			return this;
		}

		public Criteria andExamstatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("EXAMSTATUS >=", value, "examstatus");
			return this;
		}

		public Criteria andExamstatusLessThan(Integer value) {
			addCriterion("EXAMSTATUS <", value, "examstatus");
			return this;
		}

		public Criteria andExamstatusLessThanOrEqualTo(Integer value) {
			addCriterion("EXAMSTATUS <=", value, "examstatus");
			return this;
		}

		public Criteria andExamstatusIn(List<Integer> values) {
			addCriterion("EXAMSTATUS in", values, "examstatus");
			return this;
		}

		public Criteria andExamstatusNotIn(List<Integer> values) {
			addCriterion("EXAMSTATUS not in", values, "examstatus");
			return this;
		}

		public Criteria andExamstatusBetween(Integer value1, Integer value2) {
			addCriterion("EXAMSTATUS between", value1, value2, "examstatus");
			return this;
		}

		public Criteria andExamstatusNotBetween(Integer value1, Integer value2) {
			addCriterion("EXAMSTATUS not between", value1, value2, "examstatus");
			return this;
		}

		public Criteria andBegintimeIsNull() {
			addCriterion("BEGINTIME is null");
			return this;
		}

		public Criteria andBegintimeIsNotNull() {
			addCriterion("BEGINTIME is not null");
			return this;
		}

		public Criteria andBegintimeEqualTo(Date value) {
			addCriterion("BEGINTIME =", value, "begintime");
			return this;
		}

		public Criteria andBegintimeNotEqualTo(Date value) {
			addCriterion("BEGINTIME <>", value, "begintime");
			return this;
		}

		public Criteria andBegintimeGreaterThan(Date value) {
			addCriterion("BEGINTIME >", value, "begintime");
			return this;
		}

		public Criteria andBegintimeGreaterThanOrEqualTo(Date value) {
			addCriterion("BEGINTIME >=", value, "begintime");
			return this;
		}

		public Criteria andBegintimeLessThan(Date value) {
			addCriterion("BEGINTIME <", value, "begintime");
			return this;
		}

		public Criteria andBegintimeLessThanOrEqualTo(Date value) {
			addCriterion("BEGINTIME <=", value, "begintime");
			return this;
		}

		public Criteria andBegintimeIn(List<Date> values) {
			addCriterion("BEGINTIME in", values, "begintime");
			return this;
		}

		public Criteria andBegintimeNotIn(List<Date> values) {
			addCriterion("BEGINTIME not in", values, "begintime");
			return this;
		}

		public Criteria andBegintimeBetween(Date value1, Date value2) {
			addCriterion("BEGINTIME between", value1, value2, "begintime");
			return this;
		}

		public Criteria andBegintimeNotBetween(Date value1, Date value2) {
			addCriterion("BEGINTIME not between", value1, value2, "begintime");
			return this;
		}

		public Criteria andEndtimeIsNull() {
			addCriterion("ENDTIME is null");
			return this;
		}

		public Criteria andEndtimeIsNotNull() {
			addCriterion("ENDTIME is not null");
			return this;
		}

		public Criteria andEndtimeEqualTo(Date value) {
			addCriterion("ENDTIME =", value, "endtime");
			return this;
		}

		public Criteria andEndtimeNotEqualTo(Date value) {
			addCriterion("ENDTIME <>", value, "endtime");
			return this;
		}

		public Criteria andEndtimeGreaterThan(Date value) {
			addCriterion("ENDTIME >", value, "endtime");
			return this;
		}

		public Criteria andEndtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("ENDTIME >=", value, "endtime");
			return this;
		}

		public Criteria andEndtimeLessThan(Date value) {
			addCriterion("ENDTIME <", value, "endtime");
			return this;
		}

		public Criteria andEndtimeLessThanOrEqualTo(Date value) {
			addCriterion("ENDTIME <=", value, "endtime");
			return this;
		}

		public Criteria andEndtimeIn(List<Date> values) {
			addCriterion("ENDTIME in", values, "endtime");
			return this;
		}

		public Criteria andEndtimeNotIn(List<Date> values) {
			addCriterion("ENDTIME not in", values, "endtime");
			return this;
		}

		public Criteria andEndtimeBetween(Date value1, Date value2) {
			addCriterion("ENDTIME between", value1, value2, "endtime");
			return this;
		}

		public Criteria andEndtimeNotBetween(Date value1, Date value2) {
			addCriterion("ENDTIME not between", value1, value2, "endtime");
			return this;
		}

		public Criteria andQualifiedscoreIsNull() {
			addCriterion("QUALIFIEDSCORE is null");
			return this;
		}

		public Criteria andQualifiedscoreIsNotNull() {
			addCriterion("QUALIFIEDSCORE is not null");
			return this;
		}

		public Criteria andQualifiedscoreEqualTo(Integer value) {
			addCriterion("QUALIFIEDSCORE =", value, "qualifiedscore");
			return this;
		}

		public Criteria andQualifiedscoreNotEqualTo(Integer value) {
			addCriterion("QUALIFIEDSCORE <>", value, "qualifiedscore");
			return this;
		}

		public Criteria andQualifiedscoreGreaterThan(Integer value) {
			addCriterion("QUALIFIEDSCORE >", value, "qualifiedscore");
			return this;
		}

		public Criteria andQualifiedscoreGreaterThanOrEqualTo(Integer value) {
			addCriterion("QUALIFIEDSCORE >=", value, "qualifiedscore");
			return this;
		}

		public Criteria andQualifiedscoreLessThan(Integer value) {
			addCriterion("QUALIFIEDSCORE <", value, "qualifiedscore");
			return this;
		}

		public Criteria andQualifiedscoreLessThanOrEqualTo(Integer value) {
			addCriterion("QUALIFIEDSCORE <=", value, "qualifiedscore");
			return this;
		}

		public Criteria andQualifiedscoreIn(List<Integer> values) {
			addCriterion("QUALIFIEDSCORE in", values, "qualifiedscore");
			return this;
		}

		public Criteria andQualifiedscoreNotIn(List<Integer> values) {
			addCriterion("QUALIFIEDSCORE not in", values, "qualifiedscore");
			return this;
		}

		public Criteria andQualifiedscoreBetween(Integer value1, Integer value2) {
			addCriterion("QUALIFIEDSCORE between", value1, value2,
					"qualifiedscore");
			return this;
		}

		public Criteria andQualifiedscoreNotBetween(Integer value1,
				Integer value2) {
			addCriterion("QUALIFIEDSCORE not between", value1, value2,
					"qualifiedscore");
			return this;
		}

		public Criteria andCruserIsNull() {
			addCriterion("CRUSER is null");
			return this;
		}

		public Criteria andCruserIsNotNull() {
			addCriterion("CRUSER is not null");
			return this;
		}

		public Criteria andCruserEqualTo(Long value) {
			addCriterion("CRUSER =", value, "cruser");
			return this;
		}

		public Criteria andCruserNotEqualTo(Long value) {
			addCriterion("CRUSER <>", value, "cruser");
			return this;
		}

		public Criteria andCruserGreaterThan(Long value) {
			addCriterion("CRUSER >", value, "cruser");
			return this;
		}

		public Criteria andCruserGreaterThanOrEqualTo(Long value) {
			addCriterion("CRUSER >=", value, "cruser");
			return this;
		}

		public Criteria andCruserLessThan(Long value) {
			addCriterion("CRUSER <", value, "cruser");
			return this;
		}

		public Criteria andCruserLessThanOrEqualTo(Long value) {
			addCriterion("CRUSER <=", value, "cruser");
			return this;
		}

		public Criteria andCruserIn(List<Long> values) {
			addCriterion("CRUSER in", values, "cruser");
			return this;
		}

		public Criteria andCruserNotIn(List<Long> values) {
			addCriterion("CRUSER not in", values, "cruser");
			return this;
		}

		public Criteria andCruserBetween(Long value1, Long value2) {
			addCriterion("CRUSER between", value1, value2, "cruser");
			return this;
		}

		public Criteria andCruserNotBetween(Long value1, Long value2) {
			addCriterion("CRUSER not between", value1, value2, "cruser");
			return this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterion("CRTIME =", value, "crtime");
			return this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterion("CRTIME <>", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterion("CRTIME >", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("CRTIME >=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterion("CRTIME <", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterion("CRTIME <=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterion("CRTIME in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterion("CRTIME not in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterion("CRTIME between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterion("CRTIME not between", value1, value2, "crtime");
			return this;
		}

		public Criteria andExamnumIsNull() {
			addCriterion("EXAMNUM is null");
			return this;
		}

		public Criteria andExamnumIsNotNull() {
			addCriterion("EXAMNUM is not null");
			return this;
		}

		public Criteria andExamnumEqualTo(Integer value) {
			addCriterion("EXAMNUM =", value, "examnum");
			return this;
		}

		public Criteria andExamnumNotEqualTo(Integer value) {
			addCriterion("EXAMNUM <>", value, "examnum");
			return this;
		}

		public Criteria andExamnumGreaterThan(Integer value) {
			addCriterion("EXAMNUM >", value, "examnum");
			return this;
		}

		public Criteria andExamnumGreaterThanOrEqualTo(Integer value) {
			addCriterion("EXAMNUM >=", value, "examnum");
			return this;
		}

		public Criteria andExamnumLessThan(Integer value) {
			addCriterion("EXAMNUM <", value, "examnum");
			return this;
		}

		public Criteria andExamnumLessThanOrEqualTo(Integer value) {
			addCriterion("EXAMNUM <=", value, "examnum");
			return this;
		}

		public Criteria andExamnumIn(List<Integer> values) {
			addCriterion("EXAMNUM in", values, "examnum");
			return this;
		}

		public Criteria andExamnumNotIn(List<Integer> values) {
			addCriterion("EXAMNUM not in", values, "examnum");
			return this;
		}

		public Criteria andExamnumBetween(Integer value1, Integer value2) {
			addCriterion("EXAMNUM between", value1, value2, "examnum");
			return this;
		}

		public Criteria andExamnumNotBetween(Integer value1, Integer value2) {
			addCriterion("EXAMNUM not between", value1, value2, "examnum");
			return this;
		}

		public Criteria andStartvIsNull() {
			addCriterion("STARTV is null");
			return this;
		}

		public Criteria andStartvIsNotNull() {
			addCriterion("STARTV is not null");
			return this;
		}

		public Criteria andStartvEqualTo(Long value) {
			addCriterion("STARTV =", value, "startv");
			return this;
		}

		public Criteria andStartvNotEqualTo(Long value) {
			addCriterion("STARTV <>", value, "startv");
			return this;
		}

		public Criteria andStartvGreaterThan(Long value) {
			addCriterion("STARTV >", value, "startv");
			return this;
		}

		public Criteria andStartvGreaterThanOrEqualTo(Long value) {
			addCriterion("STARTV >=", value, "startv");
			return this;
		}

		public Criteria andStartvLessThan(Long value) {
			addCriterion("STARTV <", value, "startv");
			return this;
		}

		public Criteria andStartvLessThanOrEqualTo(Long value) {
			addCriterion("STARTV <=", value, "startv");
			return this;
		}

		public Criteria andStartvIn(List<Long> values) {
			addCriterion("STARTV in", values, "startv");
			return this;
		}

		public Criteria andStartvNotIn(List<Long> values) {
			addCriterion("STARTV not in", values, "startv");
			return this;
		}

		public Criteria andStartvBetween(Long value1, Long value2) {
			addCriterion("STARTV between", value1, value2, "startv");
			return this;
		}

		public Criteria andStartvNotBetween(Long value1, Long value2) {
			addCriterion("STARTV not between", value1, value2, "startv");
			return this;
		}

		public Criteria andEndvIsNull() {
			addCriterion("ENDV is null");
			return this;
		}

		public Criteria andEndvIsNotNull() {
			addCriterion("ENDV is not null");
			return this;
		}

		public Criteria andEndvEqualTo(Long value) {
			addCriterion("ENDV =", value, "endv");
			return this;
		}

		public Criteria andEndvNotEqualTo(Long value) {
			addCriterion("ENDV <>", value, "endv");
			return this;
		}

		public Criteria andEndvGreaterThan(Long value) {
			addCriterion("ENDV >", value, "endv");
			return this;
		}

		public Criteria andEndvGreaterThanOrEqualTo(Long value) {
			addCriterion("ENDV >=", value, "endv");
			return this;
		}

		public Criteria andEndvLessThan(Long value) {
			addCriterion("ENDV <", value, "endv");
			return this;
		}

		public Criteria andEndvLessThanOrEqualTo(Long value) {
			addCriterion("ENDV <=", value, "endv");
			return this;
		}

		public Criteria andEndvIn(List<Long> values) {
			addCriterion("ENDV in", values, "endv");
			return this;
		}

		public Criteria andEndvNotIn(List<Long> values) {
			addCriterion("ENDV not in", values, "endv");
			return this;
		}

		public Criteria andEndvBetween(Long value1, Long value2) {
			addCriterion("ENDV between", value1, value2, "endv");
			return this;
		}

		public Criteria andEndvNotBetween(Long value1, Long value2) {
			addCriterion("ENDV not between", value1, value2, "endv");
			return this;
		}

		public Criteria andResultputlicIsNull() {
			addCriterion("RESULTPUTLIC is null");
			return this;
		}

		public Criteria andResultputlicIsNotNull() {
			addCriterion("RESULTPUTLIC is not null");
			return this;
		}

		public Criteria andResultputlicEqualTo(Integer value) {
			addCriterion("RESULTPUTLIC =", value, "resultputlic");
			return this;
		}

		public Criteria andResultputlicNotEqualTo(Integer value) {
			addCriterion("RESULTPUTLIC <>", value, "resultputlic");
			return this;
		}

		public Criteria andResultputlicGreaterThan(Integer value) {
			addCriterion("RESULTPUTLIC >", value, "resultputlic");
			return this;
		}

		public Criteria andResultputlicGreaterThanOrEqualTo(Integer value) {
			addCriterion("RESULTPUTLIC >=", value, "resultputlic");
			return this;
		}

		public Criteria andResultputlicLessThan(Integer value) {
			addCriterion("RESULTPUTLIC <", value, "resultputlic");
			return this;
		}

		public Criteria andResultputlicLessThanOrEqualTo(Integer value) {
			addCriterion("RESULTPUTLIC <=", value, "resultputlic");
			return this;
		}

		public Criteria andResultputlicIn(List<Integer> values) {
			addCriterion("RESULTPUTLIC in", values, "resultputlic");
			return this;
		}

		public Criteria andResultputlicNotIn(List<Integer> values) {
			addCriterion("RESULTPUTLIC not in", values, "resultputlic");
			return this;
		}

		public Criteria andResultputlicBetween(Integer value1, Integer value2) {
			addCriterion("RESULTPUTLIC between", value1, value2, "resultputlic");
			return this;
		}

		public Criteria andResultputlicNotBetween(Integer value1, Integer value2) {
			addCriterion("RESULTPUTLIC not between", value1, value2,
					"resultputlic");
			return this;
		}

		public Criteria andAnswertimeIsNull() {
			addCriterion("ANSWERTIME is null");
			return this;
		}

		public Criteria andAnswertimeIsNotNull() {
			addCriterion("ANSWERTIME is not null");
			return this;
		}

		public Criteria andAnswertimeEqualTo(Integer value) {
			addCriterion("ANSWERTIME =", value, "answertime");
			return this;
		}

		public Criteria andAnswertimeNotEqualTo(Integer value) {
			addCriterion("ANSWERTIME <>", value, "answertime");
			return this;
		}

		public Criteria andAnswertimeGreaterThan(Integer value) {
			addCriterion("ANSWERTIME >", value, "answertime");
			return this;
		}

		public Criteria andAnswertimeGreaterThanOrEqualTo(Integer value) {
			addCriterion("ANSWERTIME >=", value, "answertime");
			return this;
		}

		public Criteria andAnswertimeLessThan(Integer value) {
			addCriterion("ANSWERTIME <", value, "answertime");
			return this;
		}

		public Criteria andAnswertimeLessThanOrEqualTo(Integer value) {
			addCriterion("ANSWERTIME <=", value, "answertime");
			return this;
		}

		public Criteria andAnswertimeIn(List<Integer> values) {
			addCriterion("ANSWERTIME in", values, "answertime");
			return this;
		}

		public Criteria andAnswertimeNotIn(List<Integer> values) {
			addCriterion("ANSWERTIME not in", values, "answertime");
			return this;
		}

		public Criteria andAnswertimeBetween(Integer value1, Integer value2) {
			addCriterion("ANSWERTIME between", value1, value2, "answertime");
			return this;
		}

		public Criteria andAnswertimeNotBetween(Integer value1, Integer value2) {
			addCriterion("ANSWERTIME not between", value1, value2, "answertime");
			return this;
		}
	}
}