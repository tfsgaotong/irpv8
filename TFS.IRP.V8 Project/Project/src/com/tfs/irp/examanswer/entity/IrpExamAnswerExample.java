package com.tfs.irp.examanswer.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpExamAnswerExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table irp_exam_answer
	 * @ibatorgenerated  Thu Oct 30 09:55:51 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table irp_exam_answer
	 * @ibatorgenerated  Thu Oct 30 09:55:51 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam_answer
	 * @ibatorgenerated  Thu Oct 30 09:55:51 CST 2014
	 */
	public IrpExamAnswerExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam_answer
	 * @ibatorgenerated  Thu Oct 30 09:55:51 CST 2014
	 */
	protected IrpExamAnswerExample(IrpExamAnswerExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam_answer
	 * @ibatorgenerated  Thu Oct 30 09:55:51 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam_answer
	 * @ibatorgenerated  Thu Oct 30 09:55:51 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam_answer
	 * @ibatorgenerated  Thu Oct 30 09:55:51 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam_answer
	 * @ibatorgenerated  Thu Oct 30 09:55:51 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam_answer
	 * @ibatorgenerated  Thu Oct 30 09:55:51 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam_answer
	 * @ibatorgenerated  Thu Oct 30 09:55:51 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_exam_answer
	 * @ibatorgenerated  Thu Oct 30 09:55:51 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table irp_exam_answer
	 * @ibatorgenerated  Thu Oct 30 09:55:51 CST 2014
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andAnsweridIsNull() {
			addCriterion("ANSWERID is null");
			return this;
		}

		public Criteria andAnsweridIsNotNull() {
			addCriterion("ANSWERID is not null");
			return this;
		}

		public Criteria andAnsweridEqualTo(Long value) {
			addCriterion("ANSWERID =", value, "answerid");
			return this;
		}

		public Criteria andAnsweridNotEqualTo(Long value) {
			addCriterion("ANSWERID <>", value, "answerid");
			return this;
		}

		public Criteria andAnsweridGreaterThan(Long value) {
			addCriterion("ANSWERID >", value, "answerid");
			return this;
		}

		public Criteria andAnsweridGreaterThanOrEqualTo(Long value) {
			addCriterion("ANSWERID >=", value, "answerid");
			return this;
		}

		public Criteria andAnsweridLessThan(Long value) {
			addCriterion("ANSWERID <", value, "answerid");
			return this;
		}

		public Criteria andAnsweridLessThanOrEqualTo(Long value) {
			addCriterion("ANSWERID <=", value, "answerid");
			return this;
		}

		public Criteria andAnsweridIn(List<Long> values) {
			addCriterion("ANSWERID in", values, "answerid");
			return this;
		}

		public Criteria andAnsweridNotIn(List<Long> values) {
			addCriterion("ANSWERID not in", values, "answerid");
			return this;
		}

		public Criteria andAnsweridBetween(Long value1, Long value2) {
			addCriterion("ANSWERID between", value1, value2, "answerid");
			return this;
		}

		public Criteria andAnsweridNotBetween(Long value1, Long value2) {
			addCriterion("ANSWERID not between", value1, value2, "answerid");
			return this;
		}

		public Criteria andExamidIsNull() {
			addCriterion("EXAMID is null");
			return this;
		}

		public Criteria andExamidIsNotNull() {
			addCriterion("EXAMID is not null");
			return this;
		}

		public Criteria andExamidEqualTo(Long value) {
			addCriterion("EXAMID =", value, "examid");
			return this;
		}

		public Criteria andExamidNotEqualTo(Long value) {
			addCriterion("EXAMID <>", value, "examid");
			return this;
		}

		public Criteria andExamidGreaterThan(Long value) {
			addCriterion("EXAMID >", value, "examid");
			return this;
		}

		public Criteria andExamidGreaterThanOrEqualTo(Long value) {
			addCriterion("EXAMID >=", value, "examid");
			return this;
		}

		public Criteria andExamidLessThan(Long value) {
			addCriterion("EXAMID <", value, "examid");
			return this;
		}

		public Criteria andExamidLessThanOrEqualTo(Long value) {
			addCriterion("EXAMID <=", value, "examid");
			return this;
		}

		public Criteria andExamidIn(List<Long> values) {
			addCriterion("EXAMID in", values, "examid");
			return this;
		}

		public Criteria andExamidNotIn(List<Long> values) {
			addCriterion("EXAMID not in", values, "examid");
			return this;
		}

		public Criteria andExamidBetween(Long value1, Long value2) {
			addCriterion("EXAMID between", value1, value2, "examid");
			return this;
		}

		public Criteria andExamidNotBetween(Long value1, Long value2) {
			addCriterion("EXAMID not between", value1, value2, "examid");
			return this;
		}

		public Criteria andPaperidIsNull() {
			addCriterion("PAPERID is null");
			return this;
		}

		public Criteria andPaperidIsNotNull() {
			addCriterion("PAPERID is not null");
			return this;
		}

		public Criteria andPaperidEqualTo(Long value) {
			addCriterion("PAPERID =", value, "paperid");
			return this;
		}

		public Criteria andPaperidNotEqualTo(Long value) {
			addCriterion("PAPERID <>", value, "paperid");
			return this;
		}

		public Criteria andPaperidGreaterThan(Long value) {
			addCriterion("PAPERID >", value, "paperid");
			return this;
		}

		public Criteria andPaperidGreaterThanOrEqualTo(Long value) {
			addCriterion("PAPERID >=", value, "paperid");
			return this;
		}

		public Criteria andPaperidLessThan(Long value) {
			addCriterion("PAPERID <", value, "paperid");
			return this;
		}

		public Criteria andPaperidLessThanOrEqualTo(Long value) {
			addCriterion("PAPERID <=", value, "paperid");
			return this;
		}

		public Criteria andPaperidIn(List<Long> values) {
			addCriterion("PAPERID in", values, "paperid");
			return this;
		}

		public Criteria andPaperidNotIn(List<Long> values) {
			addCriterion("PAPERID not in", values, "paperid");
			return this;
		}

		public Criteria andPaperidBetween(Long value1, Long value2) {
			addCriterion("PAPERID between", value1, value2, "paperid");
			return this;
		}

		public Criteria andPaperidNotBetween(Long value1, Long value2) {
			addCriterion("PAPERID not between", value1, value2, "paperid");
			return this;
		}

		public Criteria andQuestionbankidIsNull() {
			addCriterion("QUESTIONBANKID is null");
			return this;
		}

		public Criteria andQuestionbankidIsNotNull() {
			addCriterion("QUESTIONBANKID is not null");
			return this;
		}

		public Criteria andQuestionbankidEqualTo(Long value) {
			addCriterion("QUESTIONBANKID =", value, "questionbankid");
			return this;
		}

		public Criteria andQuestionbankidNotEqualTo(Long value) {
			addCriterion("QUESTIONBANKID <>", value, "questionbankid");
			return this;
		}

		public Criteria andQuestionbankidGreaterThan(Long value) {
			addCriterion("QUESTIONBANKID >", value, "questionbankid");
			return this;
		}

		public Criteria andQuestionbankidGreaterThanOrEqualTo(Long value) {
			addCriterion("QUESTIONBANKID >=", value, "questionbankid");
			return this;
		}

		public Criteria andQuestionbankidLessThan(Long value) {
			addCriterion("QUESTIONBANKID <", value, "questionbankid");
			return this;
		}

		public Criteria andQuestionbankidLessThanOrEqualTo(Long value) {
			addCriterion("QUESTIONBANKID <=", value, "questionbankid");
			return this;
		}

		public Criteria andQuestionbankidIn(List<Long> values) {
			addCriterion("QUESTIONBANKID in", values, "questionbankid");
			return this;
		}

		public Criteria andQuestionbankidNotIn(List<Long> values) {
			addCriterion("QUESTIONBANKID not in", values, "questionbankid");
			return this;
		}

		public Criteria andQuestionbankidBetween(Long value1, Long value2) {
			addCriterion("QUESTIONBANKID between", value1, value2,
					"questionbankid");
			return this;
		}

		public Criteria andQuestionbankidNotBetween(Long value1, Long value2) {
			addCriterion("QUESTIONBANKID not between", value1, value2,
					"questionbankid");
			return this;
		}

		public Criteria andAnswerIsNull() {
			addCriterion("ANSWER is null");
			return this;
		}

		public Criteria andAnswerIsNotNull() {
			addCriterion("ANSWER is not null");
			return this;
		}

		public Criteria andAnswerEqualTo(String value) {
			addCriterion("ANSWER =", value, "answer");
			return this;
		}

		public Criteria andAnswerNotEqualTo(String value) {
			addCriterion("ANSWER <>", value, "answer");
			return this;
		}

		public Criteria andAnswerGreaterThan(String value) {
			addCriterion("ANSWER >", value, "answer");
			return this;
		}

		public Criteria andAnswerGreaterThanOrEqualTo(String value) {
			addCriterion("ANSWER >=", value, "answer");
			return this;
		}

		public Criteria andAnswerLessThan(String value) {
			addCriterion("ANSWER <", value, "answer");
			return this;
		}

		public Criteria andAnswerLessThanOrEqualTo(String value) {
			addCriterion("ANSWER <=", value, "answer");
			return this;
		}

		public Criteria andAnswerLike(String value) {
			addCriterion("ANSWER like", value, "answer");
			return this;
		}

		public Criteria andAnswerNotLike(String value) {
			addCriterion("ANSWER not like", value, "answer");
			return this;
		}

		public Criteria andAnswerIn(List<String> values) {
			addCriterion("ANSWER in", values, "answer");
			return this;
		}

		public Criteria andAnswerNotIn(List<String> values) {
			addCriterion("ANSWER not in", values, "answer");
			return this;
		}

		public Criteria andAnswerBetween(String value1, String value2) {
			addCriterion("ANSWER between", value1, value2, "answer");
			return this;
		}

		public Criteria andAnswerNotBetween(String value1, String value2) {
			addCriterion("ANSWER not between", value1, value2, "answer");
			return this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterion("CRTIME =", value, "crtime");
			return this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterion("CRTIME <>", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterion("CRTIME >", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("CRTIME >=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterion("CRTIME <", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterion("CRTIME <=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterion("CRTIME in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterion("CRTIME not in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterion("CRTIME between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterion("CRTIME not between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCruseridIsNull() {
			addCriterion("CRUSERID is null");
			return this;
		}

		public Criteria andCruseridIsNotNull() {
			addCriterion("CRUSERID is not null");
			return this;
		}

		public Criteria andCruseridEqualTo(Long value) {
			addCriterion("CRUSERID =", value, "cruserid");
			return this;
		}

		public Criteria andCruseridNotEqualTo(Long value) {
			addCriterion("CRUSERID <>", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThan(Long value) {
			addCriterion("CRUSERID >", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThanOrEqualTo(Long value) {
			addCriterion("CRUSERID >=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThan(Long value) {
			addCriterion("CRUSERID <", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThanOrEqualTo(Long value) {
			addCriterion("CRUSERID <=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridIn(List<Long> values) {
			addCriterion("CRUSERID in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridNotIn(List<Long> values) {
			addCriterion("CRUSERID not in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridBetween(Long value1, Long value2) {
			addCriterion("CRUSERID between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCruseridNotBetween(Long value1, Long value2) {
			addCriterion("CRUSERID not between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andExamidtimesIsNull() {
			addCriterion("EXAMIDTIMES is null");
			return this;
		}

		public Criteria andExamidtimesIsNotNull() {
			addCriterion("EXAMIDTIMES is not null");
			return this;
		}

		public Criteria andExamidtimesEqualTo(String value) {
			addCriterion("EXAMIDTIMES =", value, "examidtimes");
			return this;
		}

		public Criteria andExamidtimesNotEqualTo(String value) {
			addCriterion("EXAMIDTIMES <>", value, "examidtimes");
			return this;
		}

		public Criteria andExamidtimesGreaterThan(String value) {
			addCriterion("EXAMIDTIMES >", value, "examidtimes");
			return this;
		}

		public Criteria andExamidtimesGreaterThanOrEqualTo(String value) {
			addCriterion("EXAMIDTIMES >=", value, "examidtimes");
			return this;
		}

		public Criteria andExamidtimesLessThan(String value) {
			addCriterion("EXAMIDTIMES <", value, "examidtimes");
			return this;
		}

		public Criteria andExamidtimesLessThanOrEqualTo(String value) {
			addCriterion("EXAMIDTIMES <=", value, "examidtimes");
			return this;
		}

		public Criteria andExamidtimesLike(String value) {
			addCriterion("EXAMIDTIMES like", value, "examidtimes");
			return this;
		}

		public Criteria andExamidtimesNotLike(String value) {
			addCriterion("EXAMIDTIMES not like", value, "examidtimes");
			return this;
		}

		public Criteria andExamidtimesIn(List<String> values) {
			addCriterion("EXAMIDTIMES in", values, "examidtimes");
			return this;
		}

		public Criteria andExamidtimesNotIn(List<String> values) {
			addCriterion("EXAMIDTIMES not in", values, "examidtimes");
			return this;
		}

		public Criteria andExamidtimesBetween(String value1, String value2) {
			addCriterion("EXAMIDTIMES between", value1, value2, "examidtimes");
			return this;
		}

		public Criteria andExamidtimesNotBetween(String value1, String value2) {
			addCriterion("EXAMIDTIMES not between", value1, value2,
					"examidtimes");
			return this;
		}
	}
}