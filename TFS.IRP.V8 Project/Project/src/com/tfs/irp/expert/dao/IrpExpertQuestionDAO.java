package com.tfs.irp.expert.dao;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import com.tfs.irp.expert.entity.IrpExpertQuestion;
import com.tfs.irp.expert.entity.IrpExpertQuestionExample;
import com.tfs.irp.question.entity.IrpQuestion;
import com.tfs.irp.util.PageUtil;

public interface IrpExpertQuestionDAO {
    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    int countByExample(IrpExpertQuestionExample example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    int deleteByExample(IrpExpertQuestionExample example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    int deleteByPrimaryKey(Long expertquestionid) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    void insert(IrpExpertQuestion record) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    void insertSelective(IrpExpertQuestion record) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    List<IrpExpertQuestion> selectByExample(IrpExpertQuestionExample example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    IrpExpertQuestion selectByPrimaryKey(Long expertquestionid) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    int updateByExampleSelective(IrpExpertQuestion record, IrpExpertQuestionExample example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    int updateByExample(IrpExpertQuestion record, IrpExpertQuestionExample example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    int updateByPrimaryKeySelective(IrpExpertQuestion record) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    int updateByPrimaryKey(IrpExpertQuestion record) throws SQLException;
    List<IrpQuestion> findQuestionsOfExpert(Map<String,Object> map) throws Exception;

	List<IrpQuestion> findQuestionsOfExpert(Map<String, Object> map,
			PageUtil pageUtil) throws SQLException;
	int countExpertQuestion(Map<String, Object> map) throws Exception;
}