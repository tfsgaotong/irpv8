package com.tfs.irp.expert.dao.impl;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.tfs.irp.expert.dao.IrpExpertQuestionDAO;
import com.tfs.irp.expert.entity.IrpExpertQuestion;
import com.tfs.irp.expert.entity.IrpExpertQuestionExample;
import com.tfs.irp.question.entity.IrpQuestion;
import com.tfs.irp.util.PageUtil;

public class IrpExpertQuestionDAOImpl extends SqlMapClientDaoSupport implements IrpExpertQuestionDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    public int countByExample(IrpExpertQuestionExample example) throws SQLException {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("IRP_EXPERT_QUESTION.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    public int deleteByExample(IrpExpertQuestionExample example) throws SQLException {
        int rows = getSqlMapClientTemplate().delete("IRP_EXPERT_QUESTION.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    public int deleteByPrimaryKey(Long expertquestionid) throws SQLException {
        IrpExpertQuestion key = new IrpExpertQuestion();
        key.setExpertquestionid(expertquestionid);
        int rows = getSqlMapClientTemplate().delete("IRP_EXPERT_QUESTION.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    public void insert(IrpExpertQuestion record) throws SQLException {
        getSqlMapClientTemplate().insert("IRP_EXPERT_QUESTION.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    public void insertSelective(IrpExpertQuestion record) throws SQLException {
        getSqlMapClientTemplate().insert("IRP_EXPERT_QUESTION.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    @SuppressWarnings("unchecked")
    public List<IrpExpertQuestion> selectByExample(IrpExpertQuestionExample example) throws SQLException {
        List<IrpExpertQuestion> list = getSqlMapClientTemplate().queryForList("IRP_EXPERT_QUESTION.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    public IrpExpertQuestion selectByPrimaryKey(Long expertquestionid) throws SQLException {
        IrpExpertQuestion key = new IrpExpertQuestion();
        key.setExpertquestionid(expertquestionid);
        IrpExpertQuestion record = (IrpExpertQuestion) getSqlMapClientTemplate().queryForObject("IRP_EXPERT_QUESTION.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    public int updateByExampleSelective(IrpExpertQuestion record, IrpExpertQuestionExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("IRP_EXPERT_QUESTION.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    public int updateByExample(IrpExpertQuestion record, IrpExpertQuestionExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("IRP_EXPERT_QUESTION.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    public int updateByPrimaryKeySelective(IrpExpertQuestion record) throws SQLException {
        int rows = getSqlMapClientTemplate().update("IRP_EXPERT_QUESTION.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    public int updateByPrimaryKey(IrpExpertQuestion record) throws SQLException {
        int rows = getSqlMapClientTemplate().update("IRP_EXPERT_QUESTION.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_EXPERT_QUESTION
     *
     * @ibatorgenerated Mon May 13 14:38:31 CST 2013
     */
    private static class UpdateByExampleParms extends IrpExpertQuestionExample {
        private Object record;

        public UpdateByExampleParms(Object record, IrpExpertQuestionExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

    @Override
    @SuppressWarnings("unchecked")
	public List<IrpQuestion> findQuestionsOfExpert(Map<String, Object> map) throws SQLException {
		List<IrpQuestion> questions = getSqlMapClientTemplate().queryForList("IRP_QUESTION.findQuestionOfExpert", map);
		return questions;
	}
    @Override
    @SuppressWarnings("unchecked")
	public List<IrpQuestion> findQuestionsOfExpert(Map<String, Object> map,PageUtil pageUtil) throws SQLException {
		List<IrpQuestion> questions = getSqlMapClientTemplate().queryForList("IRP_QUESTION.findQuestionOfExpert", map,pageUtil.getPageIndex(), pageUtil.getPageSize());
		return questions;
	}

	@Override
	public int countExpertQuestion(Map<String, Object> map) throws Exception {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject("IRP_QUESTION.countExpertQuestion", map);
		return count;
	}
    
}