package com.tfs.irp.forum.dao;

import com.tfs.irp.forum.entity.IrpForum;
import com.tfs.irp.forum.entity.IrpForumExample;
import com.tfs.irp.util.PageUtil;

import java.sql.SQLException;
import java.util.List;

public interface IrpForumDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Tue Sep 26 15:02:20 CST 2017
     */
    int countByExample(IrpForumExample example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Tue Sep 26 15:02:20 CST 2017
     */
    int deleteByExample(IrpForumExample example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Tue Sep 26 15:02:20 CST 2017
     */
    int deleteByPrimaryKey(Long forumid) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Tue Sep 26 15:02:20 CST 2017
     */
    void insert(IrpForum record) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Tue Sep 26 15:02:20 CST 2017
     */
    void insertSelective(IrpForum record) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Tue Sep 26 15:02:20 CST 2017
     */
    List<IrpForum> selectByExample(IrpForumExample irpForumexample, PageUtil pageUtil) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Tue Sep 26 15:02:20 CST 2017
     */
    IrpForum selectByPrimaryKey(Long forumid) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Tue Sep 26 15:02:20 CST 2017
     */
    int updateByExampleSelective(IrpForum record, IrpForumExample example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Tue Sep 26 15:02:20 CST 2017
     */
    int updateByExample(IrpForum record, IrpForumExample example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Tue Sep 26 15:02:20 CST 2017
     */
    int updateByPrimaryKeySelective(IrpForum record) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Tue Sep 26 15:02:20 CST 2017
     */
    int updateByPrimaryKey(IrpForum record) throws SQLException;

    /**
     * 
     * selectCreateForumUserIdList:获取创建帖子的所有用户id列表. <br/> 
     * 
     * @author Administrator 
     * @return 用户id列表
     * @throws SQLException SQL异常
     * @since JDK 1.8
     */
    List<Integer> selectCreateForumUserIdList() throws SQLException;

    /**
     * 
     * countForumListByAllCategoryId:获取当前分类列表下的帖子数量. <br/> 
     * 
     * @author Administrator 
     * @param categoryIdList 分类Id列表
     * @return 帖子数量
     * @throws SQLException SQL异常
     * @since JDK 1.8
     */
    int countForumListByAllCategoryId(List<Long> categoryIdList) throws SQLException;
    
    /**
     * 
     * selectForumListByAllCategoryId:获取当前分类列表下的帖子. <br/> 
     * 
     * @author Administrator 
     * @param categoryIdList 分类Id列表
     * @param pageUtil 分页实体
     * @return 帖子列表
     * @throws SQLException SQL异常
     * @since JDK 1.8
     */
    List<IrpForum> selectForumListByAllCategoryId(List<Long> categoryIdList, PageUtil pageUtil) throws SQLException;
}