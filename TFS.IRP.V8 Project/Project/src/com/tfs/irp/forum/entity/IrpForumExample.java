package com.tfs.irp.forum.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpForumExample {

    /**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Thu Oct 19 16:27:58 CST 2017
     */
    protected String orderByClause;
    /**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Thu Oct 19 16:27:58 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Thu Oct 19 16:27:58 CST 2017
     */
    public IrpForumExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Thu Oct 19 16:27:58 CST 2017
     */
    protected IrpForumExample(IrpForumExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Thu Oct 19 16:27:58 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Thu Oct 19 16:27:58 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Thu Oct 19 16:27:58 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Thu Oct 19 16:27:58 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Thu Oct 19 16:27:58 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Thu Oct 19 16:27:58 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Thu Oct 19 16:27:58 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_FORUM
     * @ibatorgenerated  Thu Oct 19 16:27:58 CST 2017
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;
        protected List<Map<String, Object>> criteriaWithSingleValue;
        protected List<Map<String, Object>> criteriaWithListValue;
        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
                    || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andForumidIsNull() {
            addCriterion("FORUMID is null");
            return this;
        }

        public Criteria andForumidIsNotNull() {
            addCriterion("FORUMID is not null");
            return this;
        }

        public Criteria andForumidEqualTo(Long value) {
            addCriterion("FORUMID =", value, "forumid");
            return this;
        }

        public Criteria andForumidNotEqualTo(Long value) {
            addCriterion("FORUMID <>", value, "forumid");
            return this;
        }

        public Criteria andForumidGreaterThan(Long value) {
            addCriterion("FORUMID >", value, "forumid");
            return this;
        }

        public Criteria andForumidGreaterThanOrEqualTo(Long value) {
            addCriterion("FORUMID >=", value, "forumid");
            return this;
        }

        public Criteria andForumidLessThan(Long value) {
            addCriterion("FORUMID <", value, "forumid");
            return this;
        }

        public Criteria andForumidLessThanOrEqualTo(Long value) {
            addCriterion("FORUMID <=", value, "forumid");
            return this;
        }

        public Criteria andForumidIn(List<Long> values) {
            addCriterion("FORUMID in", values, "forumid");
            return this;
        }

        public Criteria andForumidNotIn(List<Long> values) {
            addCriterion("FORUMID not in", values, "forumid");
            return this;
        }

        public Criteria andForumidBetween(Long value1, Long value2) {
            addCriterion("FORUMID between", value1, value2, "forumid");
            return this;
        }

        public Criteria andForumidNotBetween(Long value1, Long value2) {
            addCriterion("FORUMID not between", value1, value2, "forumid");
            return this;
        }

        public Criteria andForumcontentIsNull() {
            addCriterion("FORUMCONTENT is null");
            return this;
        }

        public Criteria andForumcontentIsNotNull() {
            addCriterion("FORUMCONTENT is not null");
            return this;
        }

        public Criteria andForumcontentEqualTo(String value) {
            addCriterion("FORUMCONTENT =", value, "forumcontent");
            return this;
        }

        public Criteria andForumcontentNotEqualTo(String value) {
            addCriterion("FORUMCONTENT <>", value, "forumcontent");
            return this;
        }

        public Criteria andForumcontentGreaterThan(String value) {
            addCriterion("FORUMCONTENT >", value, "forumcontent");
            return this;
        }

        public Criteria andForumcontentGreaterThanOrEqualTo(String value) {
            addCriterion("FORUMCONTENT >=", value, "forumcontent");
            return this;
        }

        public Criteria andForumcontentLessThan(String value) {
            addCriterion("FORUMCONTENT <", value, "forumcontent");
            return this;
        }

        public Criteria andForumcontentLessThanOrEqualTo(String value) {
            addCriterion("FORUMCONTENT <=", value, "forumcontent");
            return this;
        }

        public Criteria andForumcontentLike(String value) {
            addCriterion("FORUMCONTENT like", value, "forumcontent");
            return this;
        }

        public Criteria andForumcontentNotLike(String value) {
            addCriterion("FORUMCONTENT not like", value, "forumcontent");
            return this;
        }

        public Criteria andForumcontentIn(List<String> values) {
            addCriterion("FORUMCONTENT in", values, "forumcontent");
            return this;
        }

        public Criteria andForumcontentNotIn(List<String> values) {
            addCriterion("FORUMCONTENT not in", values, "forumcontent");
            return this;
        }

        public Criteria andForumcontentBetween(String value1, String value2) {
            addCriterion("FORUMCONTENT between", value1, value2, "forumcontent");
            return this;
        }

        public Criteria andForumcontentNotBetween(String value1, String value2) {
            addCriterion("FORUMCONTENT not between", value1, value2, "forumcontent");
            return this;
        }

        public Criteria andForumcruseridIsNull() {
            addCriterion("FORUMCRUSERID is null");
            return this;
        }

        public Criteria andForumcruseridIsNotNull() {
            addCriterion("FORUMCRUSERID is not null");
            return this;
        }

        public Criteria andForumcruseridEqualTo(Long value) {
            addCriterion("FORUMCRUSERID =", value, "forumcruserid");
            return this;
        }

        public Criteria andForumcruseridNotEqualTo(Long value) {
            addCriterion("FORUMCRUSERID <>", value, "forumcruserid");
            return this;
        }

        public Criteria andForumcruseridGreaterThan(Long value) {
            addCriterion("FORUMCRUSERID >", value, "forumcruserid");
            return this;
        }

        public Criteria andForumcruseridGreaterThanOrEqualTo(Long value) {
            addCriterion("FORUMCRUSERID >=", value, "forumcruserid");
            return this;
        }

        public Criteria andForumcruseridLessThan(Long value) {
            addCriterion("FORUMCRUSERID <", value, "forumcruserid");
            return this;
        }

        public Criteria andForumcruseridLessThanOrEqualTo(Long value) {
            addCriterion("FORUMCRUSERID <=", value, "forumcruserid");
            return this;
        }

        public Criteria andForumcruseridIn(List<Long> values) {
            addCriterion("FORUMCRUSERID in", values, "forumcruserid");
            return this;
        }

        public Criteria andForumcruseridNotIn(List<Long> values) {
            addCriterion("FORUMCRUSERID not in", values, "forumcruserid");
            return this;
        }

        public Criteria andForumcruseridBetween(Long value1, Long value2) {
            addCriterion("FORUMCRUSERID between", value1, value2, "forumcruserid");
            return this;
        }

        public Criteria andForumcruseridNotBetween(Long value1, Long value2) {
            addCriterion("FORUMCRUSERID not between", value1, value2, "forumcruserid");
            return this;
        }

        public Criteria andForumcrtimeIsNull() {
            addCriterion("FORUMCRTIME is null");
            return this;
        }

        public Criteria andForumcrtimeIsNotNull() {
            addCriterion("FORUMCRTIME is not null");
            return this;
        }

        public Criteria andForumcrtimeEqualTo(Date value) {
            addCriterion("FORUMCRTIME =", value, "forumcrtime");
            return this;
        }

        public Criteria andForumcrtimeNotEqualTo(Date value) {
            addCriterion("FORUMCRTIME <>", value, "forumcrtime");
            return this;
        }

        public Criteria andForumcrtimeGreaterThan(Date value) {
            addCriterion("FORUMCRTIME >", value, "forumcrtime");
            return this;
        }

        public Criteria andForumcrtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("FORUMCRTIME >=", value, "forumcrtime");
            return this;
        }

        public Criteria andForumcrtimeLessThan(Date value) {
            addCriterion("FORUMCRTIME <", value, "forumcrtime");
            return this;
        }

        public Criteria andForumcrtimeLessThanOrEqualTo(Date value) {
            addCriterion("FORUMCRTIME <=", value, "forumcrtime");
            return this;
        }

        public Criteria andForumcrtimeIn(List<Date> values) {
            addCriterion("FORUMCRTIME in", values, "forumcrtime");
            return this;
        }

        public Criteria andForumcrtimeNotIn(List<Date> values) {
            addCriterion("FORUMCRTIME not in", values, "forumcrtime");
            return this;
        }

        public Criteria andForumcrtimeBetween(Date value1, Date value2) {
            addCriterion("FORUMCRTIME between", value1, value2, "forumcrtime");
            return this;
        }

        public Criteria andForumcrtimeNotBetween(Date value1, Date value2) {
            addCriterion("FORUMCRTIME not between", value1, value2, "forumcrtime");
            return this;
        }

        public Criteria andForumstatusIsNull() {
            addCriterion("FORUMSTATUS is null");
            return this;
        }

        public Criteria andForumstatusIsNotNull() {
            addCriterion("FORUMSTATUS is not null");
            return this;
        }

        public Criteria andForumstatusEqualTo(Integer value) {
            addCriterion("FORUMSTATUS =", value, "forumstatus");
            return this;
        }

        public Criteria andForumstatusNotEqualTo(Integer value) {
            addCriterion("FORUMSTATUS <>", value, "forumstatus");
            return this;
        }

        public Criteria andForumstatusGreaterThan(Integer value) {
            addCriterion("FORUMSTATUS >", value, "forumstatus");
            return this;
        }

        public Criteria andForumstatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("FORUMSTATUS >=", value, "forumstatus");
            return this;
        }

        public Criteria andForumstatusLessThan(Integer value) {
            addCriterion("FORUMSTATUS <", value, "forumstatus");
            return this;
        }

        public Criteria andForumstatusLessThanOrEqualTo(Integer value) {
            addCriterion("FORUMSTATUS <=", value, "forumstatus");
            return this;
        }

        public Criteria andForumstatusIn(List<Integer> values) {
            addCriterion("FORUMSTATUS in", values, "forumstatus");
            return this;
        }

        public Criteria andForumstatusNotIn(List<Integer> values) {
            addCriterion("FORUMSTATUS not in", values, "forumstatus");
            return this;
        }

        public Criteria andForumstatusBetween(Integer value1, Integer value2) {
            addCriterion("FORUMSTATUS between", value1, value2, "forumstatus");
            return this;
        }

        public Criteria andForumstatusNotBetween(Integer value1, Integer value2) {
            addCriterion("FORUMSTATUS not between", value1, value2, "forumstatus");
            return this;
        }

        public Criteria andForumviewcountIsNull() {
            addCriterion("FORUMVIEWCOUNT is null");
            return this;
        }

        public Criteria andForumviewcountIsNotNull() {
            addCriterion("FORUMVIEWCOUNT is not null");
            return this;
        }

        public Criteria andForumviewcountEqualTo(Long value) {
            addCriterion("FORUMVIEWCOUNT =", value, "forumviewcount");
            return this;
        }

        public Criteria andForumviewcountNotEqualTo(Long value) {
            addCriterion("FORUMVIEWCOUNT <>", value, "forumviewcount");
            return this;
        }

        public Criteria andForumviewcountGreaterThan(Long value) {
            addCriterion("FORUMVIEWCOUNT >", value, "forumviewcount");
            return this;
        }

        public Criteria andForumviewcountGreaterThanOrEqualTo(Long value) {
            addCriterion("FORUMVIEWCOUNT >=", value, "forumviewcount");
            return this;
        }

        public Criteria andForumviewcountLessThan(Long value) {
            addCriterion("FORUMVIEWCOUNT <", value, "forumviewcount");
            return this;
        }

        public Criteria andForumviewcountLessThanOrEqualTo(Long value) {
            addCriterion("FORUMVIEWCOUNT <=", value, "forumviewcount");
            return this;
        }

        public Criteria andForumviewcountIn(List<Long> values) {
            addCriterion("FORUMVIEWCOUNT in", values, "forumviewcount");
            return this;
        }

        public Criteria andForumviewcountNotIn(List<Long> values) {
            addCriterion("FORUMVIEWCOUNT not in", values, "forumviewcount");
            return this;
        }

        public Criteria andForumviewcountBetween(Long value1, Long value2) {
            addCriterion("FORUMVIEWCOUNT between", value1, value2, "forumviewcount");
            return this;
        }

        public Criteria andForumviewcountNotBetween(Long value1, Long value2) {
            addCriterion("FORUMVIEWCOUNT not between", value1, value2, "forumviewcount");
            return this;
        }

        public Criteria andForumtitleIsNull() {
            addCriterion("FORUMTITLE is null");
            return this;
        }

        public Criteria andForumtitleIsNotNull() {
            addCriterion("FORUMTITLE is not null");
            return this;
        }

        public Criteria andForumtitleEqualTo(String value) {
            addCriterion("FORUMTITLE =", value, "forumtitle");
            return this;
        }

        public Criteria andForumtitleNotEqualTo(String value) {
            addCriterion("FORUMTITLE <>", value, "forumtitle");
            return this;
        }

        public Criteria andForumtitleGreaterThan(String value) {
            addCriterion("FORUMTITLE >", value, "forumtitle");
            return this;
        }

        public Criteria andForumtitleGreaterThanOrEqualTo(String value) {
            addCriterion("FORUMTITLE >=", value, "forumtitle");
            return this;
        }

        public Criteria andForumtitleLessThan(String value) {
            addCriterion("FORUMTITLE <", value, "forumtitle");
            return this;
        }

        public Criteria andForumtitleLessThanOrEqualTo(String value) {
            addCriterion("FORUMTITLE <=", value, "forumtitle");
            return this;
        }

        public Criteria andForumtitleLike(String value) {
            addCriterion("FORUMTITLE like", value, "forumtitle");
            return this;
        }

        public Criteria andForumtitleNotLike(String value) {
            addCriterion("FORUMTITLE not like", value, "forumtitle");
            return this;
        }

        public Criteria andForumtitleIn(List<String> values) {
            addCriterion("FORUMTITLE in", values, "forumtitle");
            return this;
        }

        public Criteria andForumtitleNotIn(List<String> values) {
            addCriterion("FORUMTITLE not in", values, "forumtitle");
            return this;
        }

        public Criteria andForumtitleBetween(String value1, String value2) {
            addCriterion("FORUMTITLE between", value1, value2, "forumtitle");
            return this;
        }

        public Criteria andForumtitleNotBetween(String value1, String value2) {
            addCriterion("FORUMTITLE not between", value1, value2, "forumtitle");
            return this;
        }

        public Criteria andForumcategoryidIsNull() {
            addCriterion("FORUMCATEGORYID is null");
            return this;
        }

        public Criteria andForumcategoryidIsNotNull() {
            addCriterion("FORUMCATEGORYID is not null");
            return this;
        }

        public Criteria andForumcategoryidEqualTo(Long value) {
            addCriterion("FORUMCATEGORYID =", value, "forumcategoryid");
            return this;
        }

        public Criteria andForumcategoryidNotEqualTo(Long value) {
            addCriterion("FORUMCATEGORYID <>", value, "forumcategoryid");
            return this;
        }

        public Criteria andForumcategoryidGreaterThan(Long value) {
            addCriterion("FORUMCATEGORYID >", value, "forumcategoryid");
            return this;
        }

        public Criteria andForumcategoryidGreaterThanOrEqualTo(Long value) {
            addCriterion("FORUMCATEGORYID >=", value, "forumcategoryid");
            return this;
        }

        public Criteria andForumcategoryidLessThan(Long value) {
            addCriterion("FORUMCATEGORYID <", value, "forumcategoryid");
            return this;
        }

        public Criteria andForumcategoryidLessThanOrEqualTo(Long value) {
            addCriterion("FORUMCATEGORYID <=", value, "forumcategoryid");
            return this;
        }

        public Criteria andForumcategoryidIn(List<Long> values) {
            addCriterion("FORUMCATEGORYID in", values, "forumcategoryid");
            return this;
        }

        public Criteria andForumcategoryidNotIn(List<Long> values) {
            addCriterion("FORUMCATEGORYID not in", values, "forumcategoryid");
            return this;
        }

        public Criteria andForumcategoryidBetween(Long value1, Long value2) {
            addCriterion("FORUMCATEGORYID between", value1, value2, "forumcategoryid");
            return this;
        }

        public Criteria andForumcategoryidNotBetween(Long value1, Long value2) {
            addCriterion("FORUMCATEGORYID not between", value1, value2, "forumcategoryid");
            return this;
        }
    }
}