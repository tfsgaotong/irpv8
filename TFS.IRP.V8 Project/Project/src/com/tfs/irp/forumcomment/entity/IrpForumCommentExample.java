package com.tfs.irp.forumcomment.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpForumCommentExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_FORUM_COMMENT
     *
     * @ibatorgenerated Tue Sep 26 15:06:31 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_FORUM_COMMENT
     *
     * @ibatorgenerated Tue Sep 26 15:06:31 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_FORUM_COMMENT
     *
     * @ibatorgenerated Tue Sep 26 15:06:31 CST 2017
     */
    public IrpForumCommentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_FORUM_COMMENT
     *
     * @ibatorgenerated Tue Sep 26 15:06:31 CST 2017
     */
    protected IrpForumCommentExample(IrpForumCommentExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_FORUM_COMMENT
     *
     * @ibatorgenerated Tue Sep 26 15:06:31 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_FORUM_COMMENT
     *
     * @ibatorgenerated Tue Sep 26 15:06:31 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_FORUM_COMMENT
     *
     * @ibatorgenerated Tue Sep 26 15:06:31 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_FORUM_COMMENT
     *
     * @ibatorgenerated Tue Sep 26 15:06:31 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_FORUM_COMMENT
     *
     * @ibatorgenerated Tue Sep 26 15:06:31 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_FORUM_COMMENT
     *
     * @ibatorgenerated Tue Sep 26 15:06:31 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_FORUM_COMMENT
     *
     * @ibatorgenerated Tue Sep 26 15:06:31 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_FORUM_COMMENT
     *
     * @ibatorgenerated Tue Sep 26 15:06:31 CST 2017
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andFcidIsNull() {
            addCriterion("FCID is null");
            return this;
        }

        public Criteria andFcidIsNotNull() {
            addCriterion("FCID is not null");
            return this;
        }

        public Criteria andFcidEqualTo(Long value) {
            addCriterion("FCID =", value, "fcid");
            return this;
        }

        public Criteria andFcidNotEqualTo(Long value) {
            addCriterion("FCID <>", value, "fcid");
            return this;
        }

        public Criteria andFcidGreaterThan(Long value) {
            addCriterion("FCID >", value, "fcid");
            return this;
        }

        public Criteria andFcidGreaterThanOrEqualTo(Long value) {
            addCriterion("FCID >=", value, "fcid");
            return this;
        }

        public Criteria andFcidLessThan(Long value) {
            addCriterion("FCID <", value, "fcid");
            return this;
        }

        public Criteria andFcidLessThanOrEqualTo(Long value) {
            addCriterion("FCID <=", value, "fcid");
            return this;
        }

        public Criteria andFcidIn(List<Long> values) {
            addCriterion("FCID in", values, "fcid");
            return this;
        }

        public Criteria andFcidNotIn(List<Long> values) {
            addCriterion("FCID not in", values, "fcid");
            return this;
        }

        public Criteria andFcidBetween(Long value1, Long value2) {
            addCriterion("FCID between", value1, value2, "fcid");
            return this;
        }

        public Criteria andFcidNotBetween(Long value1, Long value2) {
            addCriterion("FCID not between", value1, value2, "fcid");
            return this;
        }

        public Criteria andFcForumidIsNull() {
            addCriterion("FC_FORUMID is null");
            return this;
        }

        public Criteria andFcForumidIsNotNull() {
            addCriterion("FC_FORUMID is not null");
            return this;
        }

        public Criteria andFcForumidEqualTo(Long value) {
            addCriterion("FC_FORUMID =", value, "fcForumid");
            return this;
        }

        public Criteria andFcForumidNotEqualTo(Long value) {
            addCriterion("FC_FORUMID <>", value, "fcForumid");
            return this;
        }

        public Criteria andFcForumidGreaterThan(Long value) {
            addCriterion("FC_FORUMID >", value, "fcForumid");
            return this;
        }

        public Criteria andFcForumidGreaterThanOrEqualTo(Long value) {
            addCriterion("FC_FORUMID >=", value, "fcForumid");
            return this;
        }

        public Criteria andFcForumidLessThan(Long value) {
            addCriterion("FC_FORUMID <", value, "fcForumid");
            return this;
        }

        public Criteria andFcForumidLessThanOrEqualTo(Long value) {
            addCriterion("FC_FORUMID <=", value, "fcForumid");
            return this;
        }

        public Criteria andFcForumidIn(List<Long> values) {
            addCriterion("FC_FORUMID in", values, "fcForumid");
            return this;
        }

        public Criteria andFcForumidNotIn(List<Long> values) {
            addCriterion("FC_FORUMID not in", values, "fcForumid");
            return this;
        }

        public Criteria andFcForumidBetween(Long value1, Long value2) {
            addCriterion("FC_FORUMID between", value1, value2, "fcForumid");
            return this;
        }

        public Criteria andFcForumidNotBetween(Long value1, Long value2) {
            addCriterion("FC_FORUMID not between", value1, value2, "fcForumid");
            return this;
        }

        public Criteria andFccontentIsNull() {
            addCriterion("FCCONTENT is null");
            return this;
        }

        public Criteria andFccontentIsNotNull() {
            addCriterion("FCCONTENT is not null");
            return this;
        }

        public Criteria andFccontentEqualTo(String value) {
            addCriterion("FCCONTENT =", value, "fccontent");
            return this;
        }

        public Criteria andFccontentNotEqualTo(String value) {
            addCriterion("FCCONTENT <>", value, "fccontent");
            return this;
        }

        public Criteria andFccontentGreaterThan(String value) {
            addCriterion("FCCONTENT >", value, "fccontent");
            return this;
        }

        public Criteria andFccontentGreaterThanOrEqualTo(String value) {
            addCriterion("FCCONTENT >=", value, "fccontent");
            return this;
        }

        public Criteria andFccontentLessThan(String value) {
            addCriterion("FCCONTENT <", value, "fccontent");
            return this;
        }

        public Criteria andFccontentLessThanOrEqualTo(String value) {
            addCriterion("FCCONTENT <=", value, "fccontent");
            return this;
        }

        public Criteria andFccontentLike(String value) {
            addCriterion("FCCONTENT like", value, "fccontent");
            return this;
        }

        public Criteria andFccontentNotLike(String value) {
            addCriterion("FCCONTENT not like", value, "fccontent");
            return this;
        }

        public Criteria andFccontentIn(List<String> values) {
            addCriterion("FCCONTENT in", values, "fccontent");
            return this;
        }

        public Criteria andFccontentNotIn(List<String> values) {
            addCriterion("FCCONTENT not in", values, "fccontent");
            return this;
        }

        public Criteria andFccontentBetween(String value1, String value2) {
            addCriterion("FCCONTENT between", value1, value2, "fccontent");
            return this;
        }

        public Criteria andFccontentNotBetween(String value1, String value2) {
            addCriterion("FCCONTENT not between", value1, value2, "fccontent");
            return this;
        }

        public Criteria andFccruseridIsNull() {
            addCriterion("FCCRUSERID is null");
            return this;
        }

        public Criteria andFccruseridIsNotNull() {
            addCriterion("FCCRUSERID is not null");
            return this;
        }

        public Criteria andFccruseridEqualTo(Long value) {
            addCriterion("FCCRUSERID =", value, "fccruserid");
            return this;
        }

        public Criteria andFccruseridNotEqualTo(Long value) {
            addCriterion("FCCRUSERID <>", value, "fccruserid");
            return this;
        }

        public Criteria andFccruseridGreaterThan(Long value) {
            addCriterion("FCCRUSERID >", value, "fccruserid");
            return this;
        }

        public Criteria andFccruseridGreaterThanOrEqualTo(Long value) {
            addCriterion("FCCRUSERID >=", value, "fccruserid");
            return this;
        }

        public Criteria andFccruseridLessThan(Long value) {
            addCriterion("FCCRUSERID <", value, "fccruserid");
            return this;
        }

        public Criteria andFccruseridLessThanOrEqualTo(Long value) {
            addCriterion("FCCRUSERID <=", value, "fccruserid");
            return this;
        }

        public Criteria andFccruseridIn(List<Long> values) {
            addCriterion("FCCRUSERID in", values, "fccruserid");
            return this;
        }

        public Criteria andFccruseridNotIn(List<Long> values) {
            addCriterion("FCCRUSERID not in", values, "fccruserid");
            return this;
        }

        public Criteria andFccruseridBetween(Long value1, Long value2) {
            addCriterion("FCCRUSERID between", value1, value2, "fccruserid");
            return this;
        }

        public Criteria andFccruseridNotBetween(Long value1, Long value2) {
            addCriterion("FCCRUSERID not between", value1, value2, "fccruserid");
            return this;
        }

        public Criteria andFccrtimeIsNull() {
            addCriterion("FCCRTIME is null");
            return this;
        }

        public Criteria andFccrtimeIsNotNull() {
            addCriterion("FCCRTIME is not null");
            return this;
        }

        public Criteria andFccrtimeEqualTo(Date value) {
            addCriterion("FCCRTIME =", value, "fccrtime");
            return this;
        }

        public Criteria andFccrtimeNotEqualTo(Date value) {
            addCriterion("FCCRTIME <>", value, "fccrtime");
            return this;
        }

        public Criteria andFccrtimeGreaterThan(Date value) {
            addCriterion("FCCRTIME >", value, "fccrtime");
            return this;
        }

        public Criteria andFccrtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("FCCRTIME >=", value, "fccrtime");
            return this;
        }

        public Criteria andFccrtimeLessThan(Date value) {
            addCriterion("FCCRTIME <", value, "fccrtime");
            return this;
        }

        public Criteria andFccrtimeLessThanOrEqualTo(Date value) {
            addCriterion("FCCRTIME <=", value, "fccrtime");
            return this;
        }

        public Criteria andFccrtimeIn(List<Date> values) {
            addCriterion("FCCRTIME in", values, "fccrtime");
            return this;
        }

        public Criteria andFccrtimeNotIn(List<Date> values) {
            addCriterion("FCCRTIME not in", values, "fccrtime");
            return this;
        }

        public Criteria andFccrtimeBetween(Date value1, Date value2) {
            addCriterion("FCCRTIME between", value1, value2, "fccrtime");
            return this;
        }

        public Criteria andFccrtimeNotBetween(Date value1, Date value2) {
            addCriterion("FCCRTIME not between", value1, value2, "fccrtime");
            return this;
        }

        public Criteria andFcstatusIsNull() {
            addCriterion("FCSTATUS is null");
            return this;
        }

        public Criteria andFcstatusIsNotNull() {
            addCriterion("FCSTATUS is not null");
            return this;
        }

        public Criteria andFcstatusEqualTo(Integer value) {
            addCriterion("FCSTATUS =", value, "fcstatus");
            return this;
        }

        public Criteria andFcstatusNotEqualTo(Integer value) {
            addCriterion("FCSTATUS <>", value, "fcstatus");
            return this;
        }

        public Criteria andFcstatusGreaterThan(Integer value) {
            addCriterion("FCSTATUS >", value, "fcstatus");
            return this;
        }

        public Criteria andFcstatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("FCSTATUS >=", value, "fcstatus");
            return this;
        }

        public Criteria andFcstatusLessThan(Integer value) {
            addCriterion("FCSTATUS <", value, "fcstatus");
            return this;
        }

        public Criteria andFcstatusLessThanOrEqualTo(Integer value) {
            addCriterion("FCSTATUS <=", value, "fcstatus");
            return this;
        }

        public Criteria andFcstatusIn(List<Integer> values) {
            addCriterion("FCSTATUS in", values, "fcstatus");
            return this;
        }

        public Criteria andFcstatusNotIn(List<Integer> values) {
            addCriterion("FCSTATUS not in", values, "fcstatus");
            return this;
        }

        public Criteria andFcstatusBetween(Integer value1, Integer value2) {
            addCriterion("FCSTATUS between", value1, value2, "fcstatus");
            return this;
        }

        public Criteria andFcstatusNotBetween(Integer value1, Integer value2) {
            addCriterion("FCSTATUS not between", value1, value2, "fcstatus");
            return this;
        }
    }
}