package com.tfs.irp.group.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class IrpGroupExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_GROUP
     *
     * @ibatorgenerated Thu Feb 28 16:10:30 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_GROUP
     *
     * @ibatorgenerated Thu Feb 28 16:10:30 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_GROUP
     *
     * @ibatorgenerated Thu Feb 28 16:10:30 CST 2013
     */
    public IrpGroupExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_GROUP
     *
     * @ibatorgenerated Thu Feb 28 16:10:30 CST 2013
     */
    protected IrpGroupExample(IrpGroupExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_GROUP
     *
     * @ibatorgenerated Thu Feb 28 16:10:30 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_GROUP
     *
     * @ibatorgenerated Thu Feb 28 16:10:30 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_GROUP
     *
     * @ibatorgenerated Thu Feb 28 16:10:30 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_GROUP
     *
     * @ibatorgenerated Thu Feb 28 16:10:30 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_GROUP
     *
     * @ibatorgenerated Thu Feb 28 16:10:30 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_GROUP
     *
     * @ibatorgenerated Thu Feb 28 16:10:30 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_GROUP
     *
     * @ibatorgenerated Thu Feb 28 16:10:30 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_GROUP
     *
     * @ibatorgenerated Thu Feb 28 16:10:30 CST 2013
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andGroupidIsNull() {
            addCriterion("GROUPID is null");
            return this;
        }

        public Criteria andGroupidIsNotNull() {
            addCriterion("GROUPID is not null");
            return this;
        }

        public Criteria andGroupidEqualTo(Long value) {
            addCriterion("GROUPID =", value, "groupid");
            return this;
        }

        public Criteria andGroupidNotEqualTo(Long value) {
            addCriterion("GROUPID <>", value, "groupid");
            return this;
        }

        public Criteria andGroupidGreaterThan(Long value) {
            addCriterion("GROUPID >", value, "groupid");
            return this;
        }

        public Criteria andGroupidGreaterThanOrEqualTo(Long value) {
            addCriterion("GROUPID >=", value, "groupid");
            return this;
        }

        public Criteria andGroupidLessThan(Long value) {
            addCriterion("GROUPID <", value, "groupid");
            return this;
        }

        public Criteria andGroupidLessThanOrEqualTo(Long value) {
            addCriterion("GROUPID <=", value, "groupid");
            return this;
        }

        public Criteria andGroupidIn(List<Long> values) {
            addCriterion("GROUPID in", values, "groupid");
            return this;
        }

        public Criteria andGroupidNotIn(List<Long> values) {
            addCriterion("GROUPID not in", values, "groupid");
            return this;
        }

        public Criteria andGroupidBetween(Long value1, Long value2) {
            addCriterion("GROUPID between", value1, value2, "groupid");
            return this;
        }

        public Criteria andGroupidNotBetween(Long value1, Long value2) {
            addCriterion("GROUPID not between", value1, value2, "groupid");
            return this;
        }

        public Criteria andGroupnameIsNull() {
            addCriterion("GROUPNAME is null");
            return this;
        }

        public Criteria andGroupnameIsNotNull() {
            addCriterion("GROUPNAME is not null");
            return this;
        }

        public Criteria andGroupnameEqualTo(String value) {
            addCriterion("GROUPNAME =", value, "groupname");
            return this;
        }

        public Criteria andGroupnameNotEqualTo(String value) {
            addCriterion("GROUPNAME <>", value, "groupname");
            return this;
        }

        public Criteria andGroupnameGreaterThan(String value) {
            addCriterion("GROUPNAME >", value, "groupname");
            return this;
        }

        public Criteria andGroupnameGreaterThanOrEqualTo(String value) {
            addCriterion("GROUPNAME >=", value, "groupname");
            return this;
        }

        public Criteria andGroupnameLessThan(String value) {
            addCriterion("GROUPNAME <", value, "groupname");
            return this;
        }

        public Criteria andGroupnameLessThanOrEqualTo(String value) {
            addCriterion("GROUPNAME <=", value, "groupname");
            return this;
        }

        public Criteria andGroupnameLike(String value) {
            addCriterion("GROUPNAME like", value, "groupname");
            return this;
        }

        public Criteria andGroupnameNotLike(String value) {
            addCriterion("GROUPNAME not like", value, "groupname");
            return this;
        }

        public Criteria andGroupnameIn(List<String> values) {
            addCriterion("GROUPNAME in", values, "groupname");
            return this;
        }

        public Criteria andGroupnameNotIn(List<String> values) {
            addCriterion("GROUPNAME not in", values, "groupname");
            return this;
        }

        public Criteria andGroupnameBetween(String value1, String value2) {
            addCriterion("GROUPNAME between", value1, value2, "groupname");
            return this;
        }

        public Criteria andGroupnameNotBetween(String value1, String value2) {
            addCriterion("GROUPNAME not between", value1, value2, "groupname");
            return this;
        }

        public Criteria andGdescIsNull() {
            addCriterion("GDESC is null");
            return this;
        }

        public Criteria andGdescIsNotNull() {
            addCriterion("GDESC is not null");
            return this;
        }

        public Criteria andGdescEqualTo(String value) {
            addCriterion("GDESC =", value, "gdesc");
            return this;
        }

        public Criteria andGdescNotEqualTo(String value) {
            addCriterion("GDESC <>", value, "gdesc");
            return this;
        }

        public Criteria andGdescGreaterThan(String value) {
            addCriterion("GDESC >", value, "gdesc");
            return this;
        }

        public Criteria andGdescGreaterThanOrEqualTo(String value) {
            addCriterion("GDESC >=", value, "gdesc");
            return this;
        }

        public Criteria andGdescLessThan(String value) {
            addCriterion("GDESC <", value, "gdesc");
            return this;
        }

        public Criteria andGdescLessThanOrEqualTo(String value) {
            addCriterion("GDESC <=", value, "gdesc");
            return this;
        }

        public Criteria andGdescLike(String value) {
            addCriterion("GDESC like", value, "gdesc");
            return this;
        }

        public Criteria andGdescNotLike(String value) {
            addCriterion("GDESC not like", value, "gdesc");
            return this;
        }

        public Criteria andGdescIn(List<String> values) {
            addCriterion("GDESC in", values, "gdesc");
            return this;
        }

        public Criteria andGdescNotIn(List<String> values) {
            addCriterion("GDESC not in", values, "gdesc");
            return this;
        }

        public Criteria andGdescBetween(String value1, String value2) {
            addCriterion("GDESC between", value1, value2, "gdesc");
            return this;
        }

        public Criteria andGdescNotBetween(String value1, String value2) {
            addCriterion("GDESC not between", value1, value2, "gdesc");
            return this;
        }

        public Criteria andParentidIsNull() {
            addCriterion("PARENTID is null");
            return this;
        }

        public Criteria andParentidIsNotNull() {
            addCriterion("PARENTID is not null");
            return this;
        }

        public Criteria andParentidEqualTo(Long value) {
            addCriterion("PARENTID =", value, "parentid");
            return this;
        }

        public Criteria andParentidNotEqualTo(Long value) {
            addCriterion("PARENTID <>", value, "parentid");
            return this;
        }

        public Criteria andParentidGreaterThan(Long value) {
            addCriterion("PARENTID >", value, "parentid");
            return this;
        }

        public Criteria andParentidGreaterThanOrEqualTo(Long value) {
            addCriterion("PARENTID >=", value, "parentid");
            return this;
        }

        public Criteria andParentidLessThan(Long value) {
            addCriterion("PARENTID <", value, "parentid");
            return this;
        }

        public Criteria andParentidLessThanOrEqualTo(Long value) {
            addCriterion("PARENTID <=", value, "parentid");
            return this;
        }

        public Criteria andParentidIn(List<Long> values) {
            addCriterion("PARENTID in", values, "parentid");
            return this;
        }

        public Criteria andParentidNotIn(List<Long> values) {
            addCriterion("PARENTID not in", values, "parentid");
            return this;
        }

        public Criteria andParentidBetween(Long value1, Long value2) {
            addCriterion("PARENTID between", value1, value2, "parentid");
            return this;
        }

        public Criteria andParentidNotBetween(Long value1, Long value2) {
            addCriterion("PARENTID not between", value1, value2, "parentid");
            return this;
        }

        public Criteria andAttributeIsNull() {
            addCriterion("ATTRIBUTE is null");
            return this;
        }

        public Criteria andAttributeIsNotNull() {
            addCriterion("ATTRIBUTE is not null");
            return this;
        }

        public Criteria andAttributeEqualTo(String value) {
            addCriterion("ATTRIBUTE =", value, "attribute");
            return this;
        }

        public Criteria andAttributeNotEqualTo(String value) {
            addCriterion("ATTRIBUTE <>", value, "attribute");
            return this;
        }

        public Criteria andAttributeGreaterThan(String value) {
            addCriterion("ATTRIBUTE >", value, "attribute");
            return this;
        }

        public Criteria andAttributeGreaterThanOrEqualTo(String value) {
            addCriterion("ATTRIBUTE >=", value, "attribute");
            return this;
        }

        public Criteria andAttributeLessThan(String value) {
            addCriterion("ATTRIBUTE <", value, "attribute");
            return this;
        }

        public Criteria andAttributeLessThanOrEqualTo(String value) {
            addCriterion("ATTRIBUTE <=", value, "attribute");
            return this;
        }

        public Criteria andAttributeLike(String value) {
            addCriterion("ATTRIBUTE like", value, "attribute");
            return this;
        }

        public Criteria andAttributeNotLike(String value) {
            addCriterion("ATTRIBUTE not like", value, "attribute");
            return this;
        }

        public Criteria andAttributeIn(List<String> values) {
            addCriterion("ATTRIBUTE in", values, "attribute");
            return this;
        }

        public Criteria andAttributeNotIn(List<String> values) {
            addCriterion("ATTRIBUTE not in", values, "attribute");
            return this;
        }

        public Criteria andAttributeBetween(String value1, String value2) {
            addCriterion("ATTRIBUTE between", value1, value2, "attribute");
            return this;
        }

        public Criteria andAttributeNotBetween(String value1, String value2) {
            addCriterion("ATTRIBUTE not between", value1, value2, "attribute");
            return this;
        }

        public Criteria andCruserIsNull() {
            addCriterion("CRUSER is null");
            return this;
        }

        public Criteria andCruserIsNotNull() {
            addCriterion("CRUSER is not null");
            return this;
        }

        public Criteria andCruserEqualTo(String value) {
            addCriterion("CRUSER =", value, "cruser");
            return this;
        }

        public Criteria andCruserNotEqualTo(String value) {
            addCriterion("CRUSER <>", value, "cruser");
            return this;
        }

        public Criteria andCruserGreaterThan(String value) {
            addCriterion("CRUSER >", value, "cruser");
            return this;
        }

        public Criteria andCruserGreaterThanOrEqualTo(String value) {
            addCriterion("CRUSER >=", value, "cruser");
            return this;
        }

        public Criteria andCruserLessThan(String value) {
            addCriterion("CRUSER <", value, "cruser");
            return this;
        }

        public Criteria andCruserLessThanOrEqualTo(String value) {
            addCriterion("CRUSER <=", value, "cruser");
            return this;
        }

        public Criteria andCruserLike(String value) {
            addCriterion("CRUSER like", value, "cruser");
            return this;
        }

        public Criteria andCruserNotLike(String value) {
            addCriterion("CRUSER not like", value, "cruser");
            return this;
        }

        public Criteria andCruserIn(List<String> values) {
            addCriterion("CRUSER in", values, "cruser");
            return this;
        }

        public Criteria andCruserNotIn(List<String> values) {
            addCriterion("CRUSER not in", values, "cruser");
            return this;
        }

        public Criteria andCruserBetween(String value1, String value2) {
            addCriterion("CRUSER between", value1, value2, "cruser");
            return this;
        }

        public Criteria andCruserNotBetween(String value1, String value2) {
            addCriterion("CRUSER not between", value1, value2, "cruser");
            return this;
        }

        public Criteria andCruseridIsNull() {
            addCriterion("CRUSERID is null");
            return this;
        }

        public Criteria andCruseridIsNotNull() {
            addCriterion("CRUSERID is not null");
            return this;
        }

        public Criteria andCruseridEqualTo(Long value) {
            addCriterion("CRUSERID =", value, "cruserid");
            return this;
        }

        public Criteria andCruseridNotEqualTo(Long value) {
            addCriterion("CRUSERID <>", value, "cruserid");
            return this;
        }

        public Criteria andCruseridGreaterThan(Long value) {
            addCriterion("CRUSERID >", value, "cruserid");
            return this;
        }

        public Criteria andCruseridGreaterThanOrEqualTo(Long value) {
            addCriterion("CRUSERID >=", value, "cruserid");
            return this;
        }

        public Criteria andCruseridLessThan(Long value) {
            addCriterion("CRUSERID <", value, "cruserid");
            return this;
        }

        public Criteria andCruseridLessThanOrEqualTo(Long value) {
            addCriterion("CRUSERID <=", value, "cruserid");
            return this;
        }

        public Criteria andCruseridIn(List<Long> values) {
            addCriterion("CRUSERID in", values, "cruserid");
            return this;
        }

        public Criteria andCruseridNotIn(List<Long> values) {
            addCriterion("CRUSERID not in", values, "cruserid");
            return this;
        }

        public Criteria andCruseridBetween(Long value1, Long value2) {
            addCriterion("CRUSERID between", value1, value2, "cruserid");
            return this;
        }

        public Criteria andCruseridNotBetween(Long value1, Long value2) {
            addCriterion("CRUSERID not between", value1, value2, "cruserid");
            return this;
        }

        public Criteria andCrtimeIsNull() {
            addCriterion("CRTIME is null");
            return this;
        }

        public Criteria andCrtimeIsNotNull() {
            addCriterion("CRTIME is not null");
            return this;
        }

        public Criteria andCrtimeEqualTo(Date value) {
            addCriterionForJDBCDate("CRTIME =", value, "crtime");
            return this;
        }

        public Criteria andCrtimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("CRTIME <>", value, "crtime");
            return this;
        }

        public Criteria andCrtimeGreaterThan(Date value) {
            addCriterionForJDBCDate("CRTIME >", value, "crtime");
            return this;
        }

        public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CRTIME >=", value, "crtime");
            return this;
        }

        public Criteria andCrtimeLessThan(Date value) {
            addCriterionForJDBCDate("CRTIME <", value, "crtime");
            return this;
        }

        public Criteria andCrtimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CRTIME <=", value, "crtime");
            return this;
        }

        public Criteria andCrtimeIn(List<Date> values) {
            addCriterionForJDBCDate("CRTIME in", values, "crtime");
            return this;
        }

        public Criteria andCrtimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("CRTIME not in", values, "crtime");
            return this;
        }

        public Criteria andCrtimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CRTIME between", value1, value2, "crtime");
            return this;
        }

        public Criteria andCrtimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CRTIME not between", value1, value2, "crtime");
            return this;
        }

        public Criteria andGrouporderIsNull() {
            addCriterion("GROUPORDER is null");
            return this;
        }

        public Criteria andGrouporderIsNotNull() {
            addCriterion("GROUPORDER is not null");
            return this;
        }

        public Criteria andGrouporderEqualTo(Long value) {
            addCriterion("GROUPORDER =", value, "grouporder");
            return this;
        }

        public Criteria andGrouporderNotEqualTo(Long value) {
            addCriterion("GROUPORDER <>", value, "grouporder");
            return this;
        }

        public Criteria andGrouporderGreaterThan(Long value) {
            addCriterion("GROUPORDER >", value, "grouporder");
            return this;
        }

        public Criteria andGrouporderGreaterThanOrEqualTo(Long value) {
            addCriterion("GROUPORDER >=", value, "grouporder");
            return this;
        }

        public Criteria andGrouporderLessThan(Long value) {
            addCriterion("GROUPORDER <", value, "grouporder");
            return this;
        }

        public Criteria andGrouporderLessThanOrEqualTo(Long value) {
            addCriterion("GROUPORDER <=", value, "grouporder");
            return this;
        }

        public Criteria andGrouporderIn(List<Long> values) {
            addCriterion("GROUPORDER in", values, "grouporder");
            return this;
        }

        public Criteria andGrouporderNotIn(List<Long> values) {
            addCriterion("GROUPORDER not in", values, "grouporder");
            return this;
        }

        public Criteria andGrouporderBetween(Long value1, Long value2) {
            addCriterion("GROUPORDER between", value1, value2, "grouporder");
            return this;
        }

        public Criteria andGrouporderNotBetween(Long value1, Long value2) {
            addCriterion("GROUPORDER not between", value1, value2, "grouporder");
            return this;
        }

        public Criteria andOrgcodeIsNull() {
            addCriterion("ORGCODE is null");
            return this;
        }

        public Criteria andOrgcodeIsNotNull() {
            addCriterion("ORGCODE is not null");
            return this;
        }

        public Criteria andOrgcodeEqualTo(String value) {
            addCriterion("ORGCODE =", value, "orgcode");
            return this;
        }

        public Criteria andOrgcodeNotEqualTo(String value) {
            addCriterion("ORGCODE <>", value, "orgcode");
            return this;
        }

        public Criteria andOrgcodeGreaterThan(String value) {
            addCriterion("ORGCODE >", value, "orgcode");
            return this;
        }

        public Criteria andOrgcodeGreaterThanOrEqualTo(String value) {
            addCriterion("ORGCODE >=", value, "orgcode");
            return this;
        }

        public Criteria andOrgcodeLessThan(String value) {
            addCriterion("ORGCODE <", value, "orgcode");
            return this;
        }

        public Criteria andOrgcodeLessThanOrEqualTo(String value) {
            addCriterion("ORGCODE <=", value, "orgcode");
            return this;
        }

        public Criteria andOrgcodeLike(String value) {
            addCriterion("ORGCODE like", value, "orgcode");
            return this;
        }

        public Criteria andOrgcodeNotLike(String value) {
            addCriterion("ORGCODE not like", value, "orgcode");
            return this;
        }

        public Criteria andOrgcodeIn(List<String> values) {
            addCriterion("ORGCODE in", values, "orgcode");
            return this;
        }

        public Criteria andOrgcodeNotIn(List<String> values) {
            addCriterion("ORGCODE not in", values, "orgcode");
            return this;
        }

        public Criteria andOrgcodeBetween(String value1, String value2) {
            addCriterion("ORGCODE between", value1, value2, "orgcode");
            return this;
        }

        public Criteria andOrgcodeNotBetween(String value1, String value2) {
            addCriterion("ORGCODE not between", value1, value2, "orgcode");
            return this;
        }

        public Criteria andGroupsecurityIsNull() {
            addCriterion("GROUPSECURITY is null");
            return this;
        }

        public Criteria andGroupsecurityIsNotNull() {
            addCriterion("GROUPSECURITY is not null");
            return this;
        }

        public Criteria andGroupsecurityEqualTo(Long value) {
            addCriterion("GROUPSECURITY =", value, "groupsecurity");
            return this;
        }

        public Criteria andGroupsecurityNotEqualTo(Long value) {
            addCriterion("GROUPSECURITY <>", value, "groupsecurity");
            return this;
        }

        public Criteria andGroupsecurityGreaterThan(Long value) {
            addCriterion("GROUPSECURITY >", value, "groupsecurity");
            return this;
        }

        public Criteria andGroupsecurityGreaterThanOrEqualTo(Long value) {
            addCriterion("GROUPSECURITY >=", value, "groupsecurity");
            return this;
        }

        public Criteria andGroupsecurityLessThan(Long value) {
            addCriterion("GROUPSECURITY <", value, "groupsecurity");
            return this;
        }

        public Criteria andGroupsecurityLessThanOrEqualTo(Long value) {
            addCriterion("GROUPSECURITY <=", value, "groupsecurity");
            return this;
        }

        public Criteria andGroupsecurityIn(List<Long> values) {
            addCriterion("GROUPSECURITY in", values, "groupsecurity");
            return this;
        }

        public Criteria andGroupsecurityNotIn(List<Long> values) {
            addCriterion("GROUPSECURITY not in", values, "groupsecurity");
            return this;
        }

        public Criteria andGroupsecurityBetween(Long value1, Long value2) {
            addCriterion("GROUPSECURITY between", value1, value2, "groupsecurity");
            return this;
        }

        public Criteria andGroupsecurityNotBetween(Long value1, Long value2) {
            addCriterion("GROUPSECURITY not between", value1, value2, "groupsecurity");
            return this;
        }

        public Criteria andGrouptypeIsNull() {
            addCriterion("GROUPTYPE is null");
            return this;
        }

        public Criteria andGrouptypeIsNotNull() {
            addCriterion("GROUPTYPE is not null");
            return this;
        }

        public Criteria andGrouptypeEqualTo(Long value) {
            addCriterion("GROUPTYPE =", value, "grouptype");
            return this;
        }

        public Criteria andGrouptypeNotEqualTo(Long value) {
            addCriterion("GROUPTYPE <>", value, "grouptype");
            return this;
        }

        public Criteria andGrouptypeGreaterThan(Long value) {
            addCriterion("GROUPTYPE >", value, "grouptype");
            return this;
        }

        public Criteria andGrouptypeGreaterThanOrEqualTo(Long value) {
            addCriterion("GROUPTYPE >=", value, "grouptype");
            return this;
        }

        public Criteria andGrouptypeLessThan(Long value) {
            addCriterion("GROUPTYPE <", value, "grouptype");
            return this;
        }

        public Criteria andGrouptypeLessThanOrEqualTo(Long value) {
            addCriterion("GROUPTYPE <=", value, "grouptype");
            return this;
        }

        public Criteria andGrouptypeIn(List<Long> values) {
            addCriterion("GROUPTYPE in", values, "grouptype");
            return this;
        }

        public Criteria andGrouptypeNotIn(List<Long> values) {
            addCriterion("GROUPTYPE not in", values, "grouptype");
            return this;
        }

        public Criteria andGrouptypeBetween(Long value1, Long value2) {
            addCriterion("GROUPTYPE between", value1, value2, "grouptype");
            return this;
        }

        public Criteria andGrouptypeNotBetween(Long value1, Long value2) {
            addCriterion("GROUPTYPE not between", value1, value2, "grouptype");
            return this;
        }

        public Criteria andSynsrcidIsNull() {
            addCriterion("SYNSRCID is null");
            return this;
        }

        public Criteria andSynsrcidIsNotNull() {
            addCriterion("SYNSRCID is not null");
            return this;
        }

        public Criteria andSynsrcidEqualTo(String value) {
            addCriterion("SYNSRCID =", value, "synsrcid");
            return this;
        }

        public Criteria andSynsrcidNotEqualTo(String value) {
            addCriterion("SYNSRCID <>", value, "synsrcid");
            return this;
        }

        public Criteria andSynsrcidGreaterThan(String value) {
            addCriterion("SYNSRCID >", value, "synsrcid");
            return this;
        }

        public Criteria andSynsrcidGreaterThanOrEqualTo(String value) {
            addCriterion("SYNSRCID >=", value, "synsrcid");
            return this;
        }

        public Criteria andSynsrcidLessThan(String value) {
            addCriterion("SYNSRCID <", value, "synsrcid");
            return this;
        }

        public Criteria andSynsrcidLessThanOrEqualTo(String value) {
            addCriterion("SYNSRCID <=", value, "synsrcid");
            return this;
        }

        public Criteria andSynsrcidLike(String value) {
            addCriterion("SYNSRCID like", value, "synsrcid");
            return this;
        }

        public Criteria andSynsrcidNotLike(String value) {
            addCriterion("SYNSRCID not like", value, "synsrcid");
            return this;
        }

        public Criteria andSynsrcidIn(List<String> values) {
            addCriterion("SYNSRCID in", values, "synsrcid");
            return this;
        }

        public Criteria andSynsrcidNotIn(List<String> values) {
            addCriterion("SYNSRCID not in", values, "synsrcid");
            return this;
        }

        public Criteria andSynsrcidBetween(String value1, String value2) {
            addCriterion("SYNSRCID between", value1, value2, "synsrcid");
            return this;
        }

        public Criteria andSynsrcidNotBetween(String value1, String value2) {
            addCriterion("SYNSRCID not between", value1, value2, "synsrcid");
            return this;
        }

        public Criteria andChannelidIsNull() {
            addCriterion("CHANNELID is null");
            return this;
        }

        public Criteria andChannelidIsNotNull() {
            addCriterion("CHANNELID is not null");
            return this;
        }

        public Criteria andChannelidEqualTo(Long value) {
            addCriterion("CHANNELID =", value, "channelid");
            return this;
        }

        public Criteria andChannelidNotEqualTo(Long value) {
            addCriterion("CHANNELID <>", value, "channelid");
            return this;
        }

        public Criteria andChannelidGreaterThan(Long value) {
            addCriterion("CHANNELID >", value, "channelid");
            return this;
        }

        public Criteria andChannelidGreaterThanOrEqualTo(Long value) {
            addCriterion("CHANNELID >=", value, "channelid");
            return this;
        }

        public Criteria andChannelidLessThan(Long value) {
            addCriterion("CHANNELID <", value, "channelid");
            return this;
        }

        public Criteria andChannelidLessThanOrEqualTo(Long value) {
            addCriterion("CHANNELID <=", value, "channelid");
            return this;
        }

        public Criteria andChannelidIn(List<Long> values) {
            addCriterion("CHANNELID in", values, "channelid");
            return this;
        }

        public Criteria andChannelidNotIn(List<Long> values) {
            addCriterion("CHANNELID not in", values, "channelid");
            return this;
        }

        public Criteria andChannelidBetween(Long value1, Long value2) {
            addCriterion("CHANNELID between", value1, value2, "channelid");
            return this;
        }

        public Criteria andChannelidNotBetween(Long value1, Long value2) {
            addCriterion("CHANNELID not between", value1, value2, "channelid");
            return this;
        }

        public Criteria andRootidIsNull() {
            addCriterion("ROOTID is null");
            return this;
        }

        public Criteria andRootidIsNotNull() {
            addCriterion("ROOTID is not null");
            return this;
        }

        public Criteria andRootidEqualTo(Long value) {
            addCriterion("ROOTID =", value, "rootid");
            return this;
        }

        public Criteria andRootidNotEqualTo(Long value) {
            addCriterion("ROOTID <>", value, "rootid");
            return this;
        }

        public Criteria andRootidGreaterThan(Long value) {
            addCriterion("ROOTID >", value, "rootid");
            return this;
        }

        public Criteria andRootidGreaterThanOrEqualTo(Long value) {
            addCriterion("ROOTID >=", value, "rootid");
            return this;
        }

        public Criteria andRootidLessThan(Long value) {
            addCriterion("ROOTID <", value, "rootid");
            return this;
        }

        public Criteria andRootidLessThanOrEqualTo(Long value) {
            addCriterion("ROOTID <=", value, "rootid");
            return this;
        }

        public Criteria andRootidIn(List<Long> values) {
            addCriterion("ROOTID in", values, "rootid");
            return this;
        }

        public Criteria andRootidNotIn(List<Long> values) {
            addCriterion("ROOTID not in", values, "rootid");
            return this;
        }

        public Criteria andRootidBetween(Long value1, Long value2) {
            addCriterion("ROOTID between", value1, value2, "rootid");
            return this;
        }

        public Criteria andRootidNotBetween(Long value1, Long value2) {
            addCriterion("ROOTID not between", value1, value2, "rootid");
            return this;
        }

        public Criteria andLogoIsNull() {
            addCriterion("LOGO is null");
            return this;
        }

        public Criteria andLogoIsNotNull() {
            addCriterion("LOGO is not null");
            return this;
        }

        public Criteria andLogoEqualTo(String value) {
            addCriterion("LOGO =", value, "logo");
            return this;
        }

        public Criteria andLogoNotEqualTo(String value) {
            addCriterion("LOGO <>", value, "logo");
            return this;
        }

        public Criteria andLogoGreaterThan(String value) {
            addCriterion("LOGO >", value, "logo");
            return this;
        }

        public Criteria andLogoGreaterThanOrEqualTo(String value) {
            addCriterion("LOGO >=", value, "logo");
            return this;
        }

        public Criteria andLogoLessThan(String value) {
            addCriterion("LOGO <", value, "logo");
            return this;
        }

        public Criteria andLogoLessThanOrEqualTo(String value) {
            addCriterion("LOGO <=", value, "logo");
            return this;
        }

        public Criteria andLogoLike(String value) {
            addCriterion("LOGO like", value, "logo");
            return this;
        }

        public Criteria andLogoNotLike(String value) {
            addCriterion("LOGO not like", value, "logo");
            return this;
        }

        public Criteria andLogoIn(List<String> values) {
            addCriterion("LOGO in", values, "logo");
            return this;
        }

        public Criteria andLogoNotIn(List<String> values) {
            addCriterion("LOGO not in", values, "logo");
            return this;
        }

        public Criteria andLogoBetween(String value1, String value2) {
            addCriterion("LOGO between", value1, value2, "logo");
            return this;
        }

        public Criteria andLogoNotBetween(String value1, String value2) {
            addCriterion("LOGO not between", value1, value2, "logo");
            return this;
        }

        public Criteria andMembercountIsNull() {
            addCriterion("MEMBERCOUNT is null");
            return this;
        }

        public Criteria andMembercountIsNotNull() {
            addCriterion("MEMBERCOUNT is not null");
            return this;
        }

        public Criteria andMembercountEqualTo(Long value) {
            addCriterion("MEMBERCOUNT =", value, "membercount");
            return this;
        }

        public Criteria andMembercountNotEqualTo(Long value) {
            addCriterion("MEMBERCOUNT <>", value, "membercount");
            return this;
        }

        public Criteria andMembercountGreaterThan(Long value) {
            addCriterion("MEMBERCOUNT >", value, "membercount");
            return this;
        }

        public Criteria andMembercountGreaterThanOrEqualTo(Long value) {
            addCriterion("MEMBERCOUNT >=", value, "membercount");
            return this;
        }

        public Criteria andMembercountLessThan(Long value) {
            addCriterion("MEMBERCOUNT <", value, "membercount");
            return this;
        }

        public Criteria andMembercountLessThanOrEqualTo(Long value) {
            addCriterion("MEMBERCOUNT <=", value, "membercount");
            return this;
        }

        public Criteria andMembercountIn(List<Long> values) {
            addCriterion("MEMBERCOUNT in", values, "membercount");
            return this;
        }

        public Criteria andMembercountNotIn(List<Long> values) {
            addCriterion("MEMBERCOUNT not in", values, "membercount");
            return this;
        }

        public Criteria andMembercountBetween(Long value1, Long value2) {
            addCriterion("MEMBERCOUNT between", value1, value2, "membercount");
            return this;
        }

        public Criteria andMembercountNotBetween(Long value1, Long value2) {
            addCriterion("MEMBERCOUNT not between", value1, value2, "membercount");
            return this;
        }

        public Criteria andIsdefaultIsNull() {
            addCriterion("ISDEFAULT is null");
            return this;
        }

        public Criteria andIsdefaultIsNotNull() {
            addCriterion("ISDEFAULT is not null");
            return this;
        }

        public Criteria andIsdefaultEqualTo(Integer value) {
            addCriterion("ISDEFAULT =", value, "isdefault");
            return this;
        }

        public Criteria andIsdefaultNotEqualTo(Integer value) {
            addCriterion("ISDEFAULT <>", value, "isdefault");
            return this;
        }

        public Criteria andIsdefaultGreaterThan(Integer value) {
            addCriterion("ISDEFAULT >", value, "isdefault");
            return this;
        }

        public Criteria andIsdefaultGreaterThanOrEqualTo(Integer value) {
            addCriterion("ISDEFAULT >=", value, "isdefault");
            return this;
        }

        public Criteria andIsdefaultLessThan(Integer value) {
            addCriterion("ISDEFAULT <", value, "isdefault");
            return this;
        }

        public Criteria andIsdefaultLessThanOrEqualTo(Integer value) {
            addCriterion("ISDEFAULT <=", value, "isdefault");
            return this;
        }

        public Criteria andIsdefaultIn(List<Integer> values) {
            addCriterion("ISDEFAULT in", values, "isdefault");
            return this;
        }

        public Criteria andIsdefaultNotIn(List<Integer> values) {
            addCriterion("ISDEFAULT not in", values, "isdefault");
            return this;
        }

        public Criteria andIsdefaultBetween(Integer value1, Integer value2) {
            addCriterion("ISDEFAULT between", value1, value2, "isdefault");
            return this;
        }

        public Criteria andIsdefaultNotBetween(Integer value1, Integer value2) {
            addCriterion("ISDEFAULT not between", value1, value2, "isdefault");
            return this;
        }
    }
}