package com.tfs.irp.inform.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class IrpInformExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_INFORM
	 * @ibatorgenerated  Mon Sep 02 15:59:38 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_INFORM
	 * @ibatorgenerated  Mon Sep 02 15:59:38 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_INFORM
	 * @ibatorgenerated  Mon Sep 02 15:59:38 CST 2013
	 */
	public IrpInformExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_INFORM
	 * @ibatorgenerated  Mon Sep 02 15:59:38 CST 2013
	 */
	protected IrpInformExample(IrpInformExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_INFORM
	 * @ibatorgenerated  Mon Sep 02 15:59:38 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_INFORM
	 * @ibatorgenerated  Mon Sep 02 15:59:38 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_INFORM
	 * @ibatorgenerated  Mon Sep 02 15:59:38 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_INFORM
	 * @ibatorgenerated  Mon Sep 02 15:59:38 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_INFORM
	 * @ibatorgenerated  Mon Sep 02 15:59:38 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_INFORM
	 * @ibatorgenerated  Mon Sep 02 15:59:38 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_INFORM
	 * @ibatorgenerated  Mon Sep 02 15:59:38 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_INFORM
	 * @ibatorgenerated  Mon Sep 02 15:59:38 CST 2013
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andInformidIsNull() {
			addCriterion("INFORMID is null");
			return this;
		}

		public Criteria andInformidIsNotNull() {
			addCriterion("INFORMID is not null");
			return this;
		}

		public Criteria andInformidEqualTo(Long value) {
			addCriterion("INFORMID =", value, "informid");
			return this;
		}

		public Criteria andInformidNotEqualTo(Long value) {
			addCriterion("INFORMID <>", value, "informid");
			return this;
		}

		public Criteria andInformidGreaterThan(Long value) {
			addCriterion("INFORMID >", value, "informid");
			return this;
		}

		public Criteria andInformidGreaterThanOrEqualTo(Long value) {
			addCriterion("INFORMID >=", value, "informid");
			return this;
		}

		public Criteria andInformidLessThan(Long value) {
			addCriterion("INFORMID <", value, "informid");
			return this;
		}

		public Criteria andInformidLessThanOrEqualTo(Long value) {
			addCriterion("INFORMID <=", value, "informid");
			return this;
		}

		public Criteria andInformidIn(List<Long> values) {
			addCriterion("INFORMID in", values, "informid");
			return this;
		}

		public Criteria andInformidNotIn(List<Long> values) {
			addCriterion("INFORMID not in", values, "informid");
			return this;
		}

		public Criteria andInformidBetween(Long value1, Long value2) {
			addCriterion("INFORMID between", value1, value2, "informid");
			return this;
		}

		public Criteria andInformidNotBetween(Long value1, Long value2) {
			addCriterion("INFORMID not between", value1, value2, "informid");
			return this;
		}

		public Criteria andInformtypeIsNull() {
			addCriterion("INFORMTYPE is null");
			return this;
		}

		public Criteria andInformtypeIsNotNull() {
			addCriterion("INFORMTYPE is not null");
			return this;
		}

		public Criteria andInformtypeEqualTo(Integer value) {
			addCriterion("INFORMTYPE =", value, "informtype");
			return this;
		}

		public Criteria andInformtypeNotEqualTo(Integer value) {
			addCriterion("INFORMTYPE <>", value, "informtype");
			return this;
		}

		public Criteria andInformtypeGreaterThan(Integer value) {
			addCriterion("INFORMTYPE >", value, "informtype");
			return this;
		}

		public Criteria andInformtypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("INFORMTYPE >=", value, "informtype");
			return this;
		}

		public Criteria andInformtypeLessThan(Integer value) {
			addCriterion("INFORMTYPE <", value, "informtype");
			return this;
		}

		public Criteria andInformtypeLessThanOrEqualTo(Integer value) {
			addCriterion("INFORMTYPE <=", value, "informtype");
			return this;
		}

		public Criteria andInformtypeIn(List<Integer> values) {
			addCriterion("INFORMTYPE in", values, "informtype");
			return this;
		}

		public Criteria andInformtypeNotIn(List<Integer> values) {
			addCriterion("INFORMTYPE not in", values, "informtype");
			return this;
		}

		public Criteria andInformtypeBetween(Integer value1, Integer value2) {
			addCriterion("INFORMTYPE between", value1, value2, "informtype");
			return this;
		}

		public Criteria andInformtypeNotBetween(Integer value1, Integer value2) {
			addCriterion("INFORMTYPE not between", value1, value2, "informtype");
			return this;
		}

		public Criteria andInformnameidIsNull() {
			addCriterion("INFORMNAMEID is null");
			return this;
		}

		public Criteria andInformnameidIsNotNull() {
			addCriterion("INFORMNAMEID is not null");
			return this;
		}

		public Criteria andInformnameidEqualTo(Long value) {
			addCriterion("INFORMNAMEID =", value, "informnameid");
			return this;
		}

		public Criteria andInformnameidNotEqualTo(Long value) {
			addCriterion("INFORMNAMEID <>", value, "informnameid");
			return this;
		}

		public Criteria andInformnameidGreaterThan(Long value) {
			addCriterion("INFORMNAMEID >", value, "informnameid");
			return this;
		}

		public Criteria andInformnameidGreaterThanOrEqualTo(Long value) {
			addCriterion("INFORMNAMEID >=", value, "informnameid");
			return this;
		}

		public Criteria andInformnameidLessThan(Long value) {
			addCriterion("INFORMNAMEID <", value, "informnameid");
			return this;
		}

		public Criteria andInformnameidLessThanOrEqualTo(Long value) {
			addCriterion("INFORMNAMEID <=", value, "informnameid");
			return this;
		}

		public Criteria andInformnameidIn(List<Long> values) {
			addCriterion("INFORMNAMEID in", values, "informnameid");
			return this;
		}

		public Criteria andInformnameidNotIn(List<Long> values) {
			addCriterion("INFORMNAMEID not in", values, "informnameid");
			return this;
		}

		public Criteria andInformnameidBetween(Long value1, Long value2) {
			addCriterion("INFORMNAMEID between", value1, value2, "informnameid");
			return this;
		}

		public Criteria andInformnameidNotBetween(Long value1, Long value2) {
			addCriterion("INFORMNAMEID not between", value1, value2,
					"informnameid");
			return this;
		}

		public Criteria andInformcontentIsNull() {
			addCriterion("INFORMCONTENT is null");
			return this;
		}

		public Criteria andInformcontentIsNotNull() {
			addCriterion("INFORMCONTENT is not null");
			return this;
		}

		public Criteria andInformcontentEqualTo(String value) {
			addCriterion("INFORMCONTENT =", value, "informcontent");
			return this;
		}

		public Criteria andInformcontentNotEqualTo(String value) {
			addCriterion("INFORMCONTENT <>", value, "informcontent");
			return this;
		}

		public Criteria andInformcontentGreaterThan(String value) {
			addCriterion("INFORMCONTENT >", value, "informcontent");
			return this;
		}

		public Criteria andInformcontentGreaterThanOrEqualTo(String value) {
			addCriterion("INFORMCONTENT >=", value, "informcontent");
			return this;
		}

		public Criteria andInformcontentLessThan(String value) {
			addCriterion("INFORMCONTENT <", value, "informcontent");
			return this;
		}

		public Criteria andInformcontentLessThanOrEqualTo(String value) {
			addCriterion("INFORMCONTENT <=", value, "informcontent");
			return this;
		}

		public Criteria andInformcontentLike(String value) {
			addCriterion("INFORMCONTENT like", value, "informcontent");
			return this;
		}

		public Criteria andInformcontentNotLike(String value) {
			addCriterion("INFORMCONTENT not like", value, "informcontent");
			return this;
		}

		public Criteria andInformcontentIn(List<String> values) {
			addCriterion("INFORMCONTENT in", values, "informcontent");
			return this;
		}

		public Criteria andInformcontentNotIn(List<String> values) {
			addCriterion("INFORMCONTENT not in", values, "informcontent");
			return this;
		}

		public Criteria andInformcontentBetween(String value1, String value2) {
			addCriterion("INFORMCONTENT between", value1, value2,
					"informcontent");
			return this;
		}

		public Criteria andInformcontentNotBetween(String value1, String value2) {
			addCriterion("INFORMCONTENT not between", value1, value2,
					"informcontent");
			return this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME =", value, "crtime");
			return this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <>", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterionForJDBCDate("CRTIME >", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME >=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterionForJDBCDate("CRTIME <", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME not in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME not between", value1, value2,
					"crtime");
			return this;
		}

		public Criteria andUseridIsNull() {
			addCriterion("USERID is null");
			return this;
		}

		public Criteria andUseridIsNotNull() {
			addCriterion("USERID is not null");
			return this;
		}

		public Criteria andUseridEqualTo(Long value) {
			addCriterion("USERID =", value, "userid");
			return this;
		}

		public Criteria andUseridNotEqualTo(Long value) {
			addCriterion("USERID <>", value, "userid");
			return this;
		}

		public Criteria andUseridGreaterThan(Long value) {
			addCriterion("USERID >", value, "userid");
			return this;
		}

		public Criteria andUseridGreaterThanOrEqualTo(Long value) {
			addCriterion("USERID >=", value, "userid");
			return this;
		}

		public Criteria andUseridLessThan(Long value) {
			addCriterion("USERID <", value, "userid");
			return this;
		}

		public Criteria andUseridLessThanOrEqualTo(Long value) {
			addCriterion("USERID <=", value, "userid");
			return this;
		}

		public Criteria andUseridIn(List<Long> values) {
			addCriterion("USERID in", values, "userid");
			return this;
		}

		public Criteria andUseridNotIn(List<Long> values) {
			addCriterion("USERID not in", values, "userid");
			return this;
		}

		public Criteria andUseridBetween(Long value1, Long value2) {
			addCriterion("USERID between", value1, value2, "userid");
			return this;
		}

		public Criteria andUseridNotBetween(Long value1, Long value2) {
			addCriterion("USERID not between", value1, value2, "userid");
			return this;
		}

		public Criteria andInformstatusIsNull() {
			addCriterion("INFORMSTATUS is null");
			return this;
		}

		public Criteria andInformstatusIsNotNull() {
			addCriterion("INFORMSTATUS is not null");
			return this;
		}

		public Criteria andInformstatusEqualTo(Integer value) {
			addCriterion("INFORMSTATUS =", value, "informstatus");
			return this;
		}

		public Criteria andInformstatusNotEqualTo(Integer value) {
			addCriterion("INFORMSTATUS <>", value, "informstatus");
			return this;
		}

		public Criteria andInformstatusGreaterThan(Integer value) {
			addCriterion("INFORMSTATUS >", value, "informstatus");
			return this;
		}

		public Criteria andInformstatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("INFORMSTATUS >=", value, "informstatus");
			return this;
		}

		public Criteria andInformstatusLessThan(Integer value) {
			addCriterion("INFORMSTATUS <", value, "informstatus");
			return this;
		}

		public Criteria andInformstatusLessThanOrEqualTo(Integer value) {
			addCriterion("INFORMSTATUS <=", value, "informstatus");
			return this;
		}

		public Criteria andInformstatusIn(List<Integer> values) {
			addCriterion("INFORMSTATUS in", values, "informstatus");
			return this;
		}

		public Criteria andInformstatusNotIn(List<Integer> values) {
			addCriterion("INFORMSTATUS not in", values, "informstatus");
			return this;
		}

		public Criteria andInformstatusBetween(Integer value1, Integer value2) {
			addCriterion("INFORMSTATUS between", value1, value2, "informstatus");
			return this;
		}

		public Criteria andInformstatusNotBetween(Integer value1, Integer value2) {
			addCriterion("INFORMSTATUS not between", value1, value2,
					"informstatus");
			return this;
		}

		public Criteria andInformkeyIsNull() {
			addCriterion("INFORMKEY is null");
			return this;
		}

		public Criteria andInformkeyIsNotNull() {
			addCriterion("INFORMKEY is not null");
			return this;
		}

		public Criteria andInformkeyEqualTo(String value) {
			addCriterion("INFORMKEY =", value, "informkey");
			return this;
		}

		public Criteria andInformkeyNotEqualTo(String value) {
			addCriterion("INFORMKEY <>", value, "informkey");
			return this;
		}

		public Criteria andInformkeyGreaterThan(String value) {
			addCriterion("INFORMKEY >", value, "informkey");
			return this;
		}

		public Criteria andInformkeyGreaterThanOrEqualTo(String value) {
			addCriterion("INFORMKEY >=", value, "informkey");
			return this;
		}

		public Criteria andInformkeyLessThan(String value) {
			addCriterion("INFORMKEY <", value, "informkey");
			return this;
		}

		public Criteria andInformkeyLessThanOrEqualTo(String value) {
			addCriterion("INFORMKEY <=", value, "informkey");
			return this;
		}

		public Criteria andInformkeyLike(String value) {
			addCriterion("INFORMKEY like", value, "informkey");
			return this;
		}

		public Criteria andInformkeyNotLike(String value) {
			addCriterion("INFORMKEY not like", value, "informkey");
			return this;
		}

		public Criteria andInformkeyIn(List<String> values) {
			addCriterion("INFORMKEY in", values, "informkey");
			return this;
		}

		public Criteria andInformkeyNotIn(List<String> values) {
			addCriterion("INFORMKEY not in", values, "informkey");
			return this;
		}

		public Criteria andInformkeyBetween(String value1, String value2) {
			addCriterion("INFORMKEY between", value1, value2, "informkey");
			return this;
		}

		public Criteria andInformkeyNotBetween(String value1, String value2) {
			addCriterion("INFORMKEY not between", value1, value2, "informkey");
			return this;
		}
	}
}