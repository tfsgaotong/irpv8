package com.tfs.irp.informtype.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class IrpInformTypeExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_INFORM_TYPE
     *
     * @ibatorgenerated Mon Sep 02 10:13:46 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_INFORM_TYPE
     *
     * @ibatorgenerated Mon Sep 02 10:13:46 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_INFORM_TYPE
     *
     * @ibatorgenerated Mon Sep 02 10:13:46 CST 2013
     */
    public IrpInformTypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_INFORM_TYPE
     *
     * @ibatorgenerated Mon Sep 02 10:13:46 CST 2013
     */
    protected IrpInformTypeExample(IrpInformTypeExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_INFORM_TYPE
     *
     * @ibatorgenerated Mon Sep 02 10:13:46 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_INFORM_TYPE
     *
     * @ibatorgenerated Mon Sep 02 10:13:46 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_INFORM_TYPE
     *
     * @ibatorgenerated Mon Sep 02 10:13:46 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_INFORM_TYPE
     *
     * @ibatorgenerated Mon Sep 02 10:13:46 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_INFORM_TYPE
     *
     * @ibatorgenerated Mon Sep 02 10:13:46 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_INFORM_TYPE
     *
     * @ibatorgenerated Mon Sep 02 10:13:46 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_INFORM_TYPE
     *
     * @ibatorgenerated Mon Sep 02 10:13:46 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_INFORM_TYPE
     *
     * @ibatorgenerated Mon Sep 02 10:13:46 CST 2013
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andInformtypeidIsNull() {
            addCriterion("INFORMTYPEID is null");
            return this;
        }

        public Criteria andInformtypeidIsNotNull() {
            addCriterion("INFORMTYPEID is not null");
            return this;
        }

        public Criteria andInformtypeidEqualTo(Long value) {
            addCriterion("INFORMTYPEID =", value, "informtypeid");
            return this;
        }

        public Criteria andInformtypeidNotEqualTo(Long value) {
            addCriterion("INFORMTYPEID <>", value, "informtypeid");
            return this;
        }

        public Criteria andInformtypeidGreaterThan(Long value) {
            addCriterion("INFORMTYPEID >", value, "informtypeid");
            return this;
        }

        public Criteria andInformtypeidGreaterThanOrEqualTo(Long value) {
            addCriterion("INFORMTYPEID >=", value, "informtypeid");
            return this;
        }

        public Criteria andInformtypeidLessThan(Long value) {
            addCriterion("INFORMTYPEID <", value, "informtypeid");
            return this;
        }

        public Criteria andInformtypeidLessThanOrEqualTo(Long value) {
            addCriterion("INFORMTYPEID <=", value, "informtypeid");
            return this;
        }

        public Criteria andInformtypeidIn(List<Long> values) {
            addCriterion("INFORMTYPEID in", values, "informtypeid");
            return this;
        }

        public Criteria andInformtypeidNotIn(List<Long> values) {
            addCriterion("INFORMTYPEID not in", values, "informtypeid");
            return this;
        }

        public Criteria andInformtypeidBetween(Long value1, Long value2) {
            addCriterion("INFORMTYPEID between", value1, value2, "informtypeid");
            return this;
        }

        public Criteria andInformtypeidNotBetween(Long value1, Long value2) {
            addCriterion("INFORMTYPEID not between", value1, value2, "informtypeid");
            return this;
        }

        public Criteria andInformtypeIsNull() {
            addCriterion("INFORMTYPE is null");
            return this;
        }

        public Criteria andInformtypeIsNotNull() {
            addCriterion("INFORMTYPE is not null");
            return this;
        }

        public Criteria andInformtypeEqualTo(Integer value) {
            addCriterion("INFORMTYPE =", value, "informtype");
            return this;
        }

        public Criteria andInformtypeNotEqualTo(Integer value) {
            addCriterion("INFORMTYPE <>", value, "informtype");
            return this;
        }

        public Criteria andInformtypeGreaterThan(Integer value) {
            addCriterion("INFORMTYPE >", value, "informtype");
            return this;
        }

        public Criteria andInformtypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("INFORMTYPE >=", value, "informtype");
            return this;
        }

        public Criteria andInformtypeLessThan(Integer value) {
            addCriterion("INFORMTYPE <", value, "informtype");
            return this;
        }

        public Criteria andInformtypeLessThanOrEqualTo(Integer value) {
            addCriterion("INFORMTYPE <=", value, "informtype");
            return this;
        }

        public Criteria andInformtypeIn(List<Integer> values) {
            addCriterion("INFORMTYPE in", values, "informtype");
            return this;
        }

        public Criteria andInformtypeNotIn(List<Integer> values) {
            addCriterion("INFORMTYPE not in", values, "informtype");
            return this;
        }

        public Criteria andInformtypeBetween(Integer value1, Integer value2) {
            addCriterion("INFORMTYPE between", value1, value2, "informtype");
            return this;
        }

        public Criteria andInformtypeNotBetween(Integer value1, Integer value2) {
            addCriterion("INFORMTYPE not between", value1, value2, "informtype");
            return this;
        }

        public Criteria andInformkeyIsNull() {
            addCriterion("INFORMKEY is null");
            return this;
        }

        public Criteria andInformkeyIsNotNull() {
            addCriterion("INFORMKEY is not null");
            return this;
        }

        public Criteria andInformkeyEqualTo(String value) {
            addCriterion("INFORMKEY =", value, "informkey");
            return this;
        }

        public Criteria andInformkeyNotEqualTo(String value) {
            addCriterion("INFORMKEY <>", value, "informkey");
            return this;
        }

        public Criteria andInformkeyGreaterThan(String value) {
            addCriterion("INFORMKEY >", value, "informkey");
            return this;
        }

        public Criteria andInformkeyGreaterThanOrEqualTo(String value) {
            addCriterion("INFORMKEY >=", value, "informkey");
            return this;
        }

        public Criteria andInformkeyLessThan(String value) {
            addCriterion("INFORMKEY <", value, "informkey");
            return this;
        }

        public Criteria andInformkeyLessThanOrEqualTo(String value) {
            addCriterion("INFORMKEY <=", value, "informkey");
            return this;
        }

        public Criteria andInformkeyLike(String value) {
            addCriterion("INFORMKEY like", value, "informkey");
            return this;
        }

        public Criteria andInformkeyNotLike(String value) {
            addCriterion("INFORMKEY not like", value, "informkey");
            return this;
        }

        public Criteria andInformkeyIn(List<String> values) {
            addCriterion("INFORMKEY in", values, "informkey");
            return this;
        }

        public Criteria andInformkeyNotIn(List<String> values) {
            addCriterion("INFORMKEY not in", values, "informkey");
            return this;
        }

        public Criteria andInformkeyBetween(String value1, String value2) {
            addCriterion("INFORMKEY between", value1, value2, "informkey");
            return this;
        }

        public Criteria andInformkeyNotBetween(String value1, String value2) {
            addCriterion("INFORMKEY not between", value1, value2, "informkey");
            return this;
        }

        public Criteria andInformvalueIsNull() {
            addCriterion("INFORMVALUE is null");
            return this;
        }

        public Criteria andInformvalueIsNotNull() {
            addCriterion("INFORMVALUE is not null");
            return this;
        }

        public Criteria andInformvalueEqualTo(String value) {
            addCriterion("INFORMVALUE =", value, "informvalue");
            return this;
        }

        public Criteria andInformvalueNotEqualTo(String value) {
            addCriterion("INFORMVALUE <>", value, "informvalue");
            return this;
        }

        public Criteria andInformvalueGreaterThan(String value) {
            addCriterion("INFORMVALUE >", value, "informvalue");
            return this;
        }

        public Criteria andInformvalueGreaterThanOrEqualTo(String value) {
            addCriterion("INFORMVALUE >=", value, "informvalue");
            return this;
        }

        public Criteria andInformvalueLessThan(String value) {
            addCriterion("INFORMVALUE <", value, "informvalue");
            return this;
        }

        public Criteria andInformvalueLessThanOrEqualTo(String value) {
            addCriterion("INFORMVALUE <=", value, "informvalue");
            return this;
        }

        public Criteria andInformvalueLike(String value) {
            addCriterion("INFORMVALUE like", value, "informvalue");
            return this;
        }

        public Criteria andInformvalueNotLike(String value) {
            addCriterion("INFORMVALUE not like", value, "informvalue");
            return this;
        }

        public Criteria andInformvalueIn(List<String> values) {
            addCriterion("INFORMVALUE in", values, "informvalue");
            return this;
        }

        public Criteria andInformvalueNotIn(List<String> values) {
            addCriterion("INFORMVALUE not in", values, "informvalue");
            return this;
        }

        public Criteria andInformvalueBetween(String value1, String value2) {
            addCriterion("INFORMVALUE between", value1, value2, "informvalue");
            return this;
        }

        public Criteria andInformvalueNotBetween(String value1, String value2) {
            addCriterion("INFORMVALUE not between", value1, value2, "informvalue");
            return this;
        }

        public Criteria andInformdescIsNull() {
            addCriterion("INFORMDESC is null");
            return this;
        }

        public Criteria andInformdescIsNotNull() {
            addCriterion("INFORMDESC is not null");
            return this;
        }

        public Criteria andInformdescEqualTo(String value) {
            addCriterion("INFORMDESC =", value, "informdesc");
            return this;
        }

        public Criteria andInformdescNotEqualTo(String value) {
            addCriterion("INFORMDESC <>", value, "informdesc");
            return this;
        }

        public Criteria andInformdescGreaterThan(String value) {
            addCriterion("INFORMDESC >", value, "informdesc");
            return this;
        }

        public Criteria andInformdescGreaterThanOrEqualTo(String value) {
            addCriterion("INFORMDESC >=", value, "informdesc");
            return this;
        }

        public Criteria andInformdescLessThan(String value) {
            addCriterion("INFORMDESC <", value, "informdesc");
            return this;
        }

        public Criteria andInformdescLessThanOrEqualTo(String value) {
            addCriterion("INFORMDESC <=", value, "informdesc");
            return this;
        }

        public Criteria andInformdescLike(String value) {
            addCriterion("INFORMDESC like", value, "informdesc");
            return this;
        }

        public Criteria andInformdescNotLike(String value) {
            addCriterion("INFORMDESC not like", value, "informdesc");
            return this;
        }

        public Criteria andInformdescIn(List<String> values) {
            addCriterion("INFORMDESC in", values, "informdesc");
            return this;
        }

        public Criteria andInformdescNotIn(List<String> values) {
            addCriterion("INFORMDESC not in", values, "informdesc");
            return this;
        }

        public Criteria andInformdescBetween(String value1, String value2) {
            addCriterion("INFORMDESC between", value1, value2, "informdesc");
            return this;
        }

        public Criteria andInformdescNotBetween(String value1, String value2) {
            addCriterion("INFORMDESC not between", value1, value2, "informdesc");
            return this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("USERID is null");
            return this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("USERID is not null");
            return this;
        }

        public Criteria andUseridEqualTo(Long value) {
            addCriterion("USERID =", value, "userid");
            return this;
        }

        public Criteria andUseridNotEqualTo(Long value) {
            addCriterion("USERID <>", value, "userid");
            return this;
        }

        public Criteria andUseridGreaterThan(Long value) {
            addCriterion("USERID >", value, "userid");
            return this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Long value) {
            addCriterion("USERID >=", value, "userid");
            return this;
        }

        public Criteria andUseridLessThan(Long value) {
            addCriterion("USERID <", value, "userid");
            return this;
        }

        public Criteria andUseridLessThanOrEqualTo(Long value) {
            addCriterion("USERID <=", value, "userid");
            return this;
        }

        public Criteria andUseridIn(List<Long> values) {
            addCriterion("USERID in", values, "userid");
            return this;
        }

        public Criteria andUseridNotIn(List<Long> values) {
            addCriterion("USERID not in", values, "userid");
            return this;
        }

        public Criteria andUseridBetween(Long value1, Long value2) {
            addCriterion("USERID between", value1, value2, "userid");
            return this;
        }

        public Criteria andUseridNotBetween(Long value1, Long value2) {
            addCriterion("USERID not between", value1, value2, "userid");
            return this;
        }

        public Criteria andCrtimeIsNull() {
            addCriterion("CRTIME is null");
            return this;
        }

        public Criteria andCrtimeIsNotNull() {
            addCriterion("CRTIME is not null");
            return this;
        }

        public Criteria andCrtimeEqualTo(Date value) {
            addCriterionForJDBCDate("CRTIME =", value, "crtime");
            return this;
        }

        public Criteria andCrtimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("CRTIME <>", value, "crtime");
            return this;
        }

        public Criteria andCrtimeGreaterThan(Date value) {
            addCriterionForJDBCDate("CRTIME >", value, "crtime");
            return this;
        }

        public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CRTIME >=", value, "crtime");
            return this;
        }

        public Criteria andCrtimeLessThan(Date value) {
            addCriterionForJDBCDate("CRTIME <", value, "crtime");
            return this;
        }

        public Criteria andCrtimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CRTIME <=", value, "crtime");
            return this;
        }

        public Criteria andCrtimeIn(List<Date> values) {
            addCriterionForJDBCDate("CRTIME in", values, "crtime");
            return this;
        }

        public Criteria andCrtimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("CRTIME not in", values, "crtime");
            return this;
        }

        public Criteria andCrtimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CRTIME between", value1, value2, "crtime");
            return this;
        }

        public Criteria andCrtimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CRTIME not between", value1, value2, "crtime");
            return this;
        }

        public Criteria andExpandIsNull() {
            addCriterion("EXPAND is null");
            return this;
        }

        public Criteria andExpandIsNotNull() {
            addCriterion("EXPAND is not null");
            return this;
        }

        public Criteria andExpandEqualTo(Long value) {
            addCriterion("EXPAND =", value, "expand");
            return this;
        }

        public Criteria andExpandNotEqualTo(Long value) {
            addCriterion("EXPAND <>", value, "expand");
            return this;
        }

        public Criteria andExpandGreaterThan(Long value) {
            addCriterion("EXPAND >", value, "expand");
            return this;
        }

        public Criteria andExpandGreaterThanOrEqualTo(Long value) {
            addCriterion("EXPAND >=", value, "expand");
            return this;
        }

        public Criteria andExpandLessThan(Long value) {
            addCriterion("EXPAND <", value, "expand");
            return this;
        }

        public Criteria andExpandLessThanOrEqualTo(Long value) {
            addCriterion("EXPAND <=", value, "expand");
            return this;
        }

        public Criteria andExpandIn(List<Long> values) {
            addCriterion("EXPAND in", values, "expand");
            return this;
        }

        public Criteria andExpandNotIn(List<Long> values) {
            addCriterion("EXPAND not in", values, "expand");
            return this;
        }

        public Criteria andExpandBetween(Long value1, Long value2) {
            addCriterion("EXPAND between", value1, value2, "expand");
            return this;
        }

        public Criteria andExpandNotBetween(Long value1, Long value2) {
            addCriterion("EXPAND not between", value1, value2, "expand");
            return this;
        }
    }
}