package com.tfs.irp.job.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class IrpJobExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	public IrpJobExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	protected IrpJobExample(IrpJobExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.distinct = example.distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table IRP_JOB
	 * @mbggenerated  Sat Nov 02 17:39:20 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected GeneratedCriteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andJobidIsNull() {
			addCriterion("JOBID is null");
			return (Criteria) this;
		}

		public Criteria andJobidIsNotNull() {
			addCriterion("JOBID is not null");
			return (Criteria) this;
		}

		public Criteria andJobidEqualTo(Long value) {
			addCriterion("JOBID =", value, "jobid");
			return (Criteria) this;
		}

		public Criteria andJobidNotEqualTo(Long value) {
			addCriterion("JOBID <>", value, "jobid");
			return (Criteria) this;
		}

		public Criteria andJobidGreaterThan(Long value) {
			addCriterion("JOBID >", value, "jobid");
			return (Criteria) this;
		}

		public Criteria andJobidGreaterThanOrEqualTo(Long value) {
			addCriterion("JOBID >=", value, "jobid");
			return (Criteria) this;
		}

		public Criteria andJobidLessThan(Long value) {
			addCriterion("JOBID <", value, "jobid");
			return (Criteria) this;
		}

		public Criteria andJobidLessThanOrEqualTo(Long value) {
			addCriterion("JOBID <=", value, "jobid");
			return (Criteria) this;
		}

		public Criteria andJobidIn(List<Long> values) {
			addCriterion("JOBID in", values, "jobid");
			return (Criteria) this;
		}

		public Criteria andJobidNotIn(List<Long> values) {
			addCriterion("JOBID not in", values, "jobid");
			return (Criteria) this;
		}

		public Criteria andJobidBetween(Long value1, Long value2) {
			addCriterion("JOBID between", value1, value2, "jobid");
			return (Criteria) this;
		}

		public Criteria andJobidNotBetween(Long value1, Long value2) {
			addCriterion("JOBID not between", value1, value2, "jobid");
			return (Criteria) this;
		}

		public Criteria andJobnameIsNull() {
			addCriterion("JOBNAME is null");
			return (Criteria) this;
		}

		public Criteria andJobnameIsNotNull() {
			addCriterion("JOBNAME is not null");
			return (Criteria) this;
		}

		public Criteria andJobnameEqualTo(String value) {
			addCriterion("JOBNAME =", value, "jobname");
			return (Criteria) this;
		}

		public Criteria andJobnameNotEqualTo(String value) {
			addCriterion("JOBNAME <>", value, "jobname");
			return (Criteria) this;
		}

		public Criteria andJobnameGreaterThan(String value) {
			addCriterion("JOBNAME >", value, "jobname");
			return (Criteria) this;
		}

		public Criteria andJobnameGreaterThanOrEqualTo(String value) {
			addCriterion("JOBNAME >=", value, "jobname");
			return (Criteria) this;
		}

		public Criteria andJobnameLessThan(String value) {
			addCriterion("JOBNAME <", value, "jobname");
			return (Criteria) this;
		}

		public Criteria andJobnameLessThanOrEqualTo(String value) {
			addCriterion("JOBNAME <=", value, "jobname");
			return (Criteria) this;
		}

		public Criteria andJobnameLike(String value) {
			addCriterion("JOBNAME like", value, "jobname");
			return (Criteria) this;
		}

		public Criteria andJobnameNotLike(String value) {
			addCriterion("JOBNAME not like", value, "jobname");
			return (Criteria) this;
		}

		public Criteria andJobnameIn(List<String> values) {
			addCriterion("JOBNAME in", values, "jobname");
			return (Criteria) this;
		}

		public Criteria andJobnameNotIn(List<String> values) {
			addCriterion("JOBNAME not in", values, "jobname");
			return (Criteria) this;
		}

		public Criteria andJobnameBetween(String value1, String value2) {
			addCriterion("JOBNAME between", value1, value2, "jobname");
			return (Criteria) this;
		}

		public Criteria andJobnameNotBetween(String value1, String value2) {
			addCriterion("JOBNAME not between", value1, value2, "jobname");
			return (Criteria) this;
		}

		public Criteria andJobdescIsNull() {
			addCriterion("JOBDESC is null");
			return (Criteria) this;
		}

		public Criteria andJobdescIsNotNull() {
			addCriterion("JOBDESC is not null");
			return (Criteria) this;
		}

		public Criteria andJobdescEqualTo(String value) {
			addCriterion("JOBDESC =", value, "jobdesc");
			return (Criteria) this;
		}

		public Criteria andJobdescNotEqualTo(String value) {
			addCriterion("JOBDESC <>", value, "jobdesc");
			return (Criteria) this;
		}

		public Criteria andJobdescGreaterThan(String value) {
			addCriterion("JOBDESC >", value, "jobdesc");
			return (Criteria) this;
		}

		public Criteria andJobdescGreaterThanOrEqualTo(String value) {
			addCriterion("JOBDESC >=", value, "jobdesc");
			return (Criteria) this;
		}

		public Criteria andJobdescLessThan(String value) {
			addCriterion("JOBDESC <", value, "jobdesc");
			return (Criteria) this;
		}

		public Criteria andJobdescLessThanOrEqualTo(String value) {
			addCriterion("JOBDESC <=", value, "jobdesc");
			return (Criteria) this;
		}

		public Criteria andJobdescLike(String value) {
			addCriterion("JOBDESC like", value, "jobdesc");
			return (Criteria) this;
		}

		public Criteria andJobdescNotLike(String value) {
			addCriterion("JOBDESC not like", value, "jobdesc");
			return (Criteria) this;
		}

		public Criteria andJobdescIn(List<String> values) {
			addCriterion("JOBDESC in", values, "jobdesc");
			return (Criteria) this;
		}

		public Criteria andJobdescNotIn(List<String> values) {
			addCriterion("JOBDESC not in", values, "jobdesc");
			return (Criteria) this;
		}

		public Criteria andJobdescBetween(String value1, String value2) {
			addCriterion("JOBDESC between", value1, value2, "jobdesc");
			return (Criteria) this;
		}

		public Criteria andJobdescNotBetween(String value1, String value2) {
			addCriterion("JOBDESC not between", value1, value2, "jobdesc");
			return (Criteria) this;
		}

		public Criteria andJobclassIsNull() {
			addCriterion("JOBCLASS is null");
			return (Criteria) this;
		}

		public Criteria andJobclassIsNotNull() {
			addCriterion("JOBCLASS is not null");
			return (Criteria) this;
		}

		public Criteria andJobclassEqualTo(String value) {
			addCriterion("JOBCLASS =", value, "jobclass");
			return (Criteria) this;
		}

		public Criteria andJobclassNotEqualTo(String value) {
			addCriterion("JOBCLASS <>", value, "jobclass");
			return (Criteria) this;
		}

		public Criteria andJobclassGreaterThan(String value) {
			addCriterion("JOBCLASS >", value, "jobclass");
			return (Criteria) this;
		}

		public Criteria andJobclassGreaterThanOrEqualTo(String value) {
			addCriterion("JOBCLASS >=", value, "jobclass");
			return (Criteria) this;
		}

		public Criteria andJobclassLessThan(String value) {
			addCriterion("JOBCLASS <", value, "jobclass");
			return (Criteria) this;
		}

		public Criteria andJobclassLessThanOrEqualTo(String value) {
			addCriterion("JOBCLASS <=", value, "jobclass");
			return (Criteria) this;
		}

		public Criteria andJobclassLike(String value) {
			addCriterion("JOBCLASS like", value, "jobclass");
			return (Criteria) this;
		}

		public Criteria andJobclassNotLike(String value) {
			addCriterion("JOBCLASS not like", value, "jobclass");
			return (Criteria) this;
		}

		public Criteria andJobclassIn(List<String> values) {
			addCriterion("JOBCLASS in", values, "jobclass");
			return (Criteria) this;
		}

		public Criteria andJobclassNotIn(List<String> values) {
			addCriterion("JOBCLASS not in", values, "jobclass");
			return (Criteria) this;
		}

		public Criteria andJobclassBetween(String value1, String value2) {
			addCriterion("JOBCLASS between", value1, value2, "jobclass");
			return (Criteria) this;
		}

		public Criteria andJobclassNotBetween(String value1, String value2) {
			addCriterion("JOBCLASS not between", value1, value2, "jobclass");
			return (Criteria) this;
		}

		public Criteria andJobtimeIsNull() {
			addCriterion("JOBTIME is null");
			return (Criteria) this;
		}

		public Criteria andJobtimeIsNotNull() {
			addCriterion("JOBTIME is not null");
			return (Criteria) this;
		}

		public Criteria andJobtimeEqualTo(String value) {
			addCriterion("JOBTIME =", value, "jobtime");
			return (Criteria) this;
		}

		public Criteria andJobtimeNotEqualTo(String value) {
			addCriterion("JOBTIME <>", value, "jobtime");
			return (Criteria) this;
		}

		public Criteria andJobtimeGreaterThan(String value) {
			addCriterion("JOBTIME >", value, "jobtime");
			return (Criteria) this;
		}

		public Criteria andJobtimeGreaterThanOrEqualTo(String value) {
			addCriterion("JOBTIME >=", value, "jobtime");
			return (Criteria) this;
		}

		public Criteria andJobtimeLessThan(String value) {
			addCriterion("JOBTIME <", value, "jobtime");
			return (Criteria) this;
		}

		public Criteria andJobtimeLessThanOrEqualTo(String value) {
			addCriterion("JOBTIME <=", value, "jobtime");
			return (Criteria) this;
		}

		public Criteria andJobtimeLike(String value) {
			addCriterion("JOBTIME like", value, "jobtime");
			return (Criteria) this;
		}

		public Criteria andJobtimeNotLike(String value) {
			addCriterion("JOBTIME not like", value, "jobtime");
			return (Criteria) this;
		}

		public Criteria andJobtimeIn(List<String> values) {
			addCriterion("JOBTIME in", values, "jobtime");
			return (Criteria) this;
		}

		public Criteria andJobtimeNotIn(List<String> values) {
			addCriterion("JOBTIME not in", values, "jobtime");
			return (Criteria) this;
		}

		public Criteria andJobtimeBetween(String value1, String value2) {
			addCriterion("JOBTIME between", value1, value2, "jobtime");
			return (Criteria) this;
		}

		public Criteria andJobtimeNotBetween(String value1, String value2) {
			addCriterion("JOBTIME not between", value1, value2, "jobtime");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("STATUS is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(Integer value) {
			addCriterion("STATUS =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(Integer value) {
			addCriterion("STATUS <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(Integer value) {
			addCriterion("STATUS >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("STATUS >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(Integer value) {
			addCriterion("STATUS <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(Integer value) {
			addCriterion("STATUS <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<Integer> values) {
			addCriterion("STATUS in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<Integer> values) {
			addCriterion("STATUS not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(Integer value1, Integer value2) {
			addCriterion("STATUS between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("STATUS not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return (Criteria) this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return (Criteria) this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME =", value, "crtime");
			return (Criteria) this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <>", value, "crtime");
			return (Criteria) this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterionForJDBCDate("CRTIME >", value, "crtime");
			return (Criteria) this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME >=", value, "crtime");
			return (Criteria) this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterionForJDBCDate("CRTIME <", value, "crtime");
			return (Criteria) this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <=", value, "crtime");
			return (Criteria) this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME in", values, "crtime");
			return (Criteria) this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME not in", values, "crtime");
			return (Criteria) this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME between", value1, value2, "crtime");
			return (Criteria) this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME not between", value1, value2,
					"crtime");
			return (Criteria) this;
		}

		public Criteria andCruseridIsNull() {
			addCriterion("CRUSERID is null");
			return (Criteria) this;
		}

		public Criteria andCruseridIsNotNull() {
			addCriterion("CRUSERID is not null");
			return (Criteria) this;
		}

		public Criteria andCruseridEqualTo(Long value) {
			addCriterion("CRUSERID =", value, "cruserid");
			return (Criteria) this;
		}

		public Criteria andCruseridNotEqualTo(Long value) {
			addCriterion("CRUSERID <>", value, "cruserid");
			return (Criteria) this;
		}

		public Criteria andCruseridGreaterThan(Long value) {
			addCriterion("CRUSERID >", value, "cruserid");
			return (Criteria) this;
		}

		public Criteria andCruseridGreaterThanOrEqualTo(Long value) {
			addCriterion("CRUSERID >=", value, "cruserid");
			return (Criteria) this;
		}

		public Criteria andCruseridLessThan(Long value) {
			addCriterion("CRUSERID <", value, "cruserid");
			return (Criteria) this;
		}

		public Criteria andCruseridLessThanOrEqualTo(Long value) {
			addCriterion("CRUSERID <=", value, "cruserid");
			return (Criteria) this;
		}

		public Criteria andCruseridIn(List<Long> values) {
			addCriterion("CRUSERID in", values, "cruserid");
			return (Criteria) this;
		}

		public Criteria andCruseridNotIn(List<Long> values) {
			addCriterion("CRUSERID not in", values, "cruserid");
			return (Criteria) this;
		}

		public Criteria andCruseridBetween(Long value1, Long value2) {
			addCriterion("CRUSERID between", value1, value2, "cruserid");
			return (Criteria) this;
		}

		public Criteria andCruseridNotBetween(Long value1, Long value2) {
			addCriterion("CRUSERID not between", value1, value2, "cruserid");
			return (Criteria) this;
		}

		public Criteria andCruserIsNull() {
			addCriterion("CRUSER is null");
			return (Criteria) this;
		}

		public Criteria andCruserIsNotNull() {
			addCriterion("CRUSER is not null");
			return (Criteria) this;
		}

		public Criteria andCruserEqualTo(String value) {
			addCriterion("CRUSER =", value, "cruser");
			return (Criteria) this;
		}

		public Criteria andCruserNotEqualTo(String value) {
			addCriterion("CRUSER <>", value, "cruser");
			return (Criteria) this;
		}

		public Criteria andCruserGreaterThan(String value) {
			addCriterion("CRUSER >", value, "cruser");
			return (Criteria) this;
		}

		public Criteria andCruserGreaterThanOrEqualTo(String value) {
			addCriterion("CRUSER >=", value, "cruser");
			return (Criteria) this;
		}

		public Criteria andCruserLessThan(String value) {
			addCriterion("CRUSER <", value, "cruser");
			return (Criteria) this;
		}

		public Criteria andCruserLessThanOrEqualTo(String value) {
			addCriterion("CRUSER <=", value, "cruser");
			return (Criteria) this;
		}

		public Criteria andCruserLike(String value) {
			addCriterion("CRUSER like", value, "cruser");
			return (Criteria) this;
		}

		public Criteria andCruserNotLike(String value) {
			addCriterion("CRUSER not like", value, "cruser");
			return (Criteria) this;
		}

		public Criteria andCruserIn(List<String> values) {
			addCriterion("CRUSER in", values, "cruser");
			return (Criteria) this;
		}

		public Criteria andCruserNotIn(List<String> values) {
			addCriterion("CRUSER not in", values, "cruser");
			return (Criteria) this;
		}

		public Criteria andCruserBetween(String value1, String value2) {
			addCriterion("CRUSER between", value1, value2, "cruser");
			return (Criteria) this;
		}

		public Criteria andCruserNotBetween(String value1, String value2) {
			addCriterion("CRUSER not between", value1, value2, "cruser");
			return (Criteria) this;
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table IRP_JOB
     *
     * @mbggenerated do_not_delete_during_merge Fri Nov 01 16:50:32 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}