package com.tfs.irp.leavechecker.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpCheckerLinkExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_CHECKER_LINK
     *
     * @ibatorgenerated Fri Sep 09 10:50:25 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_CHECKER_LINK
     *
     * @ibatorgenerated Fri Sep 09 10:50:25 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_CHECKER_LINK
     *
     * @ibatorgenerated Fri Sep 09 10:50:25 CST 2016
     */
    public IrpCheckerLinkExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_CHECKER_LINK
     *
     * @ibatorgenerated Fri Sep 09 10:50:25 CST 2016
     */
    protected IrpCheckerLinkExample(IrpCheckerLinkExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_CHECKER_LINK
     *
     * @ibatorgenerated Fri Sep 09 10:50:25 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_CHECKER_LINK
     *
     * @ibatorgenerated Fri Sep 09 10:50:25 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_CHECKER_LINK
     *
     * @ibatorgenerated Fri Sep 09 10:50:25 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_CHECKER_LINK
     *
     * @ibatorgenerated Fri Sep 09 10:50:25 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_CHECKER_LINK
     *
     * @ibatorgenerated Fri Sep 09 10:50:25 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_CHECKER_LINK
     *
     * @ibatorgenerated Fri Sep 09 10:50:25 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_CHECKER_LINK
     *
     * @ibatorgenerated Fri Sep 09 10:50:25 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_CHECKER_LINK
     *
     * @ibatorgenerated Fri Sep 09 10:50:25 CST 2016
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCheckerlinkidIsNull() {
            addCriterion("CHECKERLINKID is null");
            return this;
        }

        public Criteria andCheckerlinkidIsNotNull() {
            addCriterion("CHECKERLINKID is not null");
            return this;
        }

        public Criteria andCheckerlinkidEqualTo(Long value) {
            addCriterion("CHECKERLINKID =", value, "checkerlinkid");
            return this;
        }

        public Criteria andCheckerlinkidNotEqualTo(Long value) {
            addCriterion("CHECKERLINKID <>", value, "checkerlinkid");
            return this;
        }

        public Criteria andCheckerlinkidGreaterThan(Long value) {
            addCriterion("CHECKERLINKID >", value, "checkerlinkid");
            return this;
        }

        public Criteria andCheckerlinkidGreaterThanOrEqualTo(Long value) {
            addCriterion("CHECKERLINKID >=", value, "checkerlinkid");
            return this;
        }

        public Criteria andCheckerlinkidLessThan(Long value) {
            addCriterion("CHECKERLINKID <", value, "checkerlinkid");
            return this;
        }

        public Criteria andCheckerlinkidLessThanOrEqualTo(Long value) {
            addCriterion("CHECKERLINKID <=", value, "checkerlinkid");
            return this;
        }

        public Criteria andCheckerlinkidIn(List<Long> values) {
            addCriterion("CHECKERLINKID in", values, "checkerlinkid");
            return this;
        }

        public Criteria andCheckerlinkidNotIn(List<Long> values) {
            addCriterion("CHECKERLINKID not in", values, "checkerlinkid");
            return this;
        }

        public Criteria andCheckerlinkidBetween(Long value1, Long value2) {
            addCriterion("CHECKERLINKID between", value1, value2, "checkerlinkid");
            return this;
        }

        public Criteria andCheckerlinkidNotBetween(Long value1, Long value2) {
            addCriterion("CHECKERLINKID not between", value1, value2, "checkerlinkid");
            return this;
        }

        public Criteria andLeaveapplyidIsNull() {
            addCriterion("LEAVEAPPLYID is null");
            return this;
        }

        public Criteria andLeaveapplyidIsNotNull() {
            addCriterion("LEAVEAPPLYID is not null");
            return this;
        }

        public Criteria andLeaveapplyidEqualTo(Long value) {
            addCriterion("LEAVEAPPLYID =", value, "leaveapplyid");
            return this;
        }

        public Criteria andLeaveapplyidNotEqualTo(Long value) {
            addCriterion("LEAVEAPPLYID <>", value, "leaveapplyid");
            return this;
        }

        public Criteria andLeaveapplyidGreaterThan(Long value) {
            addCriterion("LEAVEAPPLYID >", value, "leaveapplyid");
            return this;
        }

        public Criteria andLeaveapplyidGreaterThanOrEqualTo(Long value) {
            addCriterion("LEAVEAPPLYID >=", value, "leaveapplyid");
            return this;
        }

        public Criteria andLeaveapplyidLessThan(Long value) {
            addCriterion("LEAVEAPPLYID <", value, "leaveapplyid");
            return this;
        }

        public Criteria andLeaveapplyidLessThanOrEqualTo(Long value) {
            addCriterion("LEAVEAPPLYID <=", value, "leaveapplyid");
            return this;
        }

        public Criteria andLeaveapplyidIn(List<Long> values) {
            addCriterion("LEAVEAPPLYID in", values, "leaveapplyid");
            return this;
        }

        public Criteria andLeaveapplyidNotIn(List<Long> values) {
            addCriterion("LEAVEAPPLYID not in", values, "leaveapplyid");
            return this;
        }

        public Criteria andLeaveapplyidBetween(Long value1, Long value2) {
            addCriterion("LEAVEAPPLYID between", value1, value2, "leaveapplyid");
            return this;
        }

        public Criteria andLeaveapplyidNotBetween(Long value1, Long value2) {
            addCriterion("LEAVEAPPLYID not between", value1, value2, "leaveapplyid");
            return this;
        }

        public Criteria andCrtimeIsNull() {
            addCriterion("CRTIME is null");
            return this;
        }

        public Criteria andCrtimeIsNotNull() {
            addCriterion("CRTIME is not null");
            return this;
        }

        public Criteria andCrtimeEqualTo(Date value) {
            addCriterion("CRTIME =", value, "crtime");
            return this;
        }

        public Criteria andCrtimeNotEqualTo(Date value) {
            addCriterion("CRTIME <>", value, "crtime");
            return this;
        }

        public Criteria andCrtimeGreaterThan(Date value) {
            addCriterion("CRTIME >", value, "crtime");
            return this;
        }

        public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CRTIME >=", value, "crtime");
            return this;
        }

        public Criteria andCrtimeLessThan(Date value) {
            addCriterion("CRTIME <", value, "crtime");
            return this;
        }

        public Criteria andCrtimeLessThanOrEqualTo(Date value) {
            addCriterion("CRTIME <=", value, "crtime");
            return this;
        }

        public Criteria andCrtimeIn(List<Date> values) {
            addCriterion("CRTIME in", values, "crtime");
            return this;
        }

        public Criteria andCrtimeNotIn(List<Date> values) {
            addCriterion("CRTIME not in", values, "crtime");
            return this;
        }

        public Criteria andCrtimeBetween(Date value1, Date value2) {
            addCriterion("CRTIME between", value1, value2, "crtime");
            return this;
        }

        public Criteria andCrtimeNotBetween(Date value1, Date value2) {
            addCriterion("CRTIME not between", value1, value2, "crtime");
            return this;
        }

        public Criteria andOpinionIsNull() {
            addCriterion("OPINION is null");
            return this;
        }

        public Criteria andOpinionIsNotNull() {
            addCriterion("OPINION is not null");
            return this;
        }

        public Criteria andOpinionEqualTo(String value) {
            addCriterion("OPINION =", value, "opinion");
            return this;
        }

        public Criteria andOpinionNotEqualTo(String value) {
            addCriterion("OPINION <>", value, "opinion");
            return this;
        }

        public Criteria andOpinionGreaterThan(String value) {
            addCriterion("OPINION >", value, "opinion");
            return this;
        }

        public Criteria andOpinionGreaterThanOrEqualTo(String value) {
            addCriterion("OPINION >=", value, "opinion");
            return this;
        }

        public Criteria andOpinionLessThan(String value) {
            addCriterion("OPINION <", value, "opinion");
            return this;
        }

        public Criteria andOpinionLessThanOrEqualTo(String value) {
            addCriterion("OPINION <=", value, "opinion");
            return this;
        }

        public Criteria andOpinionLike(String value) {
            addCriterion("OPINION like", value, "opinion");
            return this;
        }

        public Criteria andOpinionNotLike(String value) {
            addCriterion("OPINION not like", value, "opinion");
            return this;
        }

        public Criteria andOpinionIn(List<String> values) {
            addCriterion("OPINION in", values, "opinion");
            return this;
        }

        public Criteria andOpinionNotIn(List<String> values) {
            addCriterion("OPINION not in", values, "opinion");
            return this;
        }

        public Criteria andOpinionBetween(String value1, String value2) {
            addCriterion("OPINION between", value1, value2, "opinion");
            return this;
        }

        public Criteria andOpinionNotBetween(String value1, String value2) {
            addCriterion("OPINION not between", value1, value2, "opinion");
            return this;
        }

        public Criteria andNextuseridIsNull() {
            addCriterion("NEXTUSERID is null");
            return this;
        }

        public Criteria andNextuseridIsNotNull() {
            addCriterion("NEXTUSERID is not null");
            return this;
        }

        public Criteria andNextuseridEqualTo(Long value) {
            addCriterion("NEXTUSERID =", value, "nextuserid");
            return this;
        }

        public Criteria andNextuseridNotEqualTo(Long value) {
            addCriterion("NEXTUSERID <>", value, "nextuserid");
            return this;
        }

        public Criteria andNextuseridGreaterThan(Long value) {
            addCriterion("NEXTUSERID >", value, "nextuserid");
            return this;
        }

        public Criteria andNextuseridGreaterThanOrEqualTo(Long value) {
            addCriterion("NEXTUSERID >=", value, "nextuserid");
            return this;
        }

        public Criteria andNextuseridLessThan(Long value) {
            addCriterion("NEXTUSERID <", value, "nextuserid");
            return this;
        }

        public Criteria andNextuseridLessThanOrEqualTo(Long value) {
            addCriterion("NEXTUSERID <=", value, "nextuserid");
            return this;
        }

        public Criteria andNextuseridIn(List<Long> values) {
            addCriterion("NEXTUSERID in", values, "nextuserid");
            return this;
        }

        public Criteria andNextuseridNotIn(List<Long> values) {
            addCriterion("NEXTUSERID not in", values, "nextuserid");
            return this;
        }

        public Criteria andNextuseridBetween(Long value1, Long value2) {
            addCriterion("NEXTUSERID between", value1, value2, "nextuserid");
            return this;
        }

        public Criteria andNextuseridNotBetween(Long value1, Long value2) {
            addCriterion("NEXTUSERID not between", value1, value2, "nextuserid");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS is not null");
            return this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("STATUS =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("STATUS <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("STATUS >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("STATUS >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("STATUS <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("STATUS <=", value, "status");
            return this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("STATUS in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("STATUS not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("STATUS between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("STATUS not between", value1, value2, "status");
            return this;
        }

        public Criteria andCruseridIsNull() {
            addCriterion("CRUSERID is null");
            return this;
        }

        public Criteria andCruseridIsNotNull() {
            addCriterion("CRUSERID is not null");
            return this;
        }

        public Criteria andCruseridEqualTo(Long value) {
            addCriterion("CRUSERID =", value, "cruserid");
            return this;
        }

        public Criteria andCruseridNotEqualTo(Long value) {
            addCriterion("CRUSERID <>", value, "cruserid");
            return this;
        }

        public Criteria andCruseridGreaterThan(Long value) {
            addCriterion("CRUSERID >", value, "cruserid");
            return this;
        }

        public Criteria andCruseridGreaterThanOrEqualTo(Long value) {
            addCriterion("CRUSERID >=", value, "cruserid");
            return this;
        }

        public Criteria andCruseridLessThan(Long value) {
            addCriterion("CRUSERID <", value, "cruserid");
            return this;
        }

        public Criteria andCruseridLessThanOrEqualTo(Long value) {
            addCriterion("CRUSERID <=", value, "cruserid");
            return this;
        }

        public Criteria andCruseridIn(List<Long> values) {
            addCriterion("CRUSERID in", values, "cruserid");
            return this;
        }

        public Criteria andCruseridNotIn(List<Long> values) {
            addCriterion("CRUSERID not in", values, "cruserid");
            return this;
        }

        public Criteria andCruseridBetween(Long value1, Long value2) {
            addCriterion("CRUSERID between", value1, value2, "cruserid");
            return this;
        }

        public Criteria andCruseridNotBetween(Long value1, Long value2) {
            addCriterion("CRUSERID not between", value1, value2, "cruserid");
            return this;
        }   public Criteria andLeavmarkingIsNull() {
            addCriterion("LEAVEMARKING is null");
            return this;
        }

        public Criteria andLeavmarkingIsNotNull() {
            addCriterion("LEAVEMARKING is not null");
            return this;
        }

        public Criteria andLeavmarkingEqualTo(Integer value) {
            addCriterion("LEAVEMARKING =", value, "leavemarking");
            return this;
        }

        public Criteria andLeavmarkingNotEqualTo(Integer value) {
            addCriterion("LEAVEMARKING <>", value, "leavemarking");
            return this;
        }

        public Criteria andLeavmarkingGreaterThan(Integer value) {
            addCriterion("LEAVEMARKING >", value, "leavemarking");
            return this;
        }

        public Criteria andLeavmarkingGreaterThanOrEqualTo(Integer value) {
            addCriterion("LEAVEMARKING >=", value, "leavemarking");
            return this;
        }

        public Criteria andLeavmarkingLessThan(Integer value) {
            addCriterion("LEAVEMARKING <", value, "leavemarking");
            return this;
        }

        public Criteria andLeavmarkingLessThanOrEqualTo(Integer value) {
            addCriterion("LEAVEMARKING <=", value, "leavemarking");
            return this;
        }

        public Criteria andLeavmarkingIn(List<Integer> values) {
            addCriterion("LEAVEMARKING in", values, "leavemarking");
            return this;
        }

        public Criteria andLeavmarkingNotIn(List<Integer> values) {
            addCriterion("LEAVEMARKING not in", values, "leavemarking");
            return this;
        }

        public Criteria andLeavmarkingBetween(Integer value1, Integer value2) {
            addCriterion("LEAVEMARKING between", value1, value2, "leavemarking");
            return this;
        }

        public Criteria andLeavmarkingNotBetween(Integer value1, Integer value2) {
            addCriterion("LEAVEMARKING not between", value1, value2, "leavemarking");
            return this;
        }
    }
}