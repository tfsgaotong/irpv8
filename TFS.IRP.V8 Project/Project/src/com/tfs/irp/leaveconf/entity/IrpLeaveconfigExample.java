package com.tfs.irp.leaveconf.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpLeaveconfigExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_LEAVECONFIG
	 * @ibatorgenerated  Wed Aug 24 10:41:31 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_LEAVECONFIG
	 * @ibatorgenerated  Wed Aug 24 10:41:31 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_LEAVECONFIG
	 * @ibatorgenerated  Wed Aug 24 10:41:31 CST 2016
	 */
	public IrpLeaveconfigExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_LEAVECONFIG
	 * @ibatorgenerated  Wed Aug 24 10:41:31 CST 2016
	 */
	protected IrpLeaveconfigExample(IrpLeaveconfigExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_LEAVECONFIG
	 * @ibatorgenerated  Wed Aug 24 10:41:31 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_LEAVECONFIG
	 * @ibatorgenerated  Wed Aug 24 10:41:31 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_LEAVECONFIG
	 * @ibatorgenerated  Wed Aug 24 10:41:31 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_LEAVECONFIG
	 * @ibatorgenerated  Wed Aug 24 10:41:31 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_LEAVECONFIG
	 * @ibatorgenerated  Wed Aug 24 10:41:31 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_LEAVECONFIG
	 * @ibatorgenerated  Wed Aug 24 10:41:31 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_LEAVECONFIG
	 * @ibatorgenerated  Wed Aug 24 10:41:31 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_LEAVECONFIG
	 * @ibatorgenerated  Wed Aug 24 10:41:31 CST 2016
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andLeaveconfigidIsNull() {
			addCriterion("LEAVECONFIGID is null");
			return this;
		}

		public Criteria andLeaveconfigidIsNotNull() {
			addCriterion("LEAVECONFIGID is not null");
			return this;
		}

		public Criteria andLeaveconfigidEqualTo(Long value) {
			addCriterion("LEAVECONFIGID =", value, "leaveconfigid");
			return this;
		}

		public Criteria andLeaveconfigidNotEqualTo(Long value) {
			addCriterion("LEAVECONFIGID <>", value, "leaveconfigid");
			return this;
		}

		public Criteria andLeaveconfigidGreaterThan(Long value) {
			addCriterion("LEAVECONFIGID >", value, "leaveconfigid");
			return this;
		}

		public Criteria andLeaveconfigidGreaterThanOrEqualTo(Long value) {
			addCriterion("LEAVECONFIGID >=", value, "leaveconfigid");
			return this;
		}

		public Criteria andLeaveconfigidLessThan(Long value) {
			addCriterion("LEAVECONFIGID <", value, "leaveconfigid");
			return this;
		}

		public Criteria andLeaveconfigidLessThanOrEqualTo(Long value) {
			addCriterion("LEAVECONFIGID <=", value, "leaveconfigid");
			return this;
		}

		public Criteria andLeaveconfigidIn(List<Long> values) {
			addCriterion("LEAVECONFIGID in", values, "leaveconfigid");
			return this;
		}

		public Criteria andLeaveconfigidNotIn(List<Long> values) {
			addCriterion("LEAVECONFIGID not in", values, "leaveconfigid");
			return this;
		}

		public Criteria andLeaveconfigidBetween(Long value1, Long value2) {
			addCriterion("LEAVECONFIGID between", value1, value2,
					"leaveconfigid");
			return this;
		}

		public Criteria andLeaveconfigidNotBetween(Long value1, Long value2) {
			addCriterion("LEAVECONFIGID not between", value1, value2,
					"leaveconfigid");
			return this;
		}

		public Criteria andLeaveconfignameIsNull() {
			addCriterion("LEAVECONFIGNAME is null");
			return this;
		}

		public Criteria andLeaveconfignameIsNotNull() {
			addCriterion("LEAVECONFIGNAME is not null");
			return this;
		}

		public Criteria andLeaveconfignameEqualTo(String value) {
			addCriterion("LEAVECONFIGNAME =", value, "leaveconfigname");
			return this;
		}

		public Criteria andLeaveconfignameNotEqualTo(String value) {
			addCriterion("LEAVECONFIGNAME <>", value, "leaveconfigname");
			return this;
		}

		public Criteria andLeaveconfignameGreaterThan(String value) {
			addCriterion("LEAVECONFIGNAME >", value, "leaveconfigname");
			return this;
		}

		public Criteria andLeaveconfignameGreaterThanOrEqualTo(String value) {
			addCriterion("LEAVECONFIGNAME >=", value, "leaveconfigname");
			return this;
		}

		public Criteria andLeaveconfignameLessThan(String value) {
			addCriterion("LEAVECONFIGNAME <", value, "leaveconfigname");
			return this;
		}

		public Criteria andLeaveconfignameLessThanOrEqualTo(String value) {
			addCriterion("LEAVECONFIGNAME <=", value, "leaveconfigname");
			return this;
		}

		public Criteria andLeaveconfignameLike(String value) {
			addCriterion("LEAVECONFIGNAME like", value, "leaveconfigname");
			return this;
		}

		public Criteria andLeaveconfignameNotLike(String value) {
			addCriterion("LEAVECONFIGNAME not like", value, "leaveconfigname");
			return this;
		}

		public Criteria andLeaveconfignameIn(List<String> values) {
			addCriterion("LEAVECONFIGNAME in", values, "leaveconfigname");
			return this;
		}

		public Criteria andLeaveconfignameNotIn(List<String> values) {
			addCriterion("LEAVECONFIGNAME not in", values, "leaveconfigname");
			return this;
		}

		public Criteria andLeaveconfignameBetween(String value1, String value2) {
			addCriterion("LEAVECONFIGNAME between", value1, value2,
					"leaveconfigname");
			return this;
		}

		public Criteria andLeaveconfignameNotBetween(String value1,
				String value2) {
			addCriterion("LEAVECONFIGNAME not between", value1, value2,
					"leaveconfigname");
			return this;
		}

		public Criteria andLeaveconfigdescIsNull() {
			addCriterion("LEAVECONFIGDESC is null");
			return this;
		}

		public Criteria andLeaveconfigdescIsNotNull() {
			addCriterion("LEAVECONFIGDESC is not null");
			return this;
		}

		public Criteria andLeaveconfigdescEqualTo(String value) {
			addCriterion("LEAVECONFIGDESC =", value, "leaveconfigdesc");
			return this;
		}

		public Criteria andLeaveconfigdescNotEqualTo(String value) {
			addCriterion("LEAVECONFIGDESC <>", value, "leaveconfigdesc");
			return this;
		}

		public Criteria andLeaveconfigdescGreaterThan(String value) {
			addCriterion("LEAVECONFIGDESC >", value, "leaveconfigdesc");
			return this;
		}

		public Criteria andLeaveconfigdescGreaterThanOrEqualTo(String value) {
			addCriterion("LEAVECONFIGDESC >=", value, "leaveconfigdesc");
			return this;
		}

		public Criteria andLeaveconfigdescLessThan(String value) {
			addCriterion("LEAVECONFIGDESC <", value, "leaveconfigdesc");
			return this;
		}

		public Criteria andLeaveconfigdescLessThanOrEqualTo(String value) {
			addCriterion("LEAVECONFIGDESC <=", value, "leaveconfigdesc");
			return this;
		}

		public Criteria andLeaveconfigdescLike(String value) {
			addCriterion("LEAVECONFIGDESC like", value, "leaveconfigdesc");
			return this;
		}

		public Criteria andLeaveconfigdescNotLike(String value) {
			addCriterion("LEAVECONFIGDESC not like", value, "leaveconfigdesc");
			return this;
		}

		public Criteria andLeaveconfigdescIn(List<String> values) {
			addCriterion("LEAVECONFIGDESC in", values, "leaveconfigdesc");
			return this;
		}

		public Criteria andLeaveconfigdescNotIn(List<String> values) {
			addCriterion("LEAVECONFIGDESC not in", values, "leaveconfigdesc");
			return this;
		}

		public Criteria andLeaveconfigdescBetween(String value1, String value2) {
			addCriterion("LEAVECONFIGDESC between", value1, value2,
					"leaveconfigdesc");
			return this;
		}

		public Criteria andLeaveconfigdescNotBetween(String value1,
				String value2) {
			addCriterion("LEAVECONFIGDESC not between", value1, value2,
					"leaveconfigdesc");
			return this;
		}

		public Criteria andApplystatusIsNull() {
			addCriterion("APPLYSTATUS is null");
			return this;
		}

		public Criteria andApplystatusIsNotNull() {
			addCriterion("APPLYSTATUS is not null");
			return this;
		}

		public Criteria andApplystatusEqualTo(Integer value) {
			addCriterion("APPLYSTATUS =", value, "applystatus");
			return this;
		}

		public Criteria andApplystatusNotEqualTo(Integer value) {
			addCriterion("APPLYSTATUS <>", value, "applystatus");
			return this;
		}

		public Criteria andApplystatusGreaterThan(Integer value) {
			addCriterion("APPLYSTATUS >", value, "applystatus");
			return this;
		}

		public Criteria andApplystatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("APPLYSTATUS >=", value, "applystatus");
			return this;
		}

		public Criteria andApplystatusLessThan(Integer value) {
			addCriterion("APPLYSTATUS <", value, "applystatus");
			return this;
		}

		public Criteria andApplystatusLessThanOrEqualTo(Integer value) {
			addCriterion("APPLYSTATUS <=", value, "applystatus");
			return this;
		}

		public Criteria andApplystatusIn(List<Integer> values) {
			addCriterion("APPLYSTATUS in", values, "applystatus");
			return this;
		}

		public Criteria andApplystatusNotIn(List<Integer> values) {
			addCriterion("APPLYSTATUS not in", values, "applystatus");
			return this;
		}

		public Criteria andApplystatusBetween(Integer value1, Integer value2) {
			addCriterion("APPLYSTATUS between", value1, value2, "applystatus");
			return this;
		}

		public Criteria andApplystatusNotBetween(Integer value1, Integer value2) {
			addCriterion("APPLYSTATUS not between", value1, value2,
					"applystatus");
			return this;
		}

		public Criteria andLeavemarkingIsNull() {
			addCriterion("LEAVEMARKING is null");
			return this;
		}

		public Criteria andLeavemarkingIsNotNull() {
			addCriterion("LEAVEMARKING is not null");
			return this;
		}

		public Criteria andLeavemarkingEqualTo(Integer value) {
			addCriterion("LEAVEMARKING =", value, "leavemarking");
			return this;
		}

		public Criteria andLeavemarkingNotEqualTo(Integer value) {
			addCriterion("LEAVEMARKING <>", value, "leavemarking");
			return this;
		}

		public Criteria andLeavemarkingGreaterThan(Integer value) {
			addCriterion("LEAVEMARKING >", value, "leavemarking");
			return this;
		}

		public Criteria andLeavemarkingGreaterThanOrEqualTo(Integer value) {
			addCriterion("LEAVEMARKING >=", value, "leavemarking");
			return this;
		}

		public Criteria andLeavemarkingLessThan(Integer value) {
			addCriterion("LEAVEMARKING <", value, "leavemarking");
			return this;
		}

		public Criteria andLeavemarkingLessThanOrEqualTo(Integer value) {
			addCriterion("LEAVEMARKING <=", value, "leavemarking");
			return this;
		}

		public Criteria andLeavemarkingIn(List<Integer> values) {
			addCriterion("LEAVEMARKING in", values, "leavemarking");
			return this;
		}

		public Criteria andLeavemarkingNotIn(List<Integer> values) {
			addCriterion("LEAVEMARKING not in", values, "leavemarking");
			return this;
		}

		public Criteria andLeavemarkingBetween(Integer value1, Integer value2) {
			addCriterion("LEAVEMARKING between", value1, value2, "leavemarking");
			return this;
		}

		public Criteria andLeavemarkingNotBetween(Integer value1, Integer value2) {
			addCriterion("LEAVEMARKING not between", value1, value2,
					"leavemarking");
			return this;
		}

		public Criteria andCruseridIsNull() {
			addCriterion("CRUSERID is null");
			return this;
		}

		public Criteria andCruseridIsNotNull() {
			addCriterion("CRUSERID is not null");
			return this;
		}

		public Criteria andCruseridEqualTo(Long value) {
			addCriterion("CRUSERID =", value, "cruserid");
			return this;
		}

		public Criteria andCruseridNotEqualTo(Long value) {
			addCriterion("CRUSERID <>", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThan(Long value) {
			addCriterion("CRUSERID >", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThanOrEqualTo(Long value) {
			addCriterion("CRUSERID >=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThan(Long value) {
			addCriterion("CRUSERID <", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThanOrEqualTo(Long value) {
			addCriterion("CRUSERID <=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridIn(List<Long> values) {
			addCriterion("CRUSERID in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridNotIn(List<Long> values) {
			addCriterion("CRUSERID not in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridBetween(Long value1, Long value2) {
			addCriterion("CRUSERID between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCruseridNotBetween(Long value1, Long value2) {
			addCriterion("CRUSERID not between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterion("CRTIME =", value, "crtime");
			return this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterion("CRTIME <>", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterion("CRTIME >", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("CRTIME >=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterion("CRTIME <", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterion("CRTIME <=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterion("CRTIME in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterion("CRTIME not in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterion("CRTIME between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterion("CRTIME not between", value1, value2, "crtime");
			return this;
		}
	}
}