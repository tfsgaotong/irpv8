package com.tfs.irp.microblog.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class IrpMicroblogExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table irp_microblog
	 * @ibatorgenerated  Sat Nov 15 11:31:18 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table irp_microblog
	 * @ibatorgenerated  Sat Nov 15 11:31:18 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_microblog
	 * @ibatorgenerated  Sat Nov 15 11:31:18 CST 2014
	 */
	public IrpMicroblogExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_microblog
	 * @ibatorgenerated  Sat Nov 15 11:31:18 CST 2014
	 */
	protected IrpMicroblogExample(IrpMicroblogExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_microblog
	 * @ibatorgenerated  Sat Nov 15 11:31:18 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_microblog
	 * @ibatorgenerated  Sat Nov 15 11:31:18 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_microblog
	 * @ibatorgenerated  Sat Nov 15 11:31:18 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_microblog
	 * @ibatorgenerated  Sat Nov 15 11:31:18 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_microblog
	 * @ibatorgenerated  Sat Nov 15 11:31:18 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_microblog
	 * @ibatorgenerated  Sat Nov 15 11:31:18 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table irp_microblog
	 * @ibatorgenerated  Sat Nov 15 11:31:18 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table irp_microblog
	 * @ibatorgenerated  Sat Nov 15 11:31:18 CST 2014
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andMicroblogidIsNull() {
			addCriterion("MICROBLOGID is null");
			return this;
		}

		public Criteria andMicroblogidIsNotNull() {
			addCriterion("MICROBLOGID is not null");
			return this;
		}

		public Criteria andMicroblogidEqualTo(Long value) {
			addCriterion("MICROBLOGID =", value, "microblogid");
			return this;
		}

		public Criteria andMicroblogidNotEqualTo(Long value) {
			addCriterion("MICROBLOGID <>", value, "microblogid");
			return this;
		}

		public Criteria andMicroblogidGreaterThan(Long value) {
			addCriterion("MICROBLOGID >", value, "microblogid");
			return this;
		}

		public Criteria andMicroblogidGreaterThanOrEqualTo(Long value) {
			addCriterion("MICROBLOGID >=", value, "microblogid");
			return this;
		}

		public Criteria andMicroblogidLessThan(Long value) {
			addCriterion("MICROBLOGID <", value, "microblogid");
			return this;
		}

		public Criteria andMicroblogidLessThanOrEqualTo(Long value) {
			addCriterion("MICROBLOGID <=", value, "microblogid");
			return this;
		}

		public Criteria andMicroblogidIn(List<Long> values) {
			addCriterion("MICROBLOGID in", values, "microblogid");
			return this;
		}

		public Criteria andMicroblogidNotIn(List<Long> values) {
			addCriterion("MICROBLOGID not in", values, "microblogid");
			return this;
		}

		public Criteria andMicroblogidBetween(Long value1, Long value2) {
			addCriterion("MICROBLOGID between", value1, value2, "microblogid");
			return this;
		}

		public Criteria andMicroblogidNotBetween(Long value1, Long value2) {
			addCriterion("MICROBLOGID not between", value1, value2,
					"microblogid");
			return this;
		}

		public Criteria andUseridIsNull() {
			addCriterion("USERID is null");
			return this;
		}

		public Criteria andUseridIsNotNull() {
			addCriterion("USERID is not null");
			return this;
		}

		public Criteria andUseridEqualTo(Long value) {
			addCriterion("USERID =", value, "userid");
			return this;
		}

		public Criteria andUseridNotEqualTo(Long value) {
			addCriterion("USERID <>", value, "userid");
			return this;
		}

		public Criteria andUseridGreaterThan(Long value) {
			addCriterion("USERID >", value, "userid");
			return this;
		}

		public Criteria andUseridGreaterThanOrEqualTo(Long value) {
			addCriterion("USERID >=", value, "userid");
			return this;
		}

		public Criteria andUseridLessThan(Long value) {
			addCriterion("USERID <", value, "userid");
			return this;
		}

		public Criteria andUseridLessThanOrEqualTo(Long value) {
			addCriterion("USERID <=", value, "userid");
			return this;
		}

		public Criteria andUseridIn(List<Long> values) {
			addCriterion("USERID in", values, "userid");
			return this;
		}

		public Criteria andUseridNotIn(List<Long> values) {
			addCriterion("USERID not in", values, "userid");
			return this;
		}

		public Criteria andUseridBetween(Long value1, Long value2) {
			addCriterion("USERID between", value1, value2, "userid");
			return this;
		}

		public Criteria andUseridNotBetween(Long value1, Long value2) {
			addCriterion("USERID not between", value1, value2, "userid");
			return this;
		}

		public Criteria andMicroblogcontentIsNull() {
			addCriterion("MICROBLOGCONTENT is null");
			return this;
		}

		public Criteria andMicroblogcontentIsNotNull() {
			addCriterion("MICROBLOGCONTENT is not null");
			return this;
		}

		public Criteria andMicroblogcontentEqualTo(String value) {
			addCriterion("MICROBLOGCONTENT =", value, "microblogcontent");
			return this;
		}

		public Criteria andMicroblogcontentNotEqualTo(String value) {
			addCriterion("MICROBLOGCONTENT <>", value, "microblogcontent");
			return this;
		}

		public Criteria andMicroblogcontentGreaterThan(String value) {
			addCriterion("MICROBLOGCONTENT >", value, "microblogcontent");
			return this;
		}

		public Criteria andMicroblogcontentGreaterThanOrEqualTo(String value) {
			addCriterion("MICROBLOGCONTENT >=", value, "microblogcontent");
			return this;
		}

		public Criteria andMicroblogcontentLessThan(String value) {
			addCriterion("MICROBLOGCONTENT <", value, "microblogcontent");
			return this;
		}

		public Criteria andMicroblogcontentLessThanOrEqualTo(String value) {
			addCriterion("MICROBLOGCONTENT <=", value, "microblogcontent");
			return this;
		}

		public Criteria andMicroblogcontentLike(String value) {
			addCriterion("MICROBLOGCONTENT like", value, "microblogcontent");
			return this;
		}

		public Criteria andMicroblogcontentNotLike(String value) {
			addCriterion("MICROBLOGCONTENT not like", value, "microblogcontent");
			return this;
		}

		public Criteria andMicroblogcontentIn(List<String> values) {
			addCriterion("MICROBLOGCONTENT in", values, "microblogcontent");
			return this;
		}

		public Criteria andMicroblogcontentNotIn(List<String> values) {
			addCriterion("MICROBLOGCONTENT not in", values, "microblogcontent");
			return this;
		}

		public Criteria andMicroblogcontentBetween(String value1, String value2) {
			addCriterion("MICROBLOGCONTENT between", value1, value2,
					"microblogcontent");
			return this;
		}

		public Criteria andMicroblogcontentNotBetween(String value1,
				String value2) {
			addCriterion("MICROBLOGCONTENT not between", value1, value2,
					"microblogcontent");
			return this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterion("CRTIME =", value, "crtime");
			return this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterion("CRTIME <>", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterion("CRTIME >", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("CRTIME >=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterion("CRTIME <", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterion("CRTIME <=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterion("CRTIME in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterion("CRTIME not in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterion("CRTIME between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterion("CRTIME not between", value1, value2, "crtime");
			return this;
		}

		public Criteria andFromclientIsNull() {
			addCriterion("FROMCLIENT is null");
			return this;
		}

		public Criteria andFromclientIsNotNull() {
			addCriterion("FROMCLIENT is not null");
			return this;
		}

		public Criteria andFromclientEqualTo(Long value) {
			addCriterion("FROMCLIENT =", value, "fromclient");
			return this;
		}

		public Criteria andFromclientNotEqualTo(Long value) {
			addCriterion("FROMCLIENT <>", value, "fromclient");
			return this;
		}

		public Criteria andFromclientGreaterThan(Long value) {
			addCriterion("FROMCLIENT >", value, "fromclient");
			return this;
		}

		public Criteria andFromclientGreaterThanOrEqualTo(Long value) {
			addCriterion("FROMCLIENT >=", value, "fromclient");
			return this;
		}

		public Criteria andFromclientLessThan(Long value) {
			addCriterion("FROMCLIENT <", value, "fromclient");
			return this;
		}

		public Criteria andFromclientLessThanOrEqualTo(Long value) {
			addCriterion("FROMCLIENT <=", value, "fromclient");
			return this;
		}

		public Criteria andFromclientIn(List<Long> values) {
			addCriterion("FROMCLIENT in", values, "fromclient");
			return this;
		}

		public Criteria andFromclientNotIn(List<Long> values) {
			addCriterion("FROMCLIENT not in", values, "fromclient");
			return this;
		}

		public Criteria andFromclientBetween(Long value1, Long value2) {
			addCriterion("FROMCLIENT between", value1, value2, "fromclient");
			return this;
		}

		public Criteria andFromclientNotBetween(Long value1, Long value2) {
			addCriterion("FROMCLIENT not between", value1, value2, "fromclient");
			return this;
		}

		public Criteria andFromdataIsNull() {
			addCriterion("FROMDATA is null");
			return this;
		}

		public Criteria andFromdataIsNotNull() {
			addCriterion("FROMDATA is not null");
			return this;
		}

		public Criteria andFromdataEqualTo(String value) {
			addCriterion("FROMDATA =", value, "fromdata");
			return this;
		}

		public Criteria andFromdataNotEqualTo(String value) {
			addCriterion("FROMDATA <>", value, "fromdata");
			return this;
		}

		public Criteria andFromdataGreaterThan(String value) {
			addCriterion("FROMDATA >", value, "fromdata");
			return this;
		}

		public Criteria andFromdataGreaterThanOrEqualTo(String value) {
			addCriterion("FROMDATA >=", value, "fromdata");
			return this;
		}

		public Criteria andFromdataLessThan(String value) {
			addCriterion("FROMDATA <", value, "fromdata");
			return this;
		}

		public Criteria andFromdataLessThanOrEqualTo(String value) {
			addCriterion("FROMDATA <=", value, "fromdata");
			return this;
		}

		public Criteria andFromdataLike(String value) {
			addCriterion("FROMDATA like", value, "fromdata");
			return this;
		}

		public Criteria andFromdataNotLike(String value) {
			addCriterion("FROMDATA not like", value, "fromdata");
			return this;
		}

		public Criteria andFromdataIn(List<String> values) {
			addCriterion("FROMDATA in", values, "fromdata");
			return this;
		}

		public Criteria andFromdataNotIn(List<String> values) {
			addCriterion("FROMDATA not in", values, "fromdata");
			return this;
		}

		public Criteria andFromdataBetween(String value1, String value2) {
			addCriterion("FROMDATA between", value1, value2, "fromdata");
			return this;
		}

		public Criteria andFromdataNotBetween(String value1, String value2) {
			addCriterion("FROMDATA not between", value1, value2, "fromdata");
			return this;
		}

		public Criteria andCommentcountIsNull() {
			addCriterion("COMMENTCOUNT is null");
			return this;
		}

		public Criteria andCommentcountIsNotNull() {
			addCriterion("COMMENTCOUNT is not null");
			return this;
		}

		public Criteria andCommentcountEqualTo(Long value) {
			addCriterion("COMMENTCOUNT =", value, "commentcount");
			return this;
		}

		public Criteria andCommentcountNotEqualTo(Long value) {
			addCriterion("COMMENTCOUNT <>", value, "commentcount");
			return this;
		}

		public Criteria andCommentcountGreaterThan(Long value) {
			addCriterion("COMMENTCOUNT >", value, "commentcount");
			return this;
		}

		public Criteria andCommentcountGreaterThanOrEqualTo(Long value) {
			addCriterion("COMMENTCOUNT >=", value, "commentcount");
			return this;
		}

		public Criteria andCommentcountLessThan(Long value) {
			addCriterion("COMMENTCOUNT <", value, "commentcount");
			return this;
		}

		public Criteria andCommentcountLessThanOrEqualTo(Long value) {
			addCriterion("COMMENTCOUNT <=", value, "commentcount");
			return this;
		}

		public Criteria andCommentcountIn(List<Long> values) {
			addCriterion("COMMENTCOUNT in", values, "commentcount");
			return this;
		}

		public Criteria andCommentcountNotIn(List<Long> values) {
			addCriterion("COMMENTCOUNT not in", values, "commentcount");
			return this;
		}

		public Criteria andCommentcountBetween(Long value1, Long value2) {
			addCriterion("COMMENTCOUNT between", value1, value2, "commentcount");
			return this;
		}

		public Criteria andCommentcountNotBetween(Long value1, Long value2) {
			addCriterion("COMMENTCOUNT not between", value1, value2,
					"commentcount");
			return this;
		}

		public Criteria andTranspondidIsNull() {
			addCriterion("TRANSPONDID is null");
			return this;
		}

		public Criteria andTranspondidIsNotNull() {
			addCriterion("TRANSPONDID is not null");
			return this;
		}

		public Criteria andTranspondidEqualTo(Long value) {
			addCriterion("TRANSPONDID =", value, "transpondid");
			return this;
		}

		public Criteria andTranspondidNotEqualTo(Long value) {
			addCriterion("TRANSPONDID <>", value, "transpondid");
			return this;
		}

		public Criteria andTranspondidGreaterThan(Long value) {
			addCriterion("TRANSPONDID >", value, "transpondid");
			return this;
		}

		public Criteria andTranspondidGreaterThanOrEqualTo(Long value) {
			addCriterion("TRANSPONDID >=", value, "transpondid");
			return this;
		}

		public Criteria andTranspondidLessThan(Long value) {
			addCriterion("TRANSPONDID <", value, "transpondid");
			return this;
		}

		public Criteria andTranspondidLessThanOrEqualTo(Long value) {
			addCriterion("TRANSPONDID <=", value, "transpondid");
			return this;
		}

		public Criteria andTranspondidIn(List<Long> values) {
			addCriterion("TRANSPONDID in", values, "transpondid");
			return this;
		}

		public Criteria andTranspondidNotIn(List<Long> values) {
			addCriterion("TRANSPONDID not in", values, "transpondid");
			return this;
		}

		public Criteria andTranspondidBetween(Long value1, Long value2) {
			addCriterion("TRANSPONDID between", value1, value2, "transpondid");
			return this;
		}

		public Criteria andTranspondidNotBetween(Long value1, Long value2) {
			addCriterion("TRANSPONDID not between", value1, value2,
					"transpondid");
			return this;
		}

		public Criteria andTranspondcountIsNull() {
			addCriterion("TRANSPONDCOUNT is null");
			return this;
		}

		public Criteria andTranspondcountIsNotNull() {
			addCriterion("TRANSPONDCOUNT is not null");
			return this;
		}

		public Criteria andTranspondcountEqualTo(Long value) {
			addCriterion("TRANSPONDCOUNT =", value, "transpondcount");
			return this;
		}

		public Criteria andTranspondcountNotEqualTo(Long value) {
			addCriterion("TRANSPONDCOUNT <>", value, "transpondcount");
			return this;
		}

		public Criteria andTranspondcountGreaterThan(Long value) {
			addCriterion("TRANSPONDCOUNT >", value, "transpondcount");
			return this;
		}

		public Criteria andTranspondcountGreaterThanOrEqualTo(Long value) {
			addCriterion("TRANSPONDCOUNT >=", value, "transpondcount");
			return this;
		}

		public Criteria andTranspondcountLessThan(Long value) {
			addCriterion("TRANSPONDCOUNT <", value, "transpondcount");
			return this;
		}

		public Criteria andTranspondcountLessThanOrEqualTo(Long value) {
			addCriterion("TRANSPONDCOUNT <=", value, "transpondcount");
			return this;
		}

		public Criteria andTranspondcountIn(List<Long> values) {
			addCriterion("TRANSPONDCOUNT in", values, "transpondcount");
			return this;
		}

		public Criteria andTranspondcountNotIn(List<Long> values) {
			addCriterion("TRANSPONDCOUNT not in", values, "transpondcount");
			return this;
		}

		public Criteria andTranspondcountBetween(Long value1, Long value2) {
			addCriterion("TRANSPONDCOUNT between", value1, value2,
					"transpondcount");
			return this;
		}

		public Criteria andTranspondcountNotBetween(Long value1, Long value2) {
			addCriterion("TRANSPONDCOUNT not between", value1, value2,
					"transpondcount");
			return this;
		}

		public Criteria andBlogtypeIsNull() {
			addCriterion("BLOGTYPE is null");
			return this;
		}

		public Criteria andBlogtypeIsNotNull() {
			addCriterion("BLOGTYPE is not null");
			return this;
		}

		public Criteria andBlogtypeEqualTo(Integer value) {
			addCriterion("BLOGTYPE =", value, "blogtype");
			return this;
		}

		public Criteria andBlogtypeNotEqualTo(Integer value) {
			addCriterion("BLOGTYPE <>", value, "blogtype");
			return this;
		}

		public Criteria andBlogtypeGreaterThan(Integer value) {
			addCriterion("BLOGTYPE >", value, "blogtype");
			return this;
		}

		public Criteria andBlogtypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("BLOGTYPE >=", value, "blogtype");
			return this;
		}

		public Criteria andBlogtypeLessThan(Integer value) {
			addCriterion("BLOGTYPE <", value, "blogtype");
			return this;
		}

		public Criteria andBlogtypeLessThanOrEqualTo(Integer value) {
			addCriterion("BLOGTYPE <=", value, "blogtype");
			return this;
		}

		public Criteria andBlogtypeIn(List<Integer> values) {
			addCriterion("BLOGTYPE in", values, "blogtype");
			return this;
		}

		public Criteria andBlogtypeNotIn(List<Integer> values) {
			addCriterion("BLOGTYPE not in", values, "blogtype");
			return this;
		}

		public Criteria andBlogtypeBetween(Integer value1, Integer value2) {
			addCriterion("BLOGTYPE between", value1, value2, "blogtype");
			return this;
		}

		public Criteria andBlogtypeNotBetween(Integer value1, Integer value2) {
			addCriterion("BLOGTYPE not between", value1, value2, "blogtype");
			return this;
		}

		public Criteria andTypedataIsNull() {
			addCriterion("TYPEDATA is null");
			return this;
		}

		public Criteria andTypedataIsNotNull() {
			addCriterion("TYPEDATA is not null");
			return this;
		}

		public Criteria andTypedataEqualTo(String value) {
			addCriterion("TYPEDATA =", value, "typedata");
			return this;
		}

		public Criteria andTypedataNotEqualTo(String value) {
			addCriterion("TYPEDATA <>", value, "typedata");
			return this;
		}

		public Criteria andTypedataGreaterThan(String value) {
			addCriterion("TYPEDATA >", value, "typedata");
			return this;
		}

		public Criteria andTypedataGreaterThanOrEqualTo(String value) {
			addCriterion("TYPEDATA >=", value, "typedata");
			return this;
		}

		public Criteria andTypedataLessThan(String value) {
			addCriterion("TYPEDATA <", value, "typedata");
			return this;
		}

		public Criteria andTypedataLessThanOrEqualTo(String value) {
			addCriterion("TYPEDATA <=", value, "typedata");
			return this;
		}

		public Criteria andTypedataLike(String value) {
			addCriterion("TYPEDATA like", value, "typedata");
			return this;
		}

		public Criteria andTypedataNotLike(String value) {
			addCriterion("TYPEDATA not like", value, "typedata");
			return this;
		}

		public Criteria andTypedataIn(List<String> values) {
			addCriterion("TYPEDATA in", values, "typedata");
			return this;
		}

		public Criteria andTypedataNotIn(List<String> values) {
			addCriterion("TYPEDATA not in", values, "typedata");
			return this;
		}

		public Criteria andTypedataBetween(String value1, String value2) {
			addCriterion("TYPEDATA between", value1, value2, "typedata");
			return this;
		}

		public Criteria andTypedataNotBetween(String value1, String value2) {
			addCriterion("TYPEDATA not between", value1, value2, "typedata");
			return this;
		}

		public Criteria andIsdelIsNull() {
			addCriterion("ISDEL is null");
			return this;
		}

		public Criteria andIsdelIsNotNull() {
			addCriterion("ISDEL is not null");
			return this;
		}

		public Criteria andIsdelEqualTo(Integer value) {
			addCriterion("ISDEL =", value, "isdel");
			return this;
		}

		public Criteria andIsdelNotEqualTo(Integer value) {
			addCriterion("ISDEL <>", value, "isdel");
			return this;
		}

		public Criteria andIsdelGreaterThan(Integer value) {
			addCriterion("ISDEL >", value, "isdel");
			return this;
		}

		public Criteria andIsdelGreaterThanOrEqualTo(Integer value) {
			addCriterion("ISDEL >=", value, "isdel");
			return this;
		}

		public Criteria andIsdelLessThan(Integer value) {
			addCriterion("ISDEL <", value, "isdel");
			return this;
		}

		public Criteria andIsdelLessThanOrEqualTo(Integer value) {
			addCriterion("ISDEL <=", value, "isdel");
			return this;
		}

		public Criteria andIsdelIn(List<Integer> values) {
			addCriterion("ISDEL in", values, "isdel");
			return this;
		}

		public Criteria andIsdelNotIn(List<Integer> values) {
			addCriterion("ISDEL not in", values, "isdel");
			return this;
		}

		public Criteria andIsdelBetween(Integer value1, Integer value2) {
			addCriterion("ISDEL between", value1, value2, "isdel");
			return this;
		}

		public Criteria andIsdelNotBetween(Integer value1, Integer value2) {
			addCriterion("ISDEL not between", value1, value2, "isdel");
			return this;
		}

		public Criteria andGroupidIsNull() {
			addCriterion("GROUPID is null");
			return this;
		}

		public Criteria andGroupidIsNotNull() {
			addCriterion("GROUPID is not null");
			return this;
		}

		public Criteria andGroupidEqualTo(Long value) {
			addCriterion("GROUPID =", value, "groupid");
			return this;
		}

		public Criteria andGroupidNotEqualTo(Long value) {
			addCriterion("GROUPID <>", value, "groupid");
			return this;
		}

		public Criteria andGroupidGreaterThan(Long value) {
			addCriterion("GROUPID >", value, "groupid");
			return this;
		}

		public Criteria andGroupidGreaterThanOrEqualTo(Long value) {
			addCriterion("GROUPID >=", value, "groupid");
			return this;
		}

		public Criteria andGroupidLessThan(Long value) {
			addCriterion("GROUPID <", value, "groupid");
			return this;
		}

		public Criteria andGroupidLessThanOrEqualTo(Long value) {
			addCriterion("GROUPID <=", value, "groupid");
			return this;
		}

		public Criteria andGroupidIn(List<Long> values) {
			addCriterion("GROUPID in", values, "groupid");
			return this;
		}

		public Criteria andGroupidNotIn(List<Long> values) {
			addCriterion("GROUPID not in", values, "groupid");
			return this;
		}

		public Criteria andGroupidBetween(Long value1, Long value2) {
			addCriterion("GROUPID between", value1, value2, "groupid");
			return this;
		}

		public Criteria andGroupidNotBetween(Long value1, Long value2) {
			addCriterion("GROUPID not between", value1, value2, "groupid");
			return this;
		}
	}
}