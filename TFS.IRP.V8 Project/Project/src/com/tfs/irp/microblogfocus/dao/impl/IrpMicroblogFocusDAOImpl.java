package com.tfs.irp.microblogfocus.dao.impl;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.tfs.irp.microblogfocus.dao.IrpMicroblogFocusDAO;
import com.tfs.irp.microblogfocus.entity.IrpMicroblogFocus;
import com.tfs.irp.microblogfocus.entity.IrpMicroblogFocusExample;
import com.tfs.irp.util.PageUtil;

public class IrpMicroblogFocusDAOImpl extends SqlMapClientDaoSupport implements IrpMicroblogFocusDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_MICROBLOG_FOCUS
     *
     * @ibatorgenerated Tue Apr 23 13:22:19 CST 2013
     */
    public int countByExample(IrpMicroblogFocusExample example) throws SQLException {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("IRP_MICROBLOG_FOCUS.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_MICROBLOG_FOCUS
     *
     * @ibatorgenerated Tue Apr 23 13:22:19 CST 2013
     */
    public int deleteByExample(IrpMicroblogFocusExample example) throws SQLException {
        int rows = getSqlMapClientTemplate().delete("IRP_MICROBLOG_FOCUS.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_MICROBLOG_FOCUS
     *
     * @ibatorgenerated Tue Apr 23 13:22:19 CST 2013
     */
    public int deleteByPrimaryKey(Long focusid) throws SQLException {
        IrpMicroblogFocus key = new IrpMicroblogFocus();
        key.setFocusid(focusid);
        int rows = getSqlMapClientTemplate().delete("IRP_MICROBLOG_FOCUS.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_MICROBLOG_FOCUS
     *
     * @ibatorgenerated Tue Apr 23 13:22:19 CST 2013
     */
    public void insert(IrpMicroblogFocus record) throws SQLException {
        getSqlMapClientTemplate().insert("IRP_MICROBLOG_FOCUS.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_MICROBLOG_FOCUS
     *
     * @ibatorgenerated Tue Apr 23 13:22:19 CST 2013
     */
    public void insertSelective(IrpMicroblogFocus record) throws SQLException {
        getSqlMapClientTemplate().insert("IRP_MICROBLOG_FOCUS.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_MICROBLOG_FOCUS
     *
     * @ibatorgenerated Tue Apr 23 13:22:19 CST 2013
     */
    @SuppressWarnings("unchecked")
    public List<IrpMicroblogFocus> selectByExample(IrpMicroblogFocusExample example) throws SQLException {
        List<IrpMicroblogFocus> list = getSqlMapClientTemplate().queryForList("IRP_MICROBLOG_FOCUS.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_MICROBLOG_FOCUS
     *
     * @ibatorgenerated Tue Apr 23 13:22:19 CST 2013
     */
    public IrpMicroblogFocus selectByPrimaryKey(Long focusid) throws SQLException {
        IrpMicroblogFocus key = new IrpMicroblogFocus();
        key.setFocusid(focusid);
        IrpMicroblogFocus record = (IrpMicroblogFocus) getSqlMapClientTemplate().queryForObject("IRP_MICROBLOG_FOCUS.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_MICROBLOG_FOCUS
     *
     * @ibatorgenerated Tue Apr 23 13:22:19 CST 2013
     */
    public int updateByExampleSelective(IrpMicroblogFocus record, IrpMicroblogFocusExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("IRP_MICROBLOG_FOCUS.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_MICROBLOG_FOCUS
     *
     * @ibatorgenerated Tue Apr 23 13:22:19 CST 2013
     */
    public int updateByExample(IrpMicroblogFocus record, IrpMicroblogFocusExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("IRP_MICROBLOG_FOCUS.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_MICROBLOG_FOCUS
     *
     * @ibatorgenerated Tue Apr 23 13:22:19 CST 2013
     */
    public int updateByPrimaryKeySelective(IrpMicroblogFocus record) throws SQLException {
        int rows = getSqlMapClientTemplate().update("IRP_MICROBLOG_FOCUS.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_MICROBLOG_FOCUS
     *
     * @ibatorgenerated Tue Apr 23 13:22:19 CST 2013
     */
    public int updateByPrimaryKey(IrpMicroblogFocus record) throws SQLException {
        int rows = getSqlMapClientTemplate().update("IRP_MICROBLOG_FOCUS.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_MICROBLOG_FOCUS
     *
     * @ibatorgenerated Tue Apr 23 13:22:19 CST 2013
     */
    private static class UpdateByExampleParms extends IrpMicroblogFocusExample {
        private Object record;

        public UpdateByExampleParms(Object record, IrpMicroblogFocusExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

	@Override
	public List selectUseridByFocuserId(long _loginuserid)
			throws SQLException {
		// TODO Auto-generated method stub
		Map map = new HashMap();
		map.put("focususerid",_loginuserid);
	  List list =this.getSqlMapClientTemplate().queryForList("IRP_MICROBLOG_FOCUS.ibatorgenerated_findUseridByFocuserId", map);
		return list;
	}
	@Override
	public List selectUseridByLoginuserId(long _loginuserid)
			throws SQLException {
		// TODO Auto-generated method stub
		Map map = new HashMap();
		map.put("focususerid",_loginuserid);
		List microblogfoc = new ArrayList();
		List list =this.getSqlMapClientTemplate().queryForList("IRP_MICROBLOG_FOCUS.ibatorgenerated_findUseridByFocuserId", map);
		for (int i = 0; i < list.size(); i++) {
			Map map1 = (Map) list.get(i);
			microblogfoc.add(map1.values().toString().replace("[","").replace("]",""));
		}
		return microblogfoc;
	}
	@Override
	public List selectFansByLoginuserId(long _loginuserid)
			throws SQLException {
		// TODO Auto-generated method stub
		Map map = new HashMap();
		map.put("userid",_loginuserid);
		List microblogfoc = new ArrayList();
		List list =this.getSqlMapClientTemplate().queryForList("IRP_MICROBLOG_FOCUS.ibatorgenerated_findFocuserIdByUserid", map);
		for (int i = 0; i < list.size(); i++) {
			Map map1 = (Map) list.get(i);
			microblogfoc.add(map1.values().toString().replace("[","").replace("]",""));
		}
		return microblogfoc;
	}

	@Override
	public List selectUseridByFocususerId(long _loginuserid) throws SQLException {
		// TODO Auto-generated method stub
		Map map = new HashMap();
		map.put("userid", _loginuserid);
		
		 List listone  = new ArrayList();
		   List	list= this.getSqlMapClientTemplate().queryForList("IRP_MICROBLOG_FOCUS.ibatorgenerated_findUseridByEachFocususerid",map);
		    
		    if(list.toString()!="[]"){
		    	for(int i=0;i<list.size();i++){
					Map map1 = (Map) list.get(i);
						listone.add(map1.values().toString().replace("[","").replace("]",""));			
				}
		    
		    }
		    
		return listone;
	}

    @Override
    @SuppressWarnings("unchecked")
    public List<IrpMicroblogFocus> selectByExample(IrpMicroblogFocusExample example, PageUtil pageUtil)
            throws SQLException {
        List<IrpMicroblogFocus> list = null;
        if (pageUtil != null) {
            list = getSqlMapClientTemplate().queryForList("IRP_MICROBLOG_FOCUS.ibatorgenerated_selectByExample",
                    example, pageUtil.getPageIndex(), pageUtil.getPageSize());
        } else {
            list = getSqlMapClientTemplate().queryForList("IRP_MICROBLOG_FOCUS.ibatorgenerated_selectByExample",
                    example);
        }
        return list;
    }

}