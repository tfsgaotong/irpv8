package com.tfs.irp.project.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.math.BigDecimal;

public class IrpProjectExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_PROJECT
	 * @ibatorgenerated  Tue Aug 26 16:41:09 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_PROJECT
	 * @ibatorgenerated  Tue Aug 26 16:41:09 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_PROJECT
	 * @ibatorgenerated  Tue Aug 26 16:41:09 CST 2014
	 */
	public IrpProjectExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_PROJECT
	 * @ibatorgenerated  Tue Aug 26 16:41:09 CST 2014
	 */
	protected IrpProjectExample(IrpProjectExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_PROJECT
	 * @ibatorgenerated  Tue Aug 26 16:41:09 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_PROJECT
	 * @ibatorgenerated  Tue Aug 26 16:41:09 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_PROJECT
	 * @ibatorgenerated  Tue Aug 26 16:41:09 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_PROJECT
	 * @ibatorgenerated  Tue Aug 26 16:41:09 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_PROJECT
	 * @ibatorgenerated  Tue Aug 26 16:41:09 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_PROJECT
	 * @ibatorgenerated  Tue Aug 26 16:41:09 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_PROJECT
	 * @ibatorgenerated  Tue Aug 26 16:41:09 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_PROJECT
	 * @ibatorgenerated  Tue Aug 26 16:41:09 CST 2014
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andProjectidIsNull() {
			addCriterion("PROJECTID is null");
			return this;
		}

		public Criteria andProjectidIsNotNull() {
			addCriterion("PROJECTID is not null");
			return this;
		}

		public Criteria andProjectidEqualTo(Long value) {
			addCriterion("PROJECTID =", value, "projectid");
			return this;
		}

		public Criteria andProjectidNotEqualTo(Long value) {
			addCriterion("PROJECTID <>", value, "projectid");
			return this;
		}

		public Criteria andProjectidGreaterThan(Long value) {
			addCriterion("PROJECTID >", value, "projectid");
			return this;
		}

		public Criteria andProjectidGreaterThanOrEqualTo(Long value) {
			addCriterion("PROJECTID >=", value, "projectid");
			return this;
		}

		public Criteria andProjectidLessThan(Long value) {
			addCriterion("PROJECTID <", value, "projectid");
			return this;
		}

		public Criteria andProjectidLessThanOrEqualTo(Long value) {
			addCriterion("PROJECTID <=", value, "projectid");
			return this;
		}

		public Criteria andProjectidIn(List<Long> values) {
			addCriterion("PROJECTID in", values, "projectid");
			return this;
		}

		public Criteria andProjectidNotIn(List<Long> values) {
			addCriterion("PROJECTID not in", values, "projectid");
			return this;
		}

		public Criteria andProjectidBetween(Long value1, Long value2) {
			addCriterion("PROJECTID between", value1, value2, "projectid");
			return this;
		}

		public Criteria andProjectidNotBetween(Long value1, Long value2) {
			addCriterion("PROJECTID not between", value1, value2, "projectid");
			return this;
		}

		public Criteria andPrnameIsNull() {
			addCriterion("PRNAME is null");
			return this;
		}

		public Criteria andPrnameIsNotNull() {
			addCriterion("PRNAME is not null");
			return this;
		}

		public Criteria andPrnameEqualTo(String value) {
			addCriterion("PRNAME =", value, "prname");
			return this;
		}

		public Criteria andPrnameNotEqualTo(String value) {
			addCriterion("PRNAME <>", value, "prname");
			return this;
		}

		public Criteria andPrnameGreaterThan(String value) {
			addCriterion("PRNAME >", value, "prname");
			return this;
		}

		public Criteria andPrnameGreaterThanOrEqualTo(String value) {
			addCriterion("PRNAME >=", value, "prname");
			return this;
		}

		public Criteria andPrnameLessThan(String value) {
			addCriterion("PRNAME <", value, "prname");
			return this;
		}

		public Criteria andPrnameLessThanOrEqualTo(String value) {
			addCriterion("PRNAME <=", value, "prname");
			return this;
		}

		public Criteria andPrnameLike(String value) {
			addCriterion("PRNAME like", value, "prname");
			return this;
		}

		public Criteria andPrnameNotLike(String value) {
			addCriterion("PRNAME not like", value, "prname");
			return this;
		}

		public Criteria andPrnameIn(List<String> values) {
			addCriterion("PRNAME in", values, "prname");
			return this;
		}

		public Criteria andPrnameNotIn(List<String> values) {
			addCriterion("PRNAME not in", values, "prname");
			return this;
		}

		public Criteria andPrnameBetween(String value1, String value2) {
			addCriterion("PRNAME between", value1, value2, "prname");
			return this;
		}

		public Criteria andPrnameNotBetween(String value1, String value2) {
			addCriterion("PRNAME not between", value1, value2, "prname");
			return this;
		}

		public Criteria andPrdescIsNull() {
			addCriterion("PRDESC is null");
			return this;
		}

		public Criteria andPrdescIsNotNull() {
			addCriterion("PRDESC is not null");
			return this;
		}

		public Criteria andPrdescEqualTo(String value) {
			addCriterion("PRDESC =", value, "prdesc");
			return this;
		}

		public Criteria andPrdescNotEqualTo(String value) {
			addCriterion("PRDESC <>", value, "prdesc");
			return this;
		}

		public Criteria andPrdescGreaterThan(String value) {
			addCriterion("PRDESC >", value, "prdesc");
			return this;
		}

		public Criteria andPrdescGreaterThanOrEqualTo(String value) {
			addCriterion("PRDESC >=", value, "prdesc");
			return this;
		}

		public Criteria andPrdescLessThan(String value) {
			addCriterion("PRDESC <", value, "prdesc");
			return this;
		}

		public Criteria andPrdescLessThanOrEqualTo(String value) {
			addCriterion("PRDESC <=", value, "prdesc");
			return this;
		}

		public Criteria andPrdescLike(String value) {
			addCriterion("PRDESC like", value, "prdesc");
			return this;
		}

		public Criteria andPrdescNotLike(String value) {
			addCriterion("PRDESC not like", value, "prdesc");
			return this;
		}

		public Criteria andPrdescIn(List<String> values) {
			addCriterion("PRDESC in", values, "prdesc");
			return this;
		}

		public Criteria andPrdescNotIn(List<String> values) {
			addCriterion("PRDESC not in", values, "prdesc");
			return this;
		}

		public Criteria andPrdescBetween(String value1, String value2) {
			addCriterion("PRDESC between", value1, value2, "prdesc");
			return this;
		}

		public Criteria andPrdescNotBetween(String value1, String value2) {
			addCriterion("PRDESC not between", value1, value2, "prdesc");
			return this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME =", value, "crtime");
			return this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <>", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterionForJDBCDate("CRTIME >", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME >=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterionForJDBCDate("CRTIME <", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME not in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME not between", value1, value2,
					"crtime");
			return this;
		}

		public Criteria andStarttimeIsNull() {
			addCriterion("STARTTIME is null");
			return this;
		}

		public Criteria andStarttimeIsNotNull() {
			addCriterion("STARTTIME is not null");
			return this;
		}

		public Criteria andStarttimeEqualTo(Date value) {
			addCriterionForJDBCDate("STARTTIME =", value, "starttime");
			return this;
		}

		public Criteria andStarttimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("STARTTIME <>", value, "starttime");
			return this;
		}

		public Criteria andStarttimeGreaterThan(Date value) {
			addCriterionForJDBCDate("STARTTIME >", value, "starttime");
			return this;
		}

		public Criteria andStarttimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("STARTTIME >=", value, "starttime");
			return this;
		}

		public Criteria andStarttimeLessThan(Date value) {
			addCriterionForJDBCDate("STARTTIME <", value, "starttime");
			return this;
		}

		public Criteria andStarttimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("STARTTIME <=", value, "starttime");
			return this;
		}

		public Criteria andStarttimeIn(List<Date> values) {
			addCriterionForJDBCDate("STARTTIME in", values, "starttime");
			return this;
		}

		public Criteria andStarttimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("STARTTIME not in", values, "starttime");
			return this;
		}

		public Criteria andStarttimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("STARTTIME between", value1, value2,
					"starttime");
			return this;
		}

		public Criteria andStarttimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("STARTTIME not between", value1, value2,
					"starttime");
			return this;
		}

		public Criteria andEndtimeIsNull() {
			addCriterion("ENDTIME is null");
			return this;
		}

		public Criteria andEndtimeIsNotNull() {
			addCriterion("ENDTIME is not null");
			return this;
		}

		public Criteria andEndtimeEqualTo(Date value) {
			addCriterionForJDBCDate("ENDTIME =", value, "endtime");
			return this;
		}

		public Criteria andEndtimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("ENDTIME <>", value, "endtime");
			return this;
		}

		public Criteria andEndtimeGreaterThan(Date value) {
			addCriterionForJDBCDate("ENDTIME >", value, "endtime");
			return this;
		}

		public Criteria andEndtimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ENDTIME >=", value, "endtime");
			return this;
		}

		public Criteria andEndtimeLessThan(Date value) {
			addCriterionForJDBCDate("ENDTIME <", value, "endtime");
			return this;
		}

		public Criteria andEndtimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ENDTIME <=", value, "endtime");
			return this;
		}

		public Criteria andEndtimeIn(List<Date> values) {
			addCriterionForJDBCDate("ENDTIME in", values, "endtime");
			return this;
		}

		public Criteria andEndtimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("ENDTIME not in", values, "endtime");
			return this;
		}

		public Criteria andEndtimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ENDTIME between", value1, value2,
					"endtime");
			return this;
		}

		public Criteria andEndtimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ENDTIME not between", value1, value2,
					"endtime");
			return this;
		}

		public Criteria andCruseridIsNull() {
			addCriterion("CRUSERID is null");
			return this;
		}

		public Criteria andCruseridIsNotNull() {
			addCriterion("CRUSERID is not null");
			return this;
		}

		public Criteria andCruseridEqualTo(Long value) {
			addCriterion("CRUSERID =", value, "cruserid");
			return this;
		}

		public Criteria andCruseridNotEqualTo(Long value) {
			addCriterion("CRUSERID <>", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThan(Long value) {
			addCriterion("CRUSERID >", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThanOrEqualTo(Long value) {
			addCriterion("CRUSERID >=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThan(Long value) {
			addCriterion("CRUSERID <", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThanOrEqualTo(Long value) {
			addCriterion("CRUSERID <=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridIn(List<Long> values) {
			addCriterion("CRUSERID in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridNotIn(List<Long> values) {
			addCriterion("CRUSERID not in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridBetween(Long value1, Long value2) {
			addCriterion("CRUSERID between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCruseridNotBetween(Long value1, Long value2) {
			addCriterion("CRUSERID not between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andOffpersonidIsNull() {
			addCriterion("OFFPERSONID is null");
			return this;
		}

		public Criteria andOffpersonidIsNotNull() {
			addCriterion("OFFPERSONID is not null");
			return this;
		}

		public Criteria andOffpersonidEqualTo(Long value) {
			addCriterion("OFFPERSONID =", value, "offpersonid");
			return this;
		}

		public Criteria andOffpersonidNotEqualTo(Long value) {
			addCriterion("OFFPERSONID <>", value, "offpersonid");
			return this;
		}

		public Criteria andOffpersonidGreaterThan(Long value) {
			addCriterion("OFFPERSONID >", value, "offpersonid");
			return this;
		}

		public Criteria andOffpersonidGreaterThanOrEqualTo(Long value) {
			addCriterion("OFFPERSONID >=", value, "offpersonid");
			return this;
		}

		public Criteria andOffpersonidLessThan(Long value) {
			addCriterion("OFFPERSONID <", value, "offpersonid");
			return this;
		}

		public Criteria andOffpersonidLessThanOrEqualTo(Long value) {
			addCriterion("OFFPERSONID <=", value, "offpersonid");
			return this;
		}

		public Criteria andOffpersonidIn(List<Long> values) {
			addCriterion("OFFPERSONID in", values, "offpersonid");
			return this;
		}

		public Criteria andOffpersonidNotIn(List<Long> values) {
			addCriterion("OFFPERSONID not in", values, "offpersonid");
			return this;
		}

		public Criteria andOffpersonidBetween(Long value1, Long value2) {
			addCriterion("OFFPERSONID between", value1, value2, "offpersonid");
			return this;
		}

		public Criteria andOffpersonidNotBetween(Long value1, Long value2) {
			addCriterion("OFFPERSONID not between", value1, value2,
					"offpersonid");
			return this;
		}

		public Criteria andIsclosedIsNull() {
			addCriterion("ISCLOSED is null");
			return this;
		}

		public Criteria andIsclosedIsNotNull() {
			addCriterion("ISCLOSED is not null");
			return this;
		}

		public Criteria andIsclosedEqualTo(Long value) {
			addCriterion("ISCLOSED =", value, "isclosed");
			return this;
		}

		public Criteria andIsclosedNotEqualTo(Long value) {
			addCriterion("ISCLOSED <>", value, "isclosed");
			return this;
		}

		public Criteria andIsclosedGreaterThan(Long value) {
			addCriterion("ISCLOSED >", value, "isclosed");
			return this;
		}

		public Criteria andIsclosedGreaterThanOrEqualTo(Long value) {
			addCriterion("ISCLOSED >=", value, "isclosed");
			return this;
		}

		public Criteria andIsclosedLessThan(Long value) {
			addCriterion("ISCLOSED <", value, "isclosed");
			return this;
		}

		public Criteria andIsclosedLessThanOrEqualTo(Long value) {
			addCriterion("ISCLOSED <=", value, "isclosed");
			return this;
		}

		public Criteria andIsclosedIn(List<Long> values) {
			addCriterion("ISCLOSED in", values, "isclosed");
			return this;
		}

		public Criteria andIsclosedNotIn(List<Long> values) {
			addCriterion("ISCLOSED not in", values, "isclosed");
			return this;
		}

		public Criteria andIsclosedBetween(Long value1, Long value2) {
			addCriterion("ISCLOSED between", value1, value2, "isclosed");
			return this;
		}

		public Criteria andIsclosedNotBetween(Long value1, Long value2) {
			addCriterion("ISCLOSED not between", value1, value2, "isclosed");
			return this;
		}

		public Criteria andIspublishIsNull() {
			addCriterion("ISPUBLISH is null");
			return this;
		}

		public Criteria andIspublishIsNotNull() {
			addCriterion("ISPUBLISH is not null");
			return this;
		}

		public Criteria andIspublishEqualTo(Long value) {
			addCriterion("ISPUBLISH =", value, "ispublish");
			return this;
		}

		public Criteria andIspublishNotEqualTo(Long value) {
			addCriterion("ISPUBLISH <>", value, "ispublish");
			return this;
		}

		public Criteria andIspublishGreaterThan(Long value) {
			addCriterion("ISPUBLISH >", value, "ispublish");
			return this;
		}

		public Criteria andIspublishGreaterThanOrEqualTo(Long value) {
			addCriterion("ISPUBLISH >=", value, "ispublish");
			return this;
		}

		public Criteria andIspublishLessThan(Long value) {
			addCriterion("ISPUBLISH <", value, "ispublish");
			return this;
		}

		public Criteria andIspublishLessThanOrEqualTo(Long value) {
			addCriterion("ISPUBLISH <=", value, "ispublish");
			return this;
		}

		public Criteria andIspublishIn(List<Long> values) {
			addCriterion("ISPUBLISH in", values, "ispublish");
			return this;
		}

		public Criteria andIspublishNotIn(List<Long> values) {
			addCriterion("ISPUBLISH not in", values, "ispublish");
			return this;
		}

		public Criteria andIspublishBetween(Long value1, Long value2) {
			addCriterion("ISPUBLISH between", value1, value2, "ispublish");
			return this;
		}

		public Criteria andIspublishNotBetween(Long value1, Long value2) {
			addCriterion("ISPUBLISH not between", value1, value2, "ispublish");
			return this;
		}

		public Criteria andProkeyIsNull() {
			addCriterion("PROKEY is null");
			return this;
		}

		public Criteria andProkeyIsNotNull() {
			addCriterion("PROKEY is not null");
			return this;
		}

		public Criteria andProkeyEqualTo(String value) {
			addCriterion("PROKEY =", value, "prokey");
			return this;
		}

		public Criteria andProkeyNotEqualTo(String value) {
			addCriterion("PROKEY <>", value, "prokey");
			return this;
		}

		public Criteria andProkeyGreaterThan(String value) {
			addCriterion("PROKEY >", value, "prokey");
			return this;
		}

		public Criteria andProkeyGreaterThanOrEqualTo(String value) {
			addCriterion("PROKEY >=", value, "prokey");
			return this;
		}

		public Criteria andProkeyLessThan(String value) {
			addCriterion("PROKEY <", value, "prokey");
			return this;
		}

		public Criteria andProkeyLessThanOrEqualTo(String value) {
			addCriterion("PROKEY <=", value, "prokey");
			return this;
		}

		public Criteria andProkeyLike(String value) {
			addCriterion("PROKEY like", value, "prokey");
			return this;
		}

		public Criteria andProkeyNotLike(String value) {
			addCriterion("PROKEY not like", value, "prokey");
			return this;
		}

		public Criteria andProkeyIn(List<String> values) {
			addCriterion("PROKEY in", values, "prokey");
			return this;
		}

		public Criteria andProkeyNotIn(List<String> values) {
			addCriterion("PROKEY not in", values, "prokey");
			return this;
		}

		public Criteria andProkeyBetween(String value1, String value2) {
			addCriterion("PROKEY between", value1, value2, "prokey");
			return this;
		}

		public Criteria andProkeyNotBetween(String value1, String value2) {
			addCriterion("PROKEY not between", value1, value2, "prokey");
			return this;
		}

		public Criteria andProstatusIsNull() {
			addCriterion("PROSTATUS is null");
			return this;
		}

		public Criteria andProstatusIsNotNull() {
			addCriterion("PROSTATUS is not null");
			return this;
		}

		public Criteria andProstatusEqualTo(Long value) {
			addCriterion("PROSTATUS =", value, "prostatus");
			return this;
		}

		public Criteria andProstatusNotEqualTo(Long value) {
			addCriterion("PROSTATUS <>", value, "prostatus");
			return this;
		}

		public Criteria andProstatusGreaterThan(Long value) {
			addCriterion("PROSTATUS >", value, "prostatus");
			return this;
		}

		public Criteria andProstatusGreaterThanOrEqualTo(Long value) {
			addCriterion("PROSTATUS >=", value, "prostatus");
			return this;
		}

		public Criteria andProstatusLessThan(Long value) {
			addCriterion("PROSTATUS <", value, "prostatus");
			return this;
		}

		public Criteria andProstatusLessThanOrEqualTo(Long value) {
			addCriterion("PROSTATUS <=", value, "prostatus");
			return this;
		}

		public Criteria andProstatusIn(List<Long> values) {
			addCriterion("PROSTATUS in", values, "prostatus");
			return this;
		}

		public Criteria andProstatusNotIn(List<Long> values) {
			addCriterion("PROSTATUS not in", values, "prostatus");
			return this;
		}

		public Criteria andProstatusBetween(Long value1, Long value2) {
			addCriterion("PROSTATUS between", value1, value2, "prostatus");
			return this;
		}

		public Criteria andProstatusNotBetween(Long value1, Long value2) {
			addCriterion("PROSTATUS not between", value1, value2, "prostatus");
			return this;
		}

		public Criteria andProjectfileIsNull() {
			addCriterion("PROJECTFILE is null");
			return this;
		}

		public Criteria andProjectfileIsNotNull() {
			addCriterion("PROJECTFILE is not null");
			return this;
		}

		public Criteria andProjectfileEqualTo(String value) {
			addCriterion("PROJECTFILE =", value, "projectfile");
			return this;
		}

		public Criteria andProjectfileNotEqualTo(String value) {
			addCriterion("PROJECTFILE <>", value, "projectfile");
			return this;
		}

		public Criteria andProjectfileGreaterThan(String value) {
			addCriterion("PROJECTFILE >", value, "projectfile");
			return this;
		}

		public Criteria andProjectfileGreaterThanOrEqualTo(String value) {
			addCriterion("PROJECTFILE >=", value, "projectfile");
			return this;
		}

		public Criteria andProjectfileLessThan(String value) {
			addCriterion("PROJECTFILE <", value, "projectfile");
			return this;
		}

		public Criteria andProjectfileLessThanOrEqualTo(String value) {
			addCriterion("PROJECTFILE <=", value, "projectfile");
			return this;
		}

		public Criteria andProjectfileLike(String value) {
			addCriterion("PROJECTFILE like", value, "projectfile");
			return this;
		}

		public Criteria andProjectfileNotLike(String value) {
			addCriterion("PROJECTFILE not like", value, "projectfile");
			return this;
		}

		public Criteria andProjectfileIn(List<String> values) {
			addCriterion("PROJECTFILE in", values, "projectfile");
			return this;
		}

		public Criteria andProjectfileNotIn(List<String> values) {
			addCriterion("PROJECTFILE not in", values, "projectfile");
			return this;
		}

		public Criteria andProjectfileBetween(String value1, String value2) {
			addCriterion("PROJECTFILE between", value1, value2, "projectfile");
			return this;
		}

		public Criteria andProjectfileNotBetween(String value1, String value2) {
			addCriterion("PROJECTFILE not between", value1, value2,
					"projectfile");
			return this;
		}

		public Criteria andProjecttypeIsNull() {
			addCriterion("PROJECTTYPE is null");
			return this;
		}

		public Criteria andProjecttypeIsNotNull() {
			addCriterion("PROJECTTYPE is not null");
			return this;
		}

		public Criteria andProjecttypeEqualTo(Long value) {
			addCriterion("PROJECTTYPE =", value, "projecttype");
			return this;
		}

		public Criteria andProjecttypeNotEqualTo(Long value) {
			addCriterion("PROJECTTYPE <>", value, "projecttype");
			return this;
		}

		public Criteria andProjecttypeGreaterThan(Long value) {
			addCriterion("PROJECTTYPE >", value, "projecttype");
			return this;
		}

		public Criteria andProjecttypeGreaterThanOrEqualTo(Long value) {
			addCriterion("PROJECTTYPE >=", value, "projecttype");
			return this;
		}

		public Criteria andProjecttypeLessThan(Long value) {
			addCriterion("PROJECTTYPE <", value, "projecttype");
			return this;
		}

		public Criteria andProjecttypeLessThanOrEqualTo(Long value) {
			addCriterion("PROJECTTYPE <=", value, "projecttype");
			return this;
		}

		public Criteria andProjecttypeIn(List<Long> values) {
			addCriterion("PROJECTTYPE in", values, "projecttype");
			return this;
		}

		public Criteria andProjecttypeNotIn(List<Long> values) {
			addCriterion("PROJECTTYPE not in", values, "projecttype");
			return this;
		}

		public Criteria andProjecttypeBetween(Long value1, Long value2) {
			addCriterion("PROJECTTYPE between", value1, value2, "projecttype");
			return this;
		}

		public Criteria andProjecttypeNotBetween(Long value1, Long value2) {
			addCriterion("PROJECTTYPE not between", value1, value2,
					"projecttype");
			return this;
		}
	}
}