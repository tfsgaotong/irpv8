package com.tfs.irp.question.dao;

import com.tfs.irp.question.entity.IrpQuestion;
import com.tfs.irp.question.entity.IrpQuestionExample;
import com.tfs.irp.user.entity.IrpUser;
import com.tfs.irp.user.entity.IrpUserExample;
import com.tfs.irp.util.PageUtil;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

public interface IrpQuestionDAO {
    /**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 17:32:54 CST 2014
	 */
	int countByExample(IrpQuestionExample example) throws SQLException;
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 17:32:54 CST 2014
	 */
	int deleteByExample(IrpQuestionExample example) throws SQLException;
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 17:32:54 CST 2014
	 */
	int deleteByPrimaryKey(Long questionid) throws SQLException;
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 17:32:54 CST 2014
	 */
	void insert(IrpQuestion record) throws SQLException;
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 17:32:54 CST 2014
	 */
	void insertSelective(IrpQuestion record) throws SQLException;
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 17:32:54 CST 2014
	 */
	List<IrpQuestion> selectByExample(IrpQuestionExample example)
			throws SQLException;
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 17:32:54 CST 2014
	 */
	IrpQuestion selectByPrimaryKey(Long questionid) throws SQLException;
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 17:32:54 CST 2014
	 */
	int updateByExampleSelective(IrpQuestion record, IrpQuestionExample example)
			throws SQLException;
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 17:32:54 CST 2014
	 */
	int updateByExample(IrpQuestion record, IrpQuestionExample example)
			throws SQLException;
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 17:32:54 CST 2014
	 */
	int updateByPrimaryKeySelective(IrpQuestion record) throws SQLException;
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 17:32:54 CST 2014
	 */
	int updateByPrimaryKey(IrpQuestion record) throws SQLException;
	List<IrpQuestion> selectByExample(IrpQuestionExample example,
			PageUtil pageUtil) throws SQLException;
	/**
	 * ÊàëÂõûÁ≠îÁöÑ
	 * @param map
	 * @return
	 * @throws SQLException
	 */
	public List<IrpQuestion> findQuestionsOfMeAnswer(Map<String, Object> map) throws SQLException ;
	/**
	 * Ëé∑ÂæóÂâç‰∏âÊù°‰∏ìÂÆ∂Á≠îÊ°?
	 * @return
	 */
	public List<IrpQuestion> findExpertAnswerThree(Map<String, Object> map) throws Exception;
	/**
	 * ÊàëÂõûÁ≠îÁöÑÈóÆÈ¢òÊÄªÊï∞
	 * @return
	 */
	int countQuestionsOfMeAnswer(Map<String, Object> _mParam) throws Exception;

	List<IrpQuestion> findQuestionsOfMeAnswer(Map<String, Object> map,
			PageUtil pageUtil) throws SQLException;
	
	/**
	 * ÈóÆÁ≠îËææ‰∫∫
	 * @return
	 */
	List findIntelligentUser()throws Exception;
	/**
	 * Ê†πÊçÆÊù°‰ª∂Êü•ËØ¢
	 * @param map
	 * @param pageUtil
	 * @return
	 */
	public List<IrpQuestion> findQuestionbyexcel(Map<String, Object> map,PageUtil pageUtil);
	/**
	 * Ê†πÊçÆÊù°‰ª∂Êü•ËØ¢ Êï∞Èáè
	 * @param map
	 * @return
	 */
	public int findQuestionbyexcelcount(Map<String, Object> map);
}