package com.tfs.irp.question.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class IrpQuestionExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 15:54:06 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 15:54:06 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 15:54:06 CST 2014
	 */
	public IrpQuestionExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 15:54:06 CST 2014
	 */
	protected IrpQuestionExample(IrpQuestionExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 15:54:06 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 15:54:06 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 15:54:06 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 15:54:06 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 15:54:06 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 15:54:06 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 15:54:06 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_QUESTION
	 * @ibatorgenerated  Tue May 06 15:54:06 CST 2014
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andQuestionidIsNull() {
			addCriterion("QUESTIONID is null");
			return this;
		}

		public Criteria andQuestionidIsNotNull() {
			addCriterion("QUESTIONID is not null");
			return this;
		}

		public Criteria andQuestionidEqualTo(Long value) {
			addCriterion("QUESTIONID =", value, "questionid");
			return this;
		}

		public Criteria andQuestionidNotEqualTo(Long value) {
			addCriterion("QUESTIONID <>", value, "questionid");
			return this;
		}

		public Criteria andQuestionidGreaterThan(Long value) {
			addCriterion("QUESTIONID >", value, "questionid");
			return this;
		}

		public Criteria andQuestionidGreaterThanOrEqualTo(Long value) {
			addCriterion("QUESTIONID >=", value, "questionid");
			return this;
		}

		public Criteria andQuestionidLessThan(Long value) {
			addCriterion("QUESTIONID <", value, "questionid");
			return this;
		}

		public Criteria andQuestionidLessThanOrEqualTo(Long value) {
			addCriterion("QUESTIONID <=", value, "questionid");
			return this;
		}

		public Criteria andQuestionidIn(List<Long> values) {
			addCriterion("QUESTIONID in", values, "questionid");
			return this;
		}

		public Criteria andQuestionidNotIn(List<Long> values) {
			addCriterion("QUESTIONID not in", values, "questionid");
			return this;
		}

		public Criteria andQuestionidBetween(Long value1, Long value2) {
			addCriterion("QUESTIONID between", value1, value2, "questionid");
			return this;
		}

		public Criteria andQuestionidNotBetween(Long value1, Long value2) {
			addCriterion("QUESTIONID not between", value1, value2, "questionid");
			return this;
		}

		public Criteria andTitleIsNull() {
			addCriterion("TITLE is null");
			return this;
		}

		public Criteria andTitleIsNotNull() {
			addCriterion("TITLE is not null");
			return this;
		}

		public Criteria andTitleEqualTo(String value) {
			addCriterion("TITLE =", value, "title");
			return this;
		}

		public Criteria andTitleNotEqualTo(String value) {
			addCriterion("TITLE <>", value, "title");
			return this;
		}

		public Criteria andTitleGreaterThan(String value) {
			addCriterion("TITLE >", value, "title");
			return this;
		}

		public Criteria andTitleGreaterThanOrEqualTo(String value) {
			addCriterion("TITLE >=", value, "title");
			return this;
		}

		public Criteria andTitleLessThan(String value) {
			addCriterion("TITLE <", value, "title");
			return this;
		}

		public Criteria andTitleLessThanOrEqualTo(String value) {
			addCriterion("TITLE <=", value, "title");
			return this;
		}

		public Criteria andTitleLike(String value) {
			addCriterion("TITLE like", value, "title");
			return this;
		}

		public Criteria andTitleNotLike(String value) {
			addCriterion("TITLE not like", value, "title");
			return this;
		}

		public Criteria andTitleIn(List<String> values) {
			addCriterion("TITLE in", values, "title");
			return this;
		}

		public Criteria andTitleNotIn(List<String> values) {
			addCriterion("TITLE not in", values, "title");
			return this;
		}

		public Criteria andTitleBetween(String value1, String value2) {
			addCriterion("TITLE between", value1, value2, "title");
			return this;
		}

		public Criteria andTitleNotBetween(String value1, String value2) {
			addCriterion("TITLE not between", value1, value2, "title");
			return this;
		}

		public Criteria andHtmlcontentIsNull() {
			addCriterion("HTMLCONTENT is null");
			return this;
		}

		public Criteria andHtmlcontentIsNotNull() {
			addCriterion("HTMLCONTENT is not null");
			return this;
		}

		public Criteria andHtmlcontentEqualTo(String value) {
			addCriterion("HTMLCONTENT =", value, "htmlcontent");
			return this;
		}

		public Criteria andHtmlcontentNotEqualTo(String value) {
			addCriterion("HTMLCONTENT <>", value, "htmlcontent");
			return this;
		}

		public Criteria andHtmlcontentGreaterThan(String value) {
			addCriterion("HTMLCONTENT >", value, "htmlcontent");
			return this;
		}

		public Criteria andHtmlcontentGreaterThanOrEqualTo(String value) {
			addCriterion("HTMLCONTENT >=", value, "htmlcontent");
			return this;
		}

		public Criteria andHtmlcontentLessThan(String value) {
			addCriterion("HTMLCONTENT <", value, "htmlcontent");
			return this;
		}

		public Criteria andHtmlcontentLessThanOrEqualTo(String value) {
			addCriterion("HTMLCONTENT <=", value, "htmlcontent");
			return this;
		}

		public Criteria andHtmlcontentLike(String value) {
			addCriterion("HTMLCONTENT like", value, "htmlcontent");
			return this;
		}

		public Criteria andHtmlcontentNotLike(String value) {
			addCriterion("HTMLCONTENT not like", value, "htmlcontent");
			return this;
		}

		public Criteria andHtmlcontentIn(List<String> values) {
			addCriterion("HTMLCONTENT in", values, "htmlcontent");
			return this;
		}

		public Criteria andHtmlcontentNotIn(List<String> values) {
			addCriterion("HTMLCONTENT not in", values, "htmlcontent");
			return this;
		}

		public Criteria andHtmlcontentBetween(String value1, String value2) {
			addCriterion("HTMLCONTENT between", value1, value2, "htmlcontent");
			return this;
		}

		public Criteria andHtmlcontentNotBetween(String value1, String value2) {
			addCriterion("HTMLCONTENT not between", value1, value2,
					"htmlcontent");
			return this;
		}

		public Criteria andTextcontentIsNull() {
			addCriterion("TEXTCONTENT is null");
			return this;
		}

		public Criteria andTextcontentIsNotNull() {
			addCriterion("TEXTCONTENT is not null");
			return this;
		}

		public Criteria andTextcontentEqualTo(String value) {
			addCriterion("TEXTCONTENT =", value, "textcontent");
			return this;
		}

		public Criteria andTextcontentNotEqualTo(String value) {
			addCriterion("TEXTCONTENT <>", value, "textcontent");
			return this;
		}

		public Criteria andTextcontentGreaterThan(String value) {
			addCriterion("TEXTCONTENT >", value, "textcontent");
			return this;
		}

		public Criteria andTextcontentGreaterThanOrEqualTo(String value) {
			addCriterion("TEXTCONTENT >=", value, "textcontent");
			return this;
		}

		public Criteria andTextcontentLessThan(String value) {
			addCriterion("TEXTCONTENT <", value, "textcontent");
			return this;
		}

		public Criteria andTextcontentLessThanOrEqualTo(String value) {
			addCriterion("TEXTCONTENT <=", value, "textcontent");
			return this;
		}

		public Criteria andTextcontentLike(String value) {
			addCriterion("TEXTCONTENT like", value, "textcontent");
			return this;
		}

		public Criteria andTextcontentNotLike(String value) {
			addCriterion("TEXTCONTENT not like", value, "textcontent");
			return this;
		}

		public Criteria andTextcontentIn(List<String> values) {
			addCriterion("TEXTCONTENT in", values, "textcontent");
			return this;
		}

		public Criteria andTextcontentNotIn(List<String> values) {
			addCriterion("TEXTCONTENT not in", values, "textcontent");
			return this;
		}

		public Criteria andTextcontentBetween(String value1, String value2) {
			addCriterion("TEXTCONTENT between", value1, value2, "textcontent");
			return this;
		}

		public Criteria andTextcontentNotBetween(String value1, String value2) {
			addCriterion("TEXTCONTENT not between", value1, value2,
					"textcontent");
			return this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("STATUS is null");
			return this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("STATUS is not null");
			return this;
		}

		public Criteria andStatusEqualTo(Long value) {
			addCriterion("STATUS =", value, "status");
			return this;
		}

		public Criteria andStatusNotEqualTo(Long value) {
			addCriterion("STATUS <>", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThan(Long value) {
			addCriterion("STATUS >", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Long value) {
			addCriterion("STATUS >=", value, "status");
			return this;
		}

		public Criteria andStatusLessThan(Long value) {
			addCriterion("STATUS <", value, "status");
			return this;
		}

		public Criteria andStatusLessThanOrEqualTo(Long value) {
			addCriterion("STATUS <=", value, "status");
			return this;
		}

		public Criteria andStatusIn(List<Long> values) {
			addCriterion("STATUS in", values, "status");
			return this;
		}

		public Criteria andStatusNotIn(List<Long> values) {
			addCriterion("STATUS not in", values, "status");
			return this;
		}

		public Criteria andStatusBetween(Long value1, Long value2) {
			addCriterion("STATUS between", value1, value2, "status");
			return this;
		}

		public Criteria andStatusNotBetween(Long value1, Long value2) {
			addCriterion("STATUS not between", value1, value2, "status");
			return this;
		}

		public Criteria andRootidIsNull() {
			addCriterion("ROOTID is null");
			return this;
		}

		public Criteria andRootidIsNotNull() {
			addCriterion("ROOTID is not null");
			return this;
		}

		public Criteria andRootidEqualTo(Long value) {
			addCriterion("ROOTID =", value, "rootid");
			return this;
		}

		public Criteria andRootidNotEqualTo(Long value) {
			addCriterion("ROOTID <>", value, "rootid");
			return this;
		}

		public Criteria andRootidGreaterThan(Long value) {
			addCriterion("ROOTID >", value, "rootid");
			return this;
		}

		public Criteria andRootidGreaterThanOrEqualTo(Long value) {
			addCriterion("ROOTID >=", value, "rootid");
			return this;
		}

		public Criteria andRootidLessThan(Long value) {
			addCriterion("ROOTID <", value, "rootid");
			return this;
		}

		public Criteria andRootidLessThanOrEqualTo(Long value) {
			addCriterion("ROOTID <=", value, "rootid");
			return this;
		}

		public Criteria andRootidIn(List<Long> values) {
			addCriterion("ROOTID in", values, "rootid");
			return this;
		}

		public Criteria andRootidNotIn(List<Long> values) {
			addCriterion("ROOTID not in", values, "rootid");
			return this;
		}

		public Criteria andRootidBetween(Long value1, Long value2) {
			addCriterion("ROOTID between", value1, value2, "rootid");
			return this;
		}

		public Criteria andRootidNotBetween(Long value1, Long value2) {
			addCriterion("ROOTID not between", value1, value2, "rootid");
			return this;
		}

		public Criteria andParentidIsNull() {
			addCriterion("PARENTID is null");
			return this;
		}

		public Criteria andParentidIsNotNull() {
			addCriterion("PARENTID is not null");
			return this;
		}

		public Criteria andParentidEqualTo(Long value) {
			addCriterion("PARENTID =", value, "parentid");
			return this;
		}

		public Criteria andParentidNotEqualTo(Long value) {
			addCriterion("PARENTID <>", value, "parentid");
			return this;
		}

		public Criteria andParentidGreaterThan(Long value) {
			addCriterion("PARENTID >", value, "parentid");
			return this;
		}

		public Criteria andParentidGreaterThanOrEqualTo(Long value) {
			addCriterion("PARENTID >=", value, "parentid");
			return this;
		}

		public Criteria andParentidLessThan(Long value) {
			addCriterion("PARENTID <", value, "parentid");
			return this;
		}

		public Criteria andParentidLessThanOrEqualTo(Long value) {
			addCriterion("PARENTID <=", value, "parentid");
			return this;
		}

		public Criteria andParentidIn(List<Long> values) {
			addCriterion("PARENTID in", values, "parentid");
			return this;
		}

		public Criteria andParentidNotIn(List<Long> values) {
			addCriterion("PARENTID not in", values, "parentid");
			return this;
		}

		public Criteria andParentidBetween(Long value1, Long value2) {
			addCriterion("PARENTID between", value1, value2, "parentid");
			return this;
		}

		public Criteria andParentidNotBetween(Long value1, Long value2) {
			addCriterion("PARENTID not between", value1, value2, "parentid");
			return this;
		}

		public Criteria andBestansweridIsNull() {
			addCriterion("BESTANSWERID is null");
			return this;
		}

		public Criteria andBestansweridIsNotNull() {
			addCriterion("BESTANSWERID is not null");
			return this;
		}

		public Criteria andBestansweridEqualTo(Long value) {
			addCriterion("BESTANSWERID =", value, "bestanswerid");
			return this;
		}

		public Criteria andBestansweridNotEqualTo(Long value) {
			addCriterion("BESTANSWERID <>", value, "bestanswerid");
			return this;
		}

		public Criteria andBestansweridGreaterThan(Long value) {
			addCriterion("BESTANSWERID >", value, "bestanswerid");
			return this;
		}

		public Criteria andBestansweridGreaterThanOrEqualTo(Long value) {
			addCriterion("BESTANSWERID >=", value, "bestanswerid");
			return this;
		}

		public Criteria andBestansweridLessThan(Long value) {
			addCriterion("BESTANSWERID <", value, "bestanswerid");
			return this;
		}

		public Criteria andBestansweridLessThanOrEqualTo(Long value) {
			addCriterion("BESTANSWERID <=", value, "bestanswerid");
			return this;
		}

		public Criteria andBestansweridIn(List<Long> values) {
			addCriterion("BESTANSWERID in", values, "bestanswerid");
			return this;
		}

		public Criteria andBestansweridNotIn(List<Long> values) {
			addCriterion("BESTANSWERID not in", values, "bestanswerid");
			return this;
		}

		public Criteria andBestansweridBetween(Long value1, Long value2) {
			addCriterion("BESTANSWERID between", value1, value2, "bestanswerid");
			return this;
		}

		public Criteria andBestansweridNotBetween(Long value1, Long value2) {
			addCriterion("BESTANSWERID not between", value1, value2,
					"bestanswerid");
			return this;
		}

		public Criteria andIsbestanswerIsNull() {
			addCriterion("ISBESTANSWER is null");
			return this;
		}

		public Criteria andIsbestanswerIsNotNull() {
			addCriterion("ISBESTANSWER is not null");
			return this;
		}

		public Criteria andIsbestanswerEqualTo(Short value) {
			addCriterion("ISBESTANSWER =", value, "isbestanswer");
			return this;
		}

		public Criteria andIsbestanswerNotEqualTo(Short value) {
			addCriterion("ISBESTANSWER <>", value, "isbestanswer");
			return this;
		}

		public Criteria andIsbestanswerGreaterThan(Short value) {
			addCriterion("ISBESTANSWER >", value, "isbestanswer");
			return this;
		}

		public Criteria andIsbestanswerGreaterThanOrEqualTo(Short value) {
			addCriterion("ISBESTANSWER >=", value, "isbestanswer");
			return this;
		}

		public Criteria andIsbestanswerLessThan(Short value) {
			addCriterion("ISBESTANSWER <", value, "isbestanswer");
			return this;
		}

		public Criteria andIsbestanswerLessThanOrEqualTo(Short value) {
			addCriterion("ISBESTANSWER <=", value, "isbestanswer");
			return this;
		}

		public Criteria andIsbestanswerIn(List<Short> values) {
			addCriterion("ISBESTANSWER in", values, "isbestanswer");
			return this;
		}

		public Criteria andIsbestanswerNotIn(List<Short> values) {
			addCriterion("ISBESTANSWER not in", values, "isbestanswer");
			return this;
		}

		public Criteria andIsbestanswerBetween(Short value1, Short value2) {
			addCriterion("ISBESTANSWER between", value1, value2, "isbestanswer");
			return this;
		}

		public Criteria andIsbestanswerNotBetween(Short value1, Short value2) {
			addCriterion("ISBESTANSWER not between", value1, value2,
					"isbestanswer");
			return this;
		}

		public Criteria andExpertansweridIsNull() {
			addCriterion("EXPERTANSWERID is null");
			return this;
		}

		public Criteria andExpertansweridIsNotNull() {
			addCriterion("EXPERTANSWERID is not null");
			return this;
		}

		public Criteria andExpertansweridEqualTo(Long value) {
			addCriterion("EXPERTANSWERID =", value, "expertanswerid");
			return this;
		}

		public Criteria andExpertansweridNotEqualTo(Long value) {
			addCriterion("EXPERTANSWERID <>", value, "expertanswerid");
			return this;
		}

		public Criteria andExpertansweridGreaterThan(Long value) {
			addCriterion("EXPERTANSWERID >", value, "expertanswerid");
			return this;
		}

		public Criteria andExpertansweridGreaterThanOrEqualTo(Long value) {
			addCriterion("EXPERTANSWERID >=", value, "expertanswerid");
			return this;
		}

		public Criteria andExpertansweridLessThan(Long value) {
			addCriterion("EXPERTANSWERID <", value, "expertanswerid");
			return this;
		}

		public Criteria andExpertansweridLessThanOrEqualTo(Long value) {
			addCriterion("EXPERTANSWERID <=", value, "expertanswerid");
			return this;
		}

		public Criteria andExpertansweridIn(List<Long> values) {
			addCriterion("EXPERTANSWERID in", values, "expertanswerid");
			return this;
		}

		public Criteria andExpertansweridNotIn(List<Long> values) {
			addCriterion("EXPERTANSWERID not in", values, "expertanswerid");
			return this;
		}

		public Criteria andExpertansweridBetween(Long value1, Long value2) {
			addCriterion("EXPERTANSWERID between", value1, value2,
					"expertanswerid");
			return this;
		}

		public Criteria andExpertansweridNotBetween(Long value1, Long value2) {
			addCriterion("EXPERTANSWERID not between", value1, value2,
					"expertanswerid");
			return this;
		}

		public Criteria andIsexpertanswerIsNull() {
			addCriterion("ISEXPERTANSWER is null");
			return this;
		}

		public Criteria andIsexpertanswerIsNotNull() {
			addCriterion("ISEXPERTANSWER is not null");
			return this;
		}

		public Criteria andIsexpertanswerEqualTo(Short value) {
			addCriterion("ISEXPERTANSWER =", value, "isexpertanswer");
			return this;
		}

		public Criteria andIsexpertanswerNotEqualTo(Short value) {
			addCriterion("ISEXPERTANSWER <>", value, "isexpertanswer");
			return this;
		}

		public Criteria andIsexpertanswerGreaterThan(Short value) {
			addCriterion("ISEXPERTANSWER >", value, "isexpertanswer");
			return this;
		}

		public Criteria andIsexpertanswerGreaterThanOrEqualTo(Short value) {
			addCriterion("ISEXPERTANSWER >=", value, "isexpertanswer");
			return this;
		}

		public Criteria andIsexpertanswerLessThan(Short value) {
			addCriterion("ISEXPERTANSWER <", value, "isexpertanswer");
			return this;
		}

		public Criteria andIsexpertanswerLessThanOrEqualTo(Short value) {
			addCriterion("ISEXPERTANSWER <=", value, "isexpertanswer");
			return this;
		}

		public Criteria andIsexpertanswerIn(List<Short> values) {
			addCriterion("ISEXPERTANSWER in", values, "isexpertanswer");
			return this;
		}

		public Criteria andIsexpertanswerNotIn(List<Short> values) {
			addCriterion("ISEXPERTANSWER not in", values, "isexpertanswer");
			return this;
		}

		public Criteria andIsexpertanswerBetween(Short value1, Short value2) {
			addCriterion("ISEXPERTANSWER between", value1, value2,
					"isexpertanswer");
			return this;
		}

		public Criteria andIsexpertanswerNotBetween(Short value1, Short value2) {
			addCriterion("ISEXPERTANSWER not between", value1, value2,
					"isexpertanswer");
			return this;
		}

		public Criteria andReplycountIsNull() {
			addCriterion("REPLYCOUNT is null");
			return this;
		}

		public Criteria andReplycountIsNotNull() {
			addCriterion("REPLYCOUNT is not null");
			return this;
		}

		public Criteria andReplycountEqualTo(Long value) {
			addCriterion("REPLYCOUNT =", value, "replycount");
			return this;
		}

		public Criteria andReplycountNotEqualTo(Long value) {
			addCriterion("REPLYCOUNT <>", value, "replycount");
			return this;
		}

		public Criteria andReplycountGreaterThan(Long value) {
			addCriterion("REPLYCOUNT >", value, "replycount");
			return this;
		}

		public Criteria andReplycountGreaterThanOrEqualTo(Long value) {
			addCriterion("REPLYCOUNT >=", value, "replycount");
			return this;
		}

		public Criteria andReplycountLessThan(Long value) {
			addCriterion("REPLYCOUNT <", value, "replycount");
			return this;
		}

		public Criteria andReplycountLessThanOrEqualTo(Long value) {
			addCriterion("REPLYCOUNT <=", value, "replycount");
			return this;
		}

		public Criteria andReplycountIn(List<Long> values) {
			addCriterion("REPLYCOUNT in", values, "replycount");
			return this;
		}

		public Criteria andReplycountNotIn(List<Long> values) {
			addCriterion("REPLYCOUNT not in", values, "replycount");
			return this;
		}

		public Criteria andReplycountBetween(Long value1, Long value2) {
			addCriterion("REPLYCOUNT between", value1, value2, "replycount");
			return this;
		}

		public Criteria andReplycountNotBetween(Long value1, Long value2) {
			addCriterion("REPLYCOUNT not between", value1, value2, "replycount");
			return this;
		}

		public Criteria andBrowsecountIsNull() {
			addCriterion("BROWSECOUNT is null");
			return this;
		}

		public Criteria andBrowsecountIsNotNull() {
			addCriterion("BROWSECOUNT is not null");
			return this;
		}

		public Criteria andBrowsecountEqualTo(Long value) {
			addCriterion("BROWSECOUNT =", value, "browsecount");
			return this;
		}

		public Criteria andBrowsecountNotEqualTo(Long value) {
			addCriterion("BROWSECOUNT <>", value, "browsecount");
			return this;
		}

		public Criteria andBrowsecountGreaterThan(Long value) {
			addCriterion("BROWSECOUNT >", value, "browsecount");
			return this;
		}

		public Criteria andBrowsecountGreaterThanOrEqualTo(Long value) {
			addCriterion("BROWSECOUNT >=", value, "browsecount");
			return this;
		}

		public Criteria andBrowsecountLessThan(Long value) {
			addCriterion("BROWSECOUNT <", value, "browsecount");
			return this;
		}

		public Criteria andBrowsecountLessThanOrEqualTo(Long value) {
			addCriterion("BROWSECOUNT <=", value, "browsecount");
			return this;
		}

		public Criteria andBrowsecountIn(List<Long> values) {
			addCriterion("BROWSECOUNT in", values, "browsecount");
			return this;
		}

		public Criteria andBrowsecountNotIn(List<Long> values) {
			addCriterion("BROWSECOUNT not in", values, "browsecount");
			return this;
		}

		public Criteria andBrowsecountBetween(Long value1, Long value2) {
			addCriterion("BROWSECOUNT between", value1, value2, "browsecount");
			return this;
		}

		public Criteria andBrowsecountNotBetween(Long value1, Long value2) {
			addCriterion("BROWSECOUNT not between", value1, value2,
					"browsecount");
			return this;
		}

		public Criteria andGoodevaluatecountIsNull() {
			addCriterion("GOODEVALUATECOUNT is null");
			return this;
		}

		public Criteria andGoodevaluatecountIsNotNull() {
			addCriterion("GOODEVALUATECOUNT is not null");
			return this;
		}

		public Criteria andGoodevaluatecountEqualTo(Long value) {
			addCriterion("GOODEVALUATECOUNT =", value, "goodevaluatecount");
			return this;
		}

		public Criteria andGoodevaluatecountNotEqualTo(Long value) {
			addCriterion("GOODEVALUATECOUNT <>", value, "goodevaluatecount");
			return this;
		}

		public Criteria andGoodevaluatecountGreaterThan(Long value) {
			addCriterion("GOODEVALUATECOUNT >", value, "goodevaluatecount");
			return this;
		}

		public Criteria andGoodevaluatecountGreaterThanOrEqualTo(Long value) {
			addCriterion("GOODEVALUATECOUNT >=", value, "goodevaluatecount");
			return this;
		}

		public Criteria andGoodevaluatecountLessThan(Long value) {
			addCriterion("GOODEVALUATECOUNT <", value, "goodevaluatecount");
			return this;
		}

		public Criteria andGoodevaluatecountLessThanOrEqualTo(Long value) {
			addCriterion("GOODEVALUATECOUNT <=", value, "goodevaluatecount");
			return this;
		}

		public Criteria andGoodevaluatecountIn(List<Long> values) {
			addCriterion("GOODEVALUATECOUNT in", values, "goodevaluatecount");
			return this;
		}

		public Criteria andGoodevaluatecountNotIn(List<Long> values) {
			addCriterion("GOODEVALUATECOUNT not in", values,
					"goodevaluatecount");
			return this;
		}

		public Criteria andGoodevaluatecountBetween(Long value1, Long value2) {
			addCriterion("GOODEVALUATECOUNT between", value1, value2,
					"goodevaluatecount");
			return this;
		}

		public Criteria andGoodevaluatecountNotBetween(Long value1, Long value2) {
			addCriterion("GOODEVALUATECOUNT not between", value1, value2,
					"goodevaluatecount");
			return this;
		}

		public Criteria andBadevaluatecountIsNull() {
			addCriterion("BADEVALUATECOUNT is null");
			return this;
		}

		public Criteria andBadevaluatecountIsNotNull() {
			addCriterion("BADEVALUATECOUNT is not null");
			return this;
		}

		public Criteria andBadevaluatecountEqualTo(Long value) {
			addCriterion("BADEVALUATECOUNT =", value, "badevaluatecount");
			return this;
		}

		public Criteria andBadevaluatecountNotEqualTo(Long value) {
			addCriterion("BADEVALUATECOUNT <>", value, "badevaluatecount");
			return this;
		}

		public Criteria andBadevaluatecountGreaterThan(Long value) {
			addCriterion("BADEVALUATECOUNT >", value, "badevaluatecount");
			return this;
		}

		public Criteria andBadevaluatecountGreaterThanOrEqualTo(Long value) {
			addCriterion("BADEVALUATECOUNT >=", value, "badevaluatecount");
			return this;
		}

		public Criteria andBadevaluatecountLessThan(Long value) {
			addCriterion("BADEVALUATECOUNT <", value, "badevaluatecount");
			return this;
		}

		public Criteria andBadevaluatecountLessThanOrEqualTo(Long value) {
			addCriterion("BADEVALUATECOUNT <=", value, "badevaluatecount");
			return this;
		}

		public Criteria andBadevaluatecountIn(List<Long> values) {
			addCriterion("BADEVALUATECOUNT in", values, "badevaluatecount");
			return this;
		}

		public Criteria andBadevaluatecountNotIn(List<Long> values) {
			addCriterion("BADEVALUATECOUNT not in", values, "badevaluatecount");
			return this;
		}

		public Criteria andBadevaluatecountBetween(Long value1, Long value2) {
			addCriterion("BADEVALUATECOUNT between", value1, value2,
					"badevaluatecount");
			return this;
		}

		public Criteria andBadevaluatecountNotBetween(Long value1, Long value2) {
			addCriterion("BADEVALUATECOUNT not between", value1, value2,
					"badevaluatecount");
			return this;
		}

		public Criteria andDocidIsNull() {
			addCriterion("DOCID is null");
			return this;
		}

		public Criteria andDocidIsNotNull() {
			addCriterion("DOCID is not null");
			return this;
		}

		public Criteria andDocidEqualTo(Long value) {
			addCriterion("DOCID =", value, "docid");
			return this;
		}

		public Criteria andDocidNotEqualTo(Long value) {
			addCriterion("DOCID <>", value, "docid");
			return this;
		}

		public Criteria andDocidGreaterThan(Long value) {
			addCriterion("DOCID >", value, "docid");
			return this;
		}

		public Criteria andDocidGreaterThanOrEqualTo(Long value) {
			addCriterion("DOCID >=", value, "docid");
			return this;
		}

		public Criteria andDocidLessThan(Long value) {
			addCriterion("DOCID <", value, "docid");
			return this;
		}

		public Criteria andDocidLessThanOrEqualTo(Long value) {
			addCriterion("DOCID <=", value, "docid");
			return this;
		}

		public Criteria andDocidIn(List<Long> values) {
			addCriterion("DOCID in", values, "docid");
			return this;
		}

		public Criteria andDocidNotIn(List<Long> values) {
			addCriterion("DOCID not in", values, "docid");
			return this;
		}

		public Criteria andDocidBetween(Long value1, Long value2) {
			addCriterion("DOCID between", value1, value2, "docid");
			return this;
		}

		public Criteria andDocidNotBetween(Long value1, Long value2) {
			addCriterion("DOCID not between", value1, value2, "docid");
			return this;
		}

		public Criteria andCruseridIsNull() {
			addCriterion("CRUSERID is null");
			return this;
		}

		public Criteria andCruseridIsNotNull() {
			addCriterion("CRUSERID is not null");
			return this;
		}

		public Criteria andCruseridEqualTo(Long value) {
			addCriterion("CRUSERID =", value, "cruserid");
			return this;
		}

		public Criteria andCruseridNotEqualTo(Long value) {
			addCriterion("CRUSERID <>", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThan(Long value) {
			addCriterion("CRUSERID >", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThanOrEqualTo(Long value) {
			addCriterion("CRUSERID >=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThan(Long value) {
			addCriterion("CRUSERID <", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThanOrEqualTo(Long value) {
			addCriterion("CRUSERID <=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridIn(List<Long> values) {
			addCriterion("CRUSERID in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridNotIn(List<Long> values) {
			addCriterion("CRUSERID not in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridBetween(Long value1, Long value2) {
			addCriterion("CRUSERID between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCruseridNotBetween(Long value1, Long value2) {
			addCriterion("CRUSERID not between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCruserIsNull() {
			addCriterion("CRUSER is null");
			return this;
		}

		public Criteria andCruserIsNotNull() {
			addCriterion("CRUSER is not null");
			return this;
		}

		public Criteria andCruserEqualTo(String value) {
			addCriterion("CRUSER =", value, "cruser");
			return this;
		}

		public Criteria andCruserNotEqualTo(String value) {
			addCriterion("CRUSER <>", value, "cruser");
			return this;
		}

		public Criteria andCruserGreaterThan(String value) {
			addCriterion("CRUSER >", value, "cruser");
			return this;
		}

		public Criteria andCruserGreaterThanOrEqualTo(String value) {
			addCriterion("CRUSER >=", value, "cruser");
			return this;
		}

		public Criteria andCruserLessThan(String value) {
			addCriterion("CRUSER <", value, "cruser");
			return this;
		}

		public Criteria andCruserLessThanOrEqualTo(String value) {
			addCriterion("CRUSER <=", value, "cruser");
			return this;
		}

		public Criteria andCruserLike(String value) {
			addCriterion("CRUSER like", value, "cruser");
			return this;
		}

		public Criteria andCruserNotLike(String value) {
			addCriterion("CRUSER not like", value, "cruser");
			return this;
		}

		public Criteria andCruserIn(List<String> values) {
			addCriterion("CRUSER in", values, "cruser");
			return this;
		}

		public Criteria andCruserNotIn(List<String> values) {
			addCriterion("CRUSER not in", values, "cruser");
			return this;
		}

		public Criteria andCruserBetween(String value1, String value2) {
			addCriterion("CRUSER between", value1, value2, "cruser");
			return this;
		}

		public Criteria andCruserNotBetween(String value1, String value2) {
			addCriterion("CRUSER not between", value1, value2, "cruser");
			return this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME =", value, "crtime");
			return this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <>", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterionForJDBCDate("CRTIME >", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME >=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterionForJDBCDate("CRTIME <", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME not in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME not between", value1, value2,
					"crtime");
			return this;
		}

		public Criteria andReplyquestionidIsNull() {
			addCriterion("REPLYQUESTIONID is null");
			return this;
		}

		public Criteria andReplyquestionidIsNotNull() {
			addCriterion("REPLYQUESTIONID is not null");
			return this;
		}

		public Criteria andReplyquestionidEqualTo(Long value) {
			addCriterion("REPLYQUESTIONID =", value, "replyquestionid");
			return this;
		}

		public Criteria andReplyquestionidNotEqualTo(Long value) {
			addCriterion("REPLYQUESTIONID <>", value, "replyquestionid");
			return this;
		}

		public Criteria andReplyquestionidGreaterThan(Long value) {
			addCriterion("REPLYQUESTIONID >", value, "replyquestionid");
			return this;
		}

		public Criteria andReplyquestionidGreaterThanOrEqualTo(Long value) {
			addCriterion("REPLYQUESTIONID >=", value, "replyquestionid");
			return this;
		}

		public Criteria andReplyquestionidLessThan(Long value) {
			addCriterion("REPLYQUESTIONID <", value, "replyquestionid");
			return this;
		}

		public Criteria andReplyquestionidLessThanOrEqualTo(Long value) {
			addCriterion("REPLYQUESTIONID <=", value, "replyquestionid");
			return this;
		}

		public Criteria andReplyquestionidIn(List<Long> values) {
			addCriterion("REPLYQUESTIONID in", values, "replyquestionid");
			return this;
		}

		public Criteria andReplyquestionidNotIn(List<Long> values) {
			addCriterion("REPLYQUESTIONID not in", values, "replyquestionid");
			return this;
		}

		public Criteria andReplyquestionidBetween(Long value1, Long value2) {
			addCriterion("REPLYQUESTIONID between", value1, value2,
					"replyquestionid");
			return this;
		}

		public Criteria andReplyquestionidNotBetween(Long value1, Long value2) {
			addCriterion("REPLYQUESTIONID not between", value1, value2,
					"replyquestionid");
			return this;
		}
	}
}