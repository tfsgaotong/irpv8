package com.tfs.irp.right.dao.impl;

import com.tfs.irp.right.dao.IrpRightDAO;
import com.tfs.irp.right.entity.IrpRight;
import com.tfs.irp.right.entity.IrpRightExample;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class IrpRightDAOImpl extends SqlMapClientDaoSupport implements IrpRightDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_RIGHT
     *
     * @ibatorgenerated Tue Mar 19 17:27:19 CST 2013
     */
    public int countByExample(IrpRightExample example) throws SQLException {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("IRP_RIGHT.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_RIGHT
     *
     * @ibatorgenerated Tue Mar 19 17:27:19 CST 2013
     */
    public int deleteByExample(IrpRightExample example) throws SQLException {
        int rows = getSqlMapClientTemplate().delete("IRP_RIGHT.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_RIGHT
     *
     * @ibatorgenerated Tue Mar 19 17:27:19 CST 2013
     */
    public int deleteByPrimaryKey(Long rightid) throws SQLException {
        IrpRight key = new IrpRight();
        key.setRightid(rightid);
        int rows = getSqlMapClientTemplate().delete("IRP_RIGHT.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_RIGHT
     *
     * @ibatorgenerated Tue Mar 19 17:27:19 CST 2013
     */
    public void insert(IrpRight record) throws SQLException {
        getSqlMapClientTemplate().insert("IRP_RIGHT.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_RIGHT
     *
     * @ibatorgenerated Tue Mar 19 17:27:19 CST 2013
     */
    public void insertSelective(IrpRight record) throws SQLException {
        getSqlMapClientTemplate().insert("IRP_RIGHT.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_RIGHT
     *
     * @ibatorgenerated Tue Mar 19 17:27:19 CST 2013
     */
    @SuppressWarnings("unchecked")
    public List<IrpRight> selectByExample(IrpRightExample example) throws SQLException {
        List<IrpRight> list = getSqlMapClientTemplate().queryForList("IRP_RIGHT.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_RIGHT
     *
     * @ibatorgenerated Tue Mar 19 17:27:19 CST 2013
     */
    public IrpRight selectByPrimaryKey(Long rightid) throws SQLException {
        IrpRight key = new IrpRight();
        key.setRightid(rightid);
        IrpRight record = (IrpRight) getSqlMapClientTemplate().queryForObject("IRP_RIGHT.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_RIGHT
     *
     * @ibatorgenerated Tue Mar 19 17:27:19 CST 2013
     */
    public int updateByExampleSelective(IrpRight record, IrpRightExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("IRP_RIGHT.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_RIGHT
     *
     * @ibatorgenerated Tue Mar 19 17:27:19 CST 2013
     */
    public int updateByExample(IrpRight record, IrpRightExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("IRP_RIGHT.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_RIGHT
     *
     * @ibatorgenerated Tue Mar 19 17:27:19 CST 2013
     */
    public int updateByPrimaryKeySelective(IrpRight record) throws SQLException {
        int rows = getSqlMapClientTemplate().update("IRP_RIGHT.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_RIGHT
     *
     * @ibatorgenerated Tue Mar 19 17:27:19 CST 2013
     */
    public int updateByPrimaryKey(IrpRight record) throws SQLException {
        int rows = getSqlMapClientTemplate().update("IRP_RIGHT.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
    
    @SuppressWarnings("unchecked")
	public List<Map<String, Object>> findObjRowRight(Map<String, Object> _parameter) throws SQLException {
		return getSqlMapClientTemplate().queryForList("IRP_RIGHT.findObjRowRight", _parameter);
	}

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_RIGHT
     *
     * @ibatorgenerated Tue Mar 19 17:27:19 CST 2013
     */
    private static class UpdateByExampleParms extends IrpRightExample {
        private Object record;

        public UpdateByExampleParms(Object record, IrpRightExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
    
}