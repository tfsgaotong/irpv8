package com.tfs.irp.role.dao.impl;

import com.tfs.irp.role.dao.IrpRoleDAO;
import com.tfs.irp.role.entity.IrpRole;
import com.tfs.irp.role.entity.IrpRoleExample;
import com.tfs.irp.user.entity.IrpUser;
import com.tfs.irp.util.PageUtil;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class IrpRoleDAOImpl extends SqlMapClientDaoSupport implements IrpRoleDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_ROLE
     *
     * @ibatorgenerated Wed Mar 13 10:43:44 CST 2013
     */
    public int countByExample(IrpRoleExample example) throws SQLException {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("IRP_ROLE.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_ROLE
     *
     * @ibatorgenerated Wed Mar 13 10:43:44 CST 2013
     */
    public int deleteByExample(IrpRoleExample example) throws SQLException {
        int rows = getSqlMapClientTemplate().delete("IRP_ROLE.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_ROLE
     *
     * @ibatorgenerated Wed Mar 13 10:43:44 CST 2013
     */
    public int deleteByPrimaryKey(Long roleid) throws SQLException {
        IrpRole key = new IrpRole();
        key.setRoleid(roleid);
        int rows = getSqlMapClientTemplate().delete("IRP_ROLE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_ROLE
     *
     * @ibatorgenerated Wed Mar 13 10:43:44 CST 2013
     */
    public void insert(IrpRole record) throws SQLException {
        getSqlMapClientTemplate().insert("IRP_ROLE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_ROLE
     *
     * @ibatorgenerated Wed Mar 13 10:43:44 CST 2013
     */
    public void insertSelective(IrpRole record) throws SQLException {
        getSqlMapClientTemplate().insert("IRP_ROLE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_ROLE
     *
     * @ibatorgenerated Wed Mar 13 10:43:44 CST 2013
     */
    @SuppressWarnings("unchecked")
    public List<IrpRole> selectByExample(IrpRoleExample example) throws SQLException {
        List<IrpRole> list = getSqlMapClientTemplate().queryForList("IRP_ROLE.ibatorgenerated_selectByExample", example);
        return list;
    }
    @SuppressWarnings("unchecked")
    public List<IrpRole> selectByExample(IrpRoleExample example, PageUtil pageUtil) throws SQLException {
        List<IrpRole> list = getSqlMapClientTemplate().queryForList("IRP_ROLE.ibatorgenerated_selectByExample", example, pageUtil.getPageIndex(), pageUtil.getPageSize());
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_ROLE
     *
     * @ibatorgenerated Wed Mar 13 10:43:44 CST 2013
     */
    public IrpRole selectByPrimaryKey(Long roleid) throws SQLException {
        IrpRole key = new IrpRole();
        key.setRoleid(roleid);
        IrpRole record = (IrpRole) getSqlMapClientTemplate().queryForObject("IRP_ROLE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_ROLE
     *
     * @ibatorgenerated Wed Mar 13 10:43:44 CST 2013
     */
    public int updateByExampleSelective(IrpRole record, IrpRoleExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("IRP_ROLE.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_ROLE
     *
     * @ibatorgenerated Wed Mar 13 10:43:44 CST 2013
     */
    public int updateByExample(IrpRole record, IrpRoleExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("IRP_ROLE.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_ROLE
     *
     * @ibatorgenerated Wed Mar 13 10:43:44 CST 2013
     */
    public int updateByPrimaryKeySelective(IrpRole record) throws SQLException {
        int rows = getSqlMapClientTemplate().update("IRP_ROLE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_ROLE
     *
     * @ibatorgenerated Wed Mar 13 10:43:44 CST 2013
     */
    public int updateByPrimaryKey(IrpRole record) throws SQLException {
        int rows = getSqlMapClientTemplate().update("IRP_ROLE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_ROLE
     *
     * @ibatorgenerated Wed Mar 13 10:43:44 CST 2013
     */
    private static class UpdateByExampleParms extends IrpRoleExample {
        private Object record;

        public UpdateByExampleParms(Object record, IrpRoleExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
    
    @Override
    @SuppressWarnings("unchecked")
	public List<IrpUser> findUsersOfPageByRoleId(Map<String, Object> _mParam, PageUtil pageUtil) throws SQLException {
		List<IrpUser> users = getSqlMapClientTemplate().queryForList("IRP_USER.findUsersByRoleId", _mParam, pageUtil.getPageIndex(), pageUtil.getPageSize());
		return users;
	}
    @Override
    @SuppressWarnings("unchecked")
	public List<IrpUser> findUsersOfPageByRoleId(Map<String, Object> _mParam) throws SQLException {
		List<IrpUser> users = getSqlMapClientTemplate().queryForList("IRP_USER.findUsersByRoleId", _mParam);
		return users;
	}
    
    @Override
    public int findUsersCountByRoleId(Map<String, Object> _mParam) throws SQLException {
    	Integer count = (Integer) getSqlMapClientTemplate().queryForObject("IRP_USER.findUsersCountByRoleId", _mParam);
		return count;
	}
    @Override
    public int findExpertCountByRoleId(Map<String, Object> _mParam) throws SQLException {
    	Integer count = (Integer) getSqlMapClientTemplate().queryForObject("IRP_USER.findExpertCountByRoleId", _mParam);
		return count;
	}
	@Override
	public List<IrpUser> findUsersOfpageByRoleIdAndName(
			Map<String, Object> _mParam, PageUtil pageUtil) throws SQLException {
		List<IrpUser> users = getSqlMapClientTemplate().queryForList("IRP_USER.findUsersByRoleIdAndName", _mParam);
		return users;
	}
}