package com.tfs.irp.role.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class IrpRoleExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_ROLE
	 * @ibatorgenerated  Wed Mar 13 10:43:44 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_ROLE
	 * @ibatorgenerated  Wed Mar 13 10:43:44 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ROLE
	 * @ibatorgenerated  Wed Mar 13 10:43:44 CST 2013
	 */
	public IrpRoleExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ROLE
	 * @ibatorgenerated  Wed Mar 13 10:43:44 CST 2013
	 */
	protected IrpRoleExample(IrpRoleExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ROLE
	 * @ibatorgenerated  Wed Mar 13 10:43:44 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ROLE
	 * @ibatorgenerated  Wed Mar 13 10:43:44 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ROLE
	 * @ibatorgenerated  Wed Mar 13 10:43:44 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ROLE
	 * @ibatorgenerated  Wed Mar 13 10:43:44 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ROLE
	 * @ibatorgenerated  Wed Mar 13 10:43:44 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ROLE
	 * @ibatorgenerated  Wed Mar 13 10:43:44 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_ROLE
	 * @ibatorgenerated  Wed Mar 13 10:43:44 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_ROLE
	 * @ibatorgenerated  Wed Mar 13 10:43:44 CST 2013
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andRoleidIsNull() {
			addCriterion("ROLEID is null");
			return this;
		}

		public Criteria andRoleidIsNotNull() {
			addCriterion("ROLEID is not null");
			return this;
		}

		public Criteria andRoleidEqualTo(Long value) {
			addCriterion("ROLEID =", value, "roleid");
			return this;
		}

		public Criteria andRoleidNotEqualTo(Long value) {
			addCriterion("ROLEID <>", value, "roleid");
			return this;
		}

		public Criteria andRoleidGreaterThan(Long value) {
			addCriterion("ROLEID >", value, "roleid");
			return this;
		}

		public Criteria andRoleidGreaterThanOrEqualTo(Long value) {
			addCriterion("ROLEID >=", value, "roleid");
			return this;
		}

		public Criteria andRoleidLessThan(Long value) {
			addCriterion("ROLEID <", value, "roleid");
			return this;
		}

		public Criteria andRoleidLessThanOrEqualTo(Long value) {
			addCriterion("ROLEID <=", value, "roleid");
			return this;
		}

		public Criteria andRoleidIn(List<Long> values) {
			addCriterion("ROLEID in", values, "roleid");
			return this;
		}

		public Criteria andRoleidNotIn(List<Long> values) {
			addCriterion("ROLEID not in", values, "roleid");
			return this;
		}

		public Criteria andRoleidBetween(Long value1, Long value2) {
			addCriterion("ROLEID between", value1, value2, "roleid");
			return this;
		}

		public Criteria andRoleidNotBetween(Long value1, Long value2) {
			addCriterion("ROLEID not between", value1, value2, "roleid");
			return this;
		}

		public Criteria andRolenameIsNull() {
			addCriterion("ROLENAME is null");
			return this;
		}

		public Criteria andRolenameIsNotNull() {
			addCriterion("ROLENAME is not null");
			return this;
		}

		public Criteria andRolenameEqualTo(String value) {
			addCriterion("ROLENAME =", value, "rolename");
			return this;
		}

		public Criteria andRolenameNotEqualTo(String value) {
			addCriterion("ROLENAME <>", value, "rolename");
			return this;
		}

		public Criteria andRolenameGreaterThan(String value) {
			addCriterion("ROLENAME >", value, "rolename");
			return this;
		}

		public Criteria andRolenameGreaterThanOrEqualTo(String value) {
			addCriterion("ROLENAME >=", value, "rolename");
			return this;
		}

		public Criteria andRolenameLessThan(String value) {
			addCriterion("ROLENAME <", value, "rolename");
			return this;
		}

		public Criteria andRolenameLessThanOrEqualTo(String value) {
			addCriterion("ROLENAME <=", value, "rolename");
			return this;
		}

		public Criteria andRolenameLike(String value) {
			addCriterion("ROLENAME like", value, "rolename");
			return this;
		}

		public Criteria andRolenameNotLike(String value) {
			addCriterion("ROLENAME not like", value, "rolename");
			return this;
		}

		public Criteria andRolenameIn(List<String> values) {
			addCriterion("ROLENAME in", values, "rolename");
			return this;
		}

		public Criteria andRolenameNotIn(List<String> values) {
			addCriterion("ROLENAME not in", values, "rolename");
			return this;
		}

		public Criteria andRolenameBetween(String value1, String value2) {
			addCriterion("ROLENAME between", value1, value2, "rolename");
			return this;
		}

		public Criteria andRolenameNotBetween(String value1, String value2) {
			addCriterion("ROLENAME not between", value1, value2, "rolename");
			return this;
		}

		public Criteria andRoledescIsNull() {
			addCriterion("ROLEDESC is null");
			return this;
		}

		public Criteria andRoledescIsNotNull() {
			addCriterion("ROLEDESC is not null");
			return this;
		}

		public Criteria andRoledescEqualTo(String value) {
			addCriterion("ROLEDESC =", value, "roledesc");
			return this;
		}

		public Criteria andRoledescNotEqualTo(String value) {
			addCriterion("ROLEDESC <>", value, "roledesc");
			return this;
		}

		public Criteria andRoledescGreaterThan(String value) {
			addCriterion("ROLEDESC >", value, "roledesc");
			return this;
		}

		public Criteria andRoledescGreaterThanOrEqualTo(String value) {
			addCriterion("ROLEDESC >=", value, "roledesc");
			return this;
		}

		public Criteria andRoledescLessThan(String value) {
			addCriterion("ROLEDESC <", value, "roledesc");
			return this;
		}

		public Criteria andRoledescLessThanOrEqualTo(String value) {
			addCriterion("ROLEDESC <=", value, "roledesc");
			return this;
		}

		public Criteria andRoledescLike(String value) {
			addCriterion("ROLEDESC like", value, "roledesc");
			return this;
		}

		public Criteria andRoledescNotLike(String value) {
			addCriterion("ROLEDESC not like", value, "roledesc");
			return this;
		}

		public Criteria andRoledescIn(List<String> values) {
			addCriterion("ROLEDESC in", values, "roledesc");
			return this;
		}

		public Criteria andRoledescNotIn(List<String> values) {
			addCriterion("ROLEDESC not in", values, "roledesc");
			return this;
		}

		public Criteria andRoledescBetween(String value1, String value2) {
			addCriterion("ROLEDESC between", value1, value2, "roledesc");
			return this;
		}

		public Criteria andRoledescNotBetween(String value1, String value2) {
			addCriterion("ROLEDESC not between", value1, value2, "roledesc");
			return this;
		}

		public Criteria andCruseridIsNull() {
			addCriterion("CRUSERID is null");
			return this;
		}

		public Criteria andCruseridIsNotNull() {
			addCriterion("CRUSERID is not null");
			return this;
		}

		public Criteria andCruseridEqualTo(Long value) {
			addCriterion("CRUSERID =", value, "cruserid");
			return this;
		}

		public Criteria andCruseridNotEqualTo(Long value) {
			addCriterion("CRUSERID <>", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThan(Long value) {
			addCriterion("CRUSERID >", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThanOrEqualTo(Long value) {
			addCriterion("CRUSERID >=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThan(Long value) {
			addCriterion("CRUSERID <", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThanOrEqualTo(Long value) {
			addCriterion("CRUSERID <=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridIn(List<Long> values) {
			addCriterion("CRUSERID in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridNotIn(List<Long> values) {
			addCriterion("CRUSERID not in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridBetween(Long value1, Long value2) {
			addCriterion("CRUSERID between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCruseridNotBetween(Long value1, Long value2) {
			addCriterion("CRUSERID not between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME =", value, "crtime");
			return this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <>", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterionForJDBCDate("CRTIME >", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME >=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterionForJDBCDate("CRTIME <", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME not in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME not between", value1, value2,
					"crtime");
			return this;
		}

		public Criteria andRoletypeIsNull() {
			addCriterion("ROLETYPE is null");
			return this;
		}

		public Criteria andRoletypeIsNotNull() {
			addCriterion("ROLETYPE is not null");
			return this;
		}

		public Criteria andRoletypeEqualTo(Long value) {
			addCriterion("ROLETYPE =", value, "roletype");
			return this;
		}

		public Criteria andRoletypeNotEqualTo(Long value) {
			addCriterion("ROLETYPE <>", value, "roletype");
			return this;
		}

		public Criteria andRoletypeGreaterThan(Long value) {
			addCriterion("ROLETYPE >", value, "roletype");
			return this;
		}

		public Criteria andRoletypeGreaterThanOrEqualTo(Long value) {
			addCriterion("ROLETYPE >=", value, "roletype");
			return this;
		}

		public Criteria andRoletypeLessThan(Long value) {
			addCriterion("ROLETYPE <", value, "roletype");
			return this;
		}

		public Criteria andRoletypeLessThanOrEqualTo(Long value) {
			addCriterion("ROLETYPE <=", value, "roletype");
			return this;
		}

		public Criteria andRoletypeIn(List<Long> values) {
			addCriterion("ROLETYPE in", values, "roletype");
			return this;
		}

		public Criteria andRoletypeNotIn(List<Long> values) {
			addCriterion("ROLETYPE not in", values, "roletype");
			return this;
		}

		public Criteria andRoletypeBetween(Long value1, Long value2) {
			addCriterion("ROLETYPE between", value1, value2, "roletype");
			return this;
		}

		public Criteria andRoletypeNotBetween(Long value1, Long value2) {
			addCriterion("ROLETYPE not between", value1, value2, "roletype");
			return this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("STATUS is null");
			return this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("STATUS is not null");
			return this;
		}

		public Criteria andStatusEqualTo(Short value) {
			addCriterion("STATUS =", value, "status");
			return this;
		}

		public Criteria andStatusNotEqualTo(Short value) {
			addCriterion("STATUS <>", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThan(Short value) {
			addCriterion("STATUS >", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Short value) {
			addCriterion("STATUS >=", value, "status");
			return this;
		}

		public Criteria andStatusLessThan(Short value) {
			addCriterion("STATUS <", value, "status");
			return this;
		}

		public Criteria andStatusLessThanOrEqualTo(Short value) {
			addCriterion("STATUS <=", value, "status");
			return this;
		}

		public Criteria andStatusIn(List<Short> values) {
			addCriterion("STATUS in", values, "status");
			return this;
		}

		public Criteria andStatusNotIn(List<Short> values) {
			addCriterion("STATUS not in", values, "status");
			return this;
		}

		public Criteria andStatusBetween(Short value1, Short value2) {
			addCriterion("STATUS between", value1, value2, "status");
			return this;
		}

		public Criteria andStatusNotBetween(Short value1, Short value2) {
			addCriterion("STATUS not between", value1, value2, "status");
			return this;
		}

		public Criteria andSynsrcidIsNull() {
			addCriterion("SYNSRCID is null");
			return this;
		}

		public Criteria andSynsrcidIsNotNull() {
			addCriterion("SYNSRCID is not null");
			return this;
		}

		public Criteria andSynsrcidEqualTo(String value) {
			addCriterion("SYNSRCID =", value, "synsrcid");
			return this;
		}

		public Criteria andSynsrcidNotEqualTo(String value) {
			addCriterion("SYNSRCID <>", value, "synsrcid");
			return this;
		}

		public Criteria andSynsrcidGreaterThan(String value) {
			addCriterion("SYNSRCID >", value, "synsrcid");
			return this;
		}

		public Criteria andSynsrcidGreaterThanOrEqualTo(String value) {
			addCriterion("SYNSRCID >=", value, "synsrcid");
			return this;
		}

		public Criteria andSynsrcidLessThan(String value) {
			addCriterion("SYNSRCID <", value, "synsrcid");
			return this;
		}

		public Criteria andSynsrcidLessThanOrEqualTo(String value) {
			addCriterion("SYNSRCID <=", value, "synsrcid");
			return this;
		}

		public Criteria andSynsrcidLike(String value) {
			addCriterion("SYNSRCID like", value, "synsrcid");
			return this;
		}

		public Criteria andSynsrcidNotLike(String value) {
			addCriterion("SYNSRCID not like", value, "synsrcid");
			return this;
		}

		public Criteria andSynsrcidIn(List<String> values) {
			addCriterion("SYNSRCID in", values, "synsrcid");
			return this;
		}

		public Criteria andSynsrcidNotIn(List<String> values) {
			addCriterion("SYNSRCID not in", values, "synsrcid");
			return this;
		}

		public Criteria andSynsrcidBetween(String value1, String value2) {
			addCriterion("SYNSRCID between", value1, value2, "synsrcid");
			return this;
		}

		public Criteria andSynsrcidNotBetween(String value1, String value2) {
			addCriterion("SYNSRCID not between", value1, value2, "synsrcid");
			return this;
		}

		public Criteria andCruserIsNull() {
			addCriterion("CRUSER is null");
			return this;
		}

		public Criteria andCruserIsNotNull() {
			addCriterion("CRUSER is not null");
			return this;
		}

		public Criteria andCruserEqualTo(String value) {
			addCriterion("CRUSER =", value, "cruser");
			return this;
		}

		public Criteria andCruserNotEqualTo(String value) {
			addCriterion("CRUSER <>", value, "cruser");
			return this;
		}

		public Criteria andCruserGreaterThan(String value) {
			addCriterion("CRUSER >", value, "cruser");
			return this;
		}

		public Criteria andCruserGreaterThanOrEqualTo(String value) {
			addCriterion("CRUSER >=", value, "cruser");
			return this;
		}

		public Criteria andCruserLessThan(String value) {
			addCriterion("CRUSER <", value, "cruser");
			return this;
		}

		public Criteria andCruserLessThanOrEqualTo(String value) {
			addCriterion("CRUSER <=", value, "cruser");
			return this;
		}

		public Criteria andCruserLike(String value) {
			addCriterion("CRUSER like", value, "cruser");
			return this;
		}

		public Criteria andCruserNotLike(String value) {
			addCriterion("CRUSER not like", value, "cruser");
			return this;
		}

		public Criteria andCruserIn(List<String> values) {
			addCriterion("CRUSER in", values, "cruser");
			return this;
		}

		public Criteria andCruserNotIn(List<String> values) {
			addCriterion("CRUSER not in", values, "cruser");
			return this;
		}

		public Criteria andCruserBetween(String value1, String value2) {
			addCriterion("CRUSER between", value1, value2, "cruser");
			return this;
		}

		public Criteria andCruserNotBetween(String value1, String value2) {
			addCriterion("CRUSER not between", value1, value2, "cruser");
			return this;
		}
	}
}