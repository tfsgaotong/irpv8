package com.tfs.irp.sign.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpSignInfoExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_SIGN_INFO
     *
     * @ibatorgenerated Thu Jan 16 13:46:03 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_SIGN_INFO
     *
     * @ibatorgenerated Thu Jan 16 13:46:03 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_SIGN_INFO
     *
     * @ibatorgenerated Thu Jan 16 13:46:03 CST 2014
     */
    public IrpSignInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_SIGN_INFO
     *
     * @ibatorgenerated Thu Jan 16 13:46:03 CST 2014
     */
    protected IrpSignInfoExample(IrpSignInfoExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_SIGN_INFO
     *
     * @ibatorgenerated Thu Jan 16 13:46:03 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_SIGN_INFO
     *
     * @ibatorgenerated Thu Jan 16 13:46:03 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_SIGN_INFO
     *
     * @ibatorgenerated Thu Jan 16 13:46:03 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_SIGN_INFO
     *
     * @ibatorgenerated Thu Jan 16 13:46:03 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_SIGN_INFO
     *
     * @ibatorgenerated Thu Jan 16 13:46:03 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_SIGN_INFO
     *
     * @ibatorgenerated Thu Jan 16 13:46:03 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_SIGN_INFO
     *
     * @ibatorgenerated Thu Jan 16 13:46:03 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_SIGN_INFO
     *
     * @ibatorgenerated Thu Jan 16 13:46:03 CST 2014
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andSigninfoidIsNull() {
            addCriterion("SIGNINFOID is null");
            return this;
        }

        public Criteria andSigninfoidIsNotNull() {
            addCriterion("SIGNINFOID is not null");
            return this;
        }

        public Criteria andSigninfoidEqualTo(Long value) {
            addCriterion("SIGNINFOID =", value, "signinfoid");
            return this;
        }

        public Criteria andSigninfoidNotEqualTo(Long value) {
            addCriterion("SIGNINFOID <>", value, "signinfoid");
            return this;
        }

        public Criteria andSigninfoidGreaterThan(Long value) {
            addCriterion("SIGNINFOID >", value, "signinfoid");
            return this;
        }

        public Criteria andSigninfoidGreaterThanOrEqualTo(Long value) {
            addCriterion("SIGNINFOID >=", value, "signinfoid");
            return this;
        }

        public Criteria andSigninfoidLessThan(Long value) {
            addCriterion("SIGNINFOID <", value, "signinfoid");
            return this;
        }

        public Criteria andSigninfoidLessThanOrEqualTo(Long value) {
            addCriterion("SIGNINFOID <=", value, "signinfoid");
            return this;
        }

        public Criteria andSigninfoidIn(List<Long> values) {
            addCriterion("SIGNINFOID in", values, "signinfoid");
            return this;
        }

        public Criteria andSigninfoidNotIn(List<Long> values) {
            addCriterion("SIGNINFOID not in", values, "signinfoid");
            return this;
        }

        public Criteria andSigninfoidBetween(Long value1, Long value2) {
            addCriterion("SIGNINFOID between", value1, value2, "signinfoid");
            return this;
        }

        public Criteria andSigninfoidNotBetween(Long value1, Long value2) {
            addCriterion("SIGNINFOID not between", value1, value2, "signinfoid");
            return this;
        }

        public Criteria andSignidIsNull() {
            addCriterion("SIGNID is null");
            return this;
        }

        public Criteria andSignidIsNotNull() {
            addCriterion("SIGNID is not null");
            return this;
        }

        public Criteria andSignidEqualTo(Long value) {
            addCriterion("SIGNID =", value, "signid");
            return this;
        }

        public Criteria andSignidNotEqualTo(Long value) {
            addCriterion("SIGNID <>", value, "signid");
            return this;
        }

        public Criteria andSignidGreaterThan(Long value) {
            addCriterion("SIGNID >", value, "signid");
            return this;
        }

        public Criteria andSignidGreaterThanOrEqualTo(Long value) {
            addCriterion("SIGNID >=", value, "signid");
            return this;
        }

        public Criteria andSignidLessThan(Long value) {
            addCriterion("SIGNID <", value, "signid");
            return this;
        }

        public Criteria andSignidLessThanOrEqualTo(Long value) {
            addCriterion("SIGNID <=", value, "signid");
            return this;
        }

        public Criteria andSignidIn(List<Long> values) {
            addCriterion("SIGNID in", values, "signid");
            return this;
        }

        public Criteria andSignidNotIn(List<Long> values) {
            addCriterion("SIGNID not in", values, "signid");
            return this;
        }

        public Criteria andSignidBetween(Long value1, Long value2) {
            addCriterion("SIGNID between", value1, value2, "signid");
            return this;
        }

        public Criteria andSignidNotBetween(Long value1, Long value2) {
            addCriterion("SIGNID not between", value1, value2, "signid");
            return this;
        }

        public Criteria andSignintimeIsNull() {
            addCriterion("SIGNINTIME is null");
            return this;
        }

        public Criteria andSignintimeIsNotNull() {
            addCriterion("SIGNINTIME is not null");
            return this;
        }

        public Criteria andSignintimeEqualTo(Date value) {
            addCriterion("SIGNINTIME =", value, "signintime");
            return this;
        }

        public Criteria andSignintimeNotEqualTo(Date value) {
            addCriterion("SIGNINTIME <>", value, "signintime");
            return this;
        }

        public Criteria andSignintimeGreaterThan(Date value) {
            addCriterion("SIGNINTIME >", value, "signintime");
            return this;
        }

        public Criteria andSignintimeGreaterThanOrEqualTo(Date value) {
            addCriterion("SIGNINTIME >=", value, "signintime");
            return this;
        }

        public Criteria andSignintimeLessThan(Date value) {
            addCriterion("SIGNINTIME <", value, "signintime");
            return this;
        }

        public Criteria andSignintimeLessThanOrEqualTo(Date value) {
            addCriterion("SIGNINTIME <=", value, "signintime");
            return this;
        }

        public Criteria andSignintimeIn(List<Date> values) {
            addCriterion("SIGNINTIME in", values, "signintime");
            return this;
        }

        public Criteria andSignintimeNotIn(List<Date> values) {
            addCriterion("SIGNINTIME not in", values, "signintime");
            return this;
        }

        public Criteria andSignintimeBetween(Date value1, Date value2) {
            addCriterion("SIGNINTIME between", value1, value2, "signintime");
            return this;
        }

        public Criteria andSignintimeNotBetween(Date value1, Date value2) {
            addCriterion("SIGNINTIME not between", value1, value2, "signintime");
            return this;
        }

        public Criteria andSignouttimeIsNull() {
            addCriterion("SIGNOUTTIME is null");
            return this;
        }

        public Criteria andSignouttimeIsNotNull() {
            addCriterion("SIGNOUTTIME is not null");
            return this;
        }

        public Criteria andSignouttimeEqualTo(Date value) {
            addCriterion("SIGNOUTTIME =", value, "signouttime");
            return this;
        }

        public Criteria andSignouttimeNotEqualTo(Date value) {
            addCriterion("SIGNOUTTIME <>", value, "signouttime");
            return this;
        }

        public Criteria andSignouttimeGreaterThan(Date value) {
            addCriterion("SIGNOUTTIME >", value, "signouttime");
            return this;
        }

        public Criteria andSignouttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("SIGNOUTTIME >=", value, "signouttime");
            return this;
        }

        public Criteria andSignouttimeLessThan(Date value) {
            addCriterion("SIGNOUTTIME <", value, "signouttime");
            return this;
        }

        public Criteria andSignouttimeLessThanOrEqualTo(Date value) {
            addCriterion("SIGNOUTTIME <=", value, "signouttime");
            return this;
        }

        public Criteria andSignouttimeIn(List<Date> values) {
            addCriterion("SIGNOUTTIME in", values, "signouttime");
            return this;
        }

        public Criteria andSignouttimeNotIn(List<Date> values) {
            addCriterion("SIGNOUTTIME not in", values, "signouttime");
            return this;
        }

        public Criteria andSignouttimeBetween(Date value1, Date value2) {
            addCriterion("SIGNOUTTIME between", value1, value2, "signouttime");
            return this;
        }

        public Criteria andSignouttimeNotBetween(Date value1, Date value2) {
            addCriterion("SIGNOUTTIME not between", value1, value2, "signouttime");
            return this;
        }

        public Criteria andSigninipIsNull() {
            addCriterion("SIGNINIP is null");
            return this;
        }

        public Criteria andSigninipIsNotNull() {
            addCriterion("SIGNINIP is not null");
            return this;
        }

        public Criteria andSigninipEqualTo(String value) {
            addCriterion("SIGNINIP =", value, "signinip");
            return this;
        }

        public Criteria andSigninipNotEqualTo(String value) {
            addCriterion("SIGNINIP <>", value, "signinip");
            return this;
        }

        public Criteria andSigninipGreaterThan(String value) {
            addCriterion("SIGNINIP >", value, "signinip");
            return this;
        }

        public Criteria andSigninipGreaterThanOrEqualTo(String value) {
            addCriterion("SIGNINIP >=", value, "signinip");
            return this;
        }

        public Criteria andSigninipLessThan(String value) {
            addCriterion("SIGNINIP <", value, "signinip");
            return this;
        }

        public Criteria andSigninipLessThanOrEqualTo(String value) {
            addCriterion("SIGNINIP <=", value, "signinip");
            return this;
        }

        public Criteria andSigninipLike(String value) {
            addCriterion("SIGNINIP like", value, "signinip");
            return this;
        }

        public Criteria andSigninipNotLike(String value) {
            addCriterion("SIGNINIP not like", value, "signinip");
            return this;
        }

        public Criteria andSigninipIn(List<String> values) {
            addCriterion("SIGNINIP in", values, "signinip");
            return this;
        }

        public Criteria andSigninipNotIn(List<String> values) {
            addCriterion("SIGNINIP not in", values, "signinip");
            return this;
        }

        public Criteria andSigninipBetween(String value1, String value2) {
            addCriterion("SIGNINIP between", value1, value2, "signinip");
            return this;
        }

        public Criteria andSigninipNotBetween(String value1, String value2) {
            addCriterion("SIGNINIP not between", value1, value2, "signinip");
            return this;
        }

        public Criteria andSignoutipIsNull() {
            addCriterion("SIGNOUTIP is null");
            return this;
        }

        public Criteria andSignoutipIsNotNull() {
            addCriterion("SIGNOUTIP is not null");
            return this;
        }

        public Criteria andSignoutipEqualTo(String value) {
            addCriterion("SIGNOUTIP =", value, "signoutip");
            return this;
        }

        public Criteria andSignoutipNotEqualTo(String value) {
            addCriterion("SIGNOUTIP <>", value, "signoutip");
            return this;
        }

        public Criteria andSignoutipGreaterThan(String value) {
            addCriterion("SIGNOUTIP >", value, "signoutip");
            return this;
        }

        public Criteria andSignoutipGreaterThanOrEqualTo(String value) {
            addCriterion("SIGNOUTIP >=", value, "signoutip");
            return this;
        }

        public Criteria andSignoutipLessThan(String value) {
            addCriterion("SIGNOUTIP <", value, "signoutip");
            return this;
        }

        public Criteria andSignoutipLessThanOrEqualTo(String value) {
            addCriterion("SIGNOUTIP <=", value, "signoutip");
            return this;
        }

        public Criteria andSignoutipLike(String value) {
            addCriterion("SIGNOUTIP like", value, "signoutip");
            return this;
        }

        public Criteria andSignoutipNotLike(String value) {
            addCriterion("SIGNOUTIP not like", value, "signoutip");
            return this;
        }

        public Criteria andSignoutipIn(List<String> values) {
            addCriterion("SIGNOUTIP in", values, "signoutip");
            return this;
        }

        public Criteria andSignoutipNotIn(List<String> values) {
            addCriterion("SIGNOUTIP not in", values, "signoutip");
            return this;
        }

        public Criteria andSignoutipBetween(String value1, String value2) {
            addCriterion("SIGNOUTIP between", value1, value2, "signoutip");
            return this;
        }

        public Criteria andSignoutipNotBetween(String value1, String value2) {
            addCriterion("SIGNOUTIP not between", value1, value2, "signoutip");
            return this;
        }

        public Criteria andSigninstatusIsNull() {
            addCriterion("SIGNINSTATUS is null");
            return this;
        }

        public Criteria andSigninstatusIsNotNull() {
            addCriterion("SIGNINSTATUS is not null");
            return this;
        }

        public Criteria andSigninstatusEqualTo(String value) {
            addCriterion("SIGNINSTATUS =", value, "signinstatus");
            return this;
        }

        public Criteria andSigninstatusNotEqualTo(String value) {
            addCriterion("SIGNINSTATUS <>", value, "signinstatus");
            return this;
        }

        public Criteria andSigninstatusGreaterThan(String value) {
            addCriterion("SIGNINSTATUS >", value, "signinstatus");
            return this;
        }

        public Criteria andSigninstatusGreaterThanOrEqualTo(String value) {
            addCriterion("SIGNINSTATUS >=", value, "signinstatus");
            return this;
        }

        public Criteria andSigninstatusLessThan(String value) {
            addCriterion("SIGNINSTATUS <", value, "signinstatus");
            return this;
        }

        public Criteria andSigninstatusLessThanOrEqualTo(String value) {
            addCriterion("SIGNINSTATUS <=", value, "signinstatus");
            return this;
        }

        public Criteria andSigninstatusLike(String value) {
            addCriterion("SIGNINSTATUS like", value, "signinstatus");
            return this;
        }

        public Criteria andSigninstatusNotLike(String value) {
            addCriterion("SIGNINSTATUS not like", value, "signinstatus");
            return this;
        }

        public Criteria andSigninstatusIn(List<String> values) {
            addCriterion("SIGNINSTATUS in", values, "signinstatus");
            return this;
        }

        public Criteria andSigninstatusNotIn(List<String> values) {
            addCriterion("SIGNINSTATUS not in", values, "signinstatus");
            return this;
        }

        public Criteria andSigninstatusBetween(String value1, String value2) {
            addCriterion("SIGNINSTATUS between", value1, value2, "signinstatus");
            return this;
        }

        public Criteria andSigninstatusNotBetween(String value1, String value2) {
            addCriterion("SIGNINSTATUS not between", value1, value2, "signinstatus");
            return this;
        }

        public Criteria andSignoutstatusIsNull() {
            addCriterion("SIGNOUTSTATUS is null");
            return this;
        }

        public Criteria andSignoutstatusIsNotNull() {
            addCriterion("SIGNOUTSTATUS is not null");
            return this;
        }

        public Criteria andSignoutstatusEqualTo(String value) {
            addCriterion("SIGNOUTSTATUS =", value, "signoutstatus");
            return this;
        }

        public Criteria andSignoutstatusNotEqualTo(String value) {
            addCriterion("SIGNOUTSTATUS <>", value, "signoutstatus");
            return this;
        }

        public Criteria andSignoutstatusGreaterThan(String value) {
            addCriterion("SIGNOUTSTATUS >", value, "signoutstatus");
            return this;
        }

        public Criteria andSignoutstatusGreaterThanOrEqualTo(String value) {
            addCriterion("SIGNOUTSTATUS >=", value, "signoutstatus");
            return this;
        }

        public Criteria andSignoutstatusLessThan(String value) {
            addCriterion("SIGNOUTSTATUS <", value, "signoutstatus");
            return this;
        }

        public Criteria andSignoutstatusLessThanOrEqualTo(String value) {
            addCriterion("SIGNOUTSTATUS <=", value, "signoutstatus");
            return this;
        }

        public Criteria andSignoutstatusLike(String value) {
            addCriterion("SIGNOUTSTATUS like", value, "signoutstatus");
            return this;
        }

        public Criteria andSignoutstatusNotLike(String value) {
            addCriterion("SIGNOUTSTATUS not like", value, "signoutstatus");
            return this;
        }

        public Criteria andSignoutstatusIn(List<String> values) {
            addCriterion("SIGNOUTSTATUS in", values, "signoutstatus");
            return this;
        }

        public Criteria andSignoutstatusNotIn(List<String> values) {
            addCriterion("SIGNOUTSTATUS not in", values, "signoutstatus");
            return this;
        }

        public Criteria andSignoutstatusBetween(String value1, String value2) {
            addCriterion("SIGNOUTSTATUS between", value1, value2, "signoutstatus");
            return this;
        }

        public Criteria andSignoutstatusNotBetween(String value1, String value2) {
            addCriterion("SIGNOUTSTATUS not between", value1, value2, "signoutstatus");
            return this;
        }

        public Criteria andSignindirectionIsNull() {
            addCriterion("SIGNINDIRECTION is null");
            return this;
        }

        public Criteria andSignindirectionIsNotNull() {
            addCriterion("SIGNINDIRECTION is not null");
            return this;
        }

        public Criteria andSignindirectionEqualTo(String value) {
            addCriterion("SIGNINDIRECTION =", value, "signindirection");
            return this;
        }

        public Criteria andSignindirectionNotEqualTo(String value) {
            addCriterion("SIGNINDIRECTION <>", value, "signindirection");
            return this;
        }

        public Criteria andSignindirectionGreaterThan(String value) {
            addCriterion("SIGNINDIRECTION >", value, "signindirection");
            return this;
        }

        public Criteria andSignindirectionGreaterThanOrEqualTo(String value) {
            addCriterion("SIGNINDIRECTION >=", value, "signindirection");
            return this;
        }

        public Criteria andSignindirectionLessThan(String value) {
            addCriterion("SIGNINDIRECTION <", value, "signindirection");
            return this;
        }

        public Criteria andSignindirectionLessThanOrEqualTo(String value) {
            addCriterion("SIGNINDIRECTION <=", value, "signindirection");
            return this;
        }

        public Criteria andSignindirectionLike(String value) {
            addCriterion("SIGNINDIRECTION like", value, "signindirection");
            return this;
        }

        public Criteria andSignindirectionNotLike(String value) {
            addCriterion("SIGNINDIRECTION not like", value, "signindirection");
            return this;
        }

        public Criteria andSignindirectionIn(List<String> values) {
            addCriterion("SIGNINDIRECTION in", values, "signindirection");
            return this;
        }

        public Criteria andSignindirectionNotIn(List<String> values) {
            addCriterion("SIGNINDIRECTION not in", values, "signindirection");
            return this;
        }

        public Criteria andSignindirectionBetween(String value1, String value2) {
            addCriterion("SIGNINDIRECTION between", value1, value2, "signindirection");
            return this;
        }

        public Criteria andSignindirectionNotBetween(String value1, String value2) {
            addCriterion("SIGNINDIRECTION not between", value1, value2, "signindirection");
            return this;
        }

        public Criteria andSignoutdirectionIsNull() {
            addCriterion("SIGNOUTDIRECTION is null");
            return this;
        }

        public Criteria andSignoutdirectionIsNotNull() {
            addCriterion("SIGNOUTDIRECTION is not null");
            return this;
        }

        public Criteria andSignoutdirectionEqualTo(String value) {
            addCriterion("SIGNOUTDIRECTION =", value, "signoutdirection");
            return this;
        }

        public Criteria andSignoutdirectionNotEqualTo(String value) {
            addCriterion("SIGNOUTDIRECTION <>", value, "signoutdirection");
            return this;
        }

        public Criteria andSignoutdirectionGreaterThan(String value) {
            addCriterion("SIGNOUTDIRECTION >", value, "signoutdirection");
            return this;
        }

        public Criteria andSignoutdirectionGreaterThanOrEqualTo(String value) {
            addCriterion("SIGNOUTDIRECTION >=", value, "signoutdirection");
            return this;
        }

        public Criteria andSignoutdirectionLessThan(String value) {
            addCriterion("SIGNOUTDIRECTION <", value, "signoutdirection");
            return this;
        }

        public Criteria andSignoutdirectionLessThanOrEqualTo(String value) {
            addCriterion("SIGNOUTDIRECTION <=", value, "signoutdirection");
            return this;
        }

        public Criteria andSignoutdirectionLike(String value) {
            addCriterion("SIGNOUTDIRECTION like", value, "signoutdirection");
            return this;
        }

        public Criteria andSignoutdirectionNotLike(String value) {
            addCriterion("SIGNOUTDIRECTION not like", value, "signoutdirection");
            return this;
        }

        public Criteria andSignoutdirectionIn(List<String> values) {
            addCriterion("SIGNOUTDIRECTION in", values, "signoutdirection");
            return this;
        }

        public Criteria andSignoutdirectionNotIn(List<String> values) {
            addCriterion("SIGNOUTDIRECTION not in", values, "signoutdirection");
            return this;
        }

        public Criteria andSignoutdirectionBetween(String value1, String value2) {
            addCriterion("SIGNOUTDIRECTION between", value1, value2, "signoutdirection");
            return this;
        }

        public Criteria andSignoutdirectionNotBetween(String value1, String value2) {
            addCriterion("SIGNOUTDIRECTION not between", value1, value2, "signoutdirection");
            return this;
        }

        public Criteria andSigncommentIsNull() {
            addCriterion("SIGNCOMMENT is null");
            return this;
        }

        public Criteria andSigncommentIsNotNull() {
            addCriterion("SIGNCOMMENT is not null");
            return this;
        }

        public Criteria andSigncommentEqualTo(String value) {
            addCriterion("SIGNCOMMENT =", value, "signcomment");
            return this;
        }

        public Criteria andSigncommentNotEqualTo(String value) {
            addCriterion("SIGNCOMMENT <>", value, "signcomment");
            return this;
        }

        public Criteria andSigncommentGreaterThan(String value) {
            addCriterion("SIGNCOMMENT >", value, "signcomment");
            return this;
        }

        public Criteria andSigncommentGreaterThanOrEqualTo(String value) {
            addCriterion("SIGNCOMMENT >=", value, "signcomment");
            return this;
        }

        public Criteria andSigncommentLessThan(String value) {
            addCriterion("SIGNCOMMENT <", value, "signcomment");
            return this;
        }

        public Criteria andSigncommentLessThanOrEqualTo(String value) {
            addCriterion("SIGNCOMMENT <=", value, "signcomment");
            return this;
        }

        public Criteria andSigncommentLike(String value) {
            addCriterion("SIGNCOMMENT like", value, "signcomment");
            return this;
        }

        public Criteria andSigncommentNotLike(String value) {
            addCriterion("SIGNCOMMENT not like", value, "signcomment");
            return this;
        }

        public Criteria andSigncommentIn(List<String> values) {
            addCriterion("SIGNCOMMENT in", values, "signcomment");
            return this;
        }

        public Criteria andSigncommentNotIn(List<String> values) {
            addCriterion("SIGNCOMMENT not in", values, "signcomment");
            return this;
        }

        public Criteria andSigncommentBetween(String value1, String value2) {
            addCriterion("SIGNCOMMENT between", value1, value2, "signcomment");
            return this;
        }

        public Criteria andSigncommentNotBetween(String value1, String value2) {
            addCriterion("SIGNCOMMENT not between", value1, value2, "signcomment");
            return this;
        }
    }
}