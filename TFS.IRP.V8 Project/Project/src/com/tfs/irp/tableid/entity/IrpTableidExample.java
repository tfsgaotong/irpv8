package com.tfs.irp.tableid.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpTableidExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_TABLEID
	 * @ibatorgenerated  Wed Mar 27 13:42:12 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_TABLEID
	 * @ibatorgenerated  Wed Mar 27 13:42:12 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TABLEID
	 * @ibatorgenerated  Wed Mar 27 13:42:12 CST 2013
	 */
	public IrpTableidExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TABLEID
	 * @ibatorgenerated  Wed Mar 27 13:42:12 CST 2013
	 */
	protected IrpTableidExample(IrpTableidExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TABLEID
	 * @ibatorgenerated  Wed Mar 27 13:42:12 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TABLEID
	 * @ibatorgenerated  Wed Mar 27 13:42:12 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TABLEID
	 * @ibatorgenerated  Wed Mar 27 13:42:12 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TABLEID
	 * @ibatorgenerated  Wed Mar 27 13:42:12 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TABLEID
	 * @ibatorgenerated  Wed Mar 27 13:42:12 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TABLEID
	 * @ibatorgenerated  Wed Mar 27 13:42:12 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TABLEID
	 * @ibatorgenerated  Wed Mar 27 13:42:12 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_TABLEID
	 * @ibatorgenerated  Wed Mar 27 13:42:12 CST 2013
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andTablenameIsNull() {
			addCriterion("TABLENAME is null");
			return this;
		}

		public Criteria andTablenameIsNotNull() {
			addCriterion("TABLENAME is not null");
			return this;
		}

		public Criteria andTablenameEqualTo(String value) {
			addCriterion("TABLENAME =", value, "tablename");
			return this;
		}

		public Criteria andTablenameNotEqualTo(String value) {
			addCriterion("TABLENAME <>", value, "tablename");
			return this;
		}

		public Criteria andTablenameGreaterThan(String value) {
			addCriterion("TABLENAME >", value, "tablename");
			return this;
		}

		public Criteria andTablenameGreaterThanOrEqualTo(String value) {
			addCriterion("TABLENAME >=", value, "tablename");
			return this;
		}

		public Criteria andTablenameLessThan(String value) {
			addCriterion("TABLENAME <", value, "tablename");
			return this;
		}

		public Criteria andTablenameLessThanOrEqualTo(String value) {
			addCriterion("TABLENAME <=", value, "tablename");
			return this;
		}

		public Criteria andTablenameLike(String value) {
			addCriterion("TABLENAME like", value, "tablename");
			return this;
		}

		public Criteria andTablenameNotLike(String value) {
			addCriterion("TABLENAME not like", value, "tablename");
			return this;
		}

		public Criteria andTablenameIn(List<String> values) {
			addCriterion("TABLENAME in", values, "tablename");
			return this;
		}

		public Criteria andTablenameNotIn(List<String> values) {
			addCriterion("TABLENAME not in", values, "tablename");
			return this;
		}

		public Criteria andTablenameBetween(String value1, String value2) {
			addCriterion("TABLENAME between", value1, value2, "tablename");
			return this;
		}

		public Criteria andTablenameNotBetween(String value1, String value2) {
			addCriterion("TABLENAME not between", value1, value2, "tablename");
			return this;
		}

		public Criteria andNextidIsNull() {
			addCriterion("NEXTID is null");
			return this;
		}

		public Criteria andNextidIsNotNull() {
			addCriterion("NEXTID is not null");
			return this;
		}

		public Criteria andNextidEqualTo(Long value) {
			addCriterion("NEXTID =", value, "nextid");
			return this;
		}

		public Criteria andNextidNotEqualTo(Long value) {
			addCriterion("NEXTID <>", value, "nextid");
			return this;
		}

		public Criteria andNextidGreaterThan(Long value) {
			addCriterion("NEXTID >", value, "nextid");
			return this;
		}

		public Criteria andNextidGreaterThanOrEqualTo(Long value) {
			addCriterion("NEXTID >=", value, "nextid");
			return this;
		}

		public Criteria andNextidLessThan(Long value) {
			addCriterion("NEXTID <", value, "nextid");
			return this;
		}

		public Criteria andNextidLessThanOrEqualTo(Long value) {
			addCriterion("NEXTID <=", value, "nextid");
			return this;
		}

		public Criteria andNextidIn(List<Long> values) {
			addCriterion("NEXTID in", values, "nextid");
			return this;
		}

		public Criteria andNextidNotIn(List<Long> values) {
			addCriterion("NEXTID not in", values, "nextid");
			return this;
		}

		public Criteria andNextidBetween(Long value1, Long value2) {
			addCriterion("NEXTID between", value1, value2, "nextid");
			return this;
		}

		public Criteria andNextidNotBetween(Long value1, Long value2) {
			addCriterion("NEXTID not between", value1, value2, "nextid");
			return this;
		}

		public Criteria andCachesizeIsNull() {
			addCriterion("CACHESIZE is null");
			return this;
		}

		public Criteria andCachesizeIsNotNull() {
			addCriterion("CACHESIZE is not null");
			return this;
		}

		public Criteria andCachesizeEqualTo(Integer value) {
			addCriterion("CACHESIZE =", value, "cachesize");
			return this;
		}

		public Criteria andCachesizeNotEqualTo(Integer value) {
			addCriterion("CACHESIZE <>", value, "cachesize");
			return this;
		}

		public Criteria andCachesizeGreaterThan(Integer value) {
			addCriterion("CACHESIZE >", value, "cachesize");
			return this;
		}

		public Criteria andCachesizeGreaterThanOrEqualTo(Integer value) {
			addCriterion("CACHESIZE >=", value, "cachesize");
			return this;
		}

		public Criteria andCachesizeLessThan(Integer value) {
			addCriterion("CACHESIZE <", value, "cachesize");
			return this;
		}

		public Criteria andCachesizeLessThanOrEqualTo(Integer value) {
			addCriterion("CACHESIZE <=", value, "cachesize");
			return this;
		}

		public Criteria andCachesizeIn(List<Integer> values) {
			addCriterion("CACHESIZE in", values, "cachesize");
			return this;
		}

		public Criteria andCachesizeNotIn(List<Integer> values) {
			addCriterion("CACHESIZE not in", values, "cachesize");
			return this;
		}

		public Criteria andCachesizeBetween(Integer value1, Integer value2) {
			addCriterion("CACHESIZE between", value1, value2, "cachesize");
			return this;
		}

		public Criteria andCachesizeNotBetween(Integer value1, Integer value2) {
			addCriterion("CACHESIZE not between", value1, value2, "cachesize");
			return this;
		}

		public Criteria andFieldidnameIsNull() {
			addCriterion("FIELDIDNAME is null");
			return this;
		}

		public Criteria andFieldidnameIsNotNull() {
			addCriterion("FIELDIDNAME is not null");
			return this;
		}

		public Criteria andFieldidnameEqualTo(String value) {
			addCriterion("FIELDIDNAME =", value, "fieldidname");
			return this;
		}

		public Criteria andFieldidnameNotEqualTo(String value) {
			addCriterion("FIELDIDNAME <>", value, "fieldidname");
			return this;
		}

		public Criteria andFieldidnameGreaterThan(String value) {
			addCriterion("FIELDIDNAME >", value, "fieldidname");
			return this;
		}

		public Criteria andFieldidnameGreaterThanOrEqualTo(String value) {
			addCriterion("FIELDIDNAME >=", value, "fieldidname");
			return this;
		}

		public Criteria andFieldidnameLessThan(String value) {
			addCriterion("FIELDIDNAME <", value, "fieldidname");
			return this;
		}

		public Criteria andFieldidnameLessThanOrEqualTo(String value) {
			addCriterion("FIELDIDNAME <=", value, "fieldidname");
			return this;
		}

		public Criteria andFieldidnameLike(String value) {
			addCriterion("FIELDIDNAME like", value, "fieldidname");
			return this;
		}

		public Criteria andFieldidnameNotLike(String value) {
			addCriterion("FIELDIDNAME not like", value, "fieldidname");
			return this;
		}

		public Criteria andFieldidnameIn(List<String> values) {
			addCriterion("FIELDIDNAME in", values, "fieldidname");
			return this;
		}

		public Criteria andFieldidnameNotIn(List<String> values) {
			addCriterion("FIELDIDNAME not in", values, "fieldidname");
			return this;
		}

		public Criteria andFieldidnameBetween(String value1, String value2) {
			addCriterion("FIELDIDNAME between", value1, value2, "fieldidname");
			return this;
		}

		public Criteria andFieldidnameNotBetween(String value1, String value2) {
			addCriterion("FIELDIDNAME not between", value1, value2,
					"fieldidname");
			return this;
		}

		public Criteria andTableobjtypeIsNull() {
			addCriterion("TABLEOBJTYPE is null");
			return this;
		}

		public Criteria andTableobjtypeIsNotNull() {
			addCriterion("TABLEOBJTYPE is not null");
			return this;
		}

		public Criteria andTableobjtypeEqualTo(String value) {
			addCriterion("TABLEOBJTYPE =", value, "tableobjtype");
			return this;
		}

		public Criteria andTableobjtypeNotEqualTo(String value) {
			addCriterion("TABLEOBJTYPE <>", value, "tableobjtype");
			return this;
		}

		public Criteria andTableobjtypeGreaterThan(String value) {
			addCriterion("TABLEOBJTYPE >", value, "tableobjtype");
			return this;
		}

		public Criteria andTableobjtypeGreaterThanOrEqualTo(String value) {
			addCriterion("TABLEOBJTYPE >=", value, "tableobjtype");
			return this;
		}

		public Criteria andTableobjtypeLessThan(String value) {
			addCriterion("TABLEOBJTYPE <", value, "tableobjtype");
			return this;
		}

		public Criteria andTableobjtypeLessThanOrEqualTo(String value) {
			addCriterion("TABLEOBJTYPE <=", value, "tableobjtype");
			return this;
		}

		public Criteria andTableobjtypeLike(String value) {
			addCriterion("TABLEOBJTYPE like", value, "tableobjtype");
			return this;
		}

		public Criteria andTableobjtypeNotLike(String value) {
			addCriterion("TABLEOBJTYPE not like", value, "tableobjtype");
			return this;
		}

		public Criteria andTableobjtypeIn(List<String> values) {
			addCriterion("TABLEOBJTYPE in", values, "tableobjtype");
			return this;
		}

		public Criteria andTableobjtypeNotIn(List<String> values) {
			addCriterion("TABLEOBJTYPE not in", values, "tableobjtype");
			return this;
		}

		public Criteria andTableobjtypeBetween(String value1, String value2) {
			addCriterion("TABLEOBJTYPE between", value1, value2, "tableobjtype");
			return this;
		}

		public Criteria andTableobjtypeNotBetween(String value1, String value2) {
			addCriterion("TABLEOBJTYPE not between", value1, value2,
					"tableobjtype");
			return this;
		}
	}
}