package com.tfs.irp.tag.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpTagExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table irp_tag
     *
     * @ibatorgenerated Sat Nov 22 18:18:14 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table irp_tag
     *
     * @ibatorgenerated Sat Nov 22 18:18:14 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table irp_tag
     *
     * @ibatorgenerated Sat Nov 22 18:18:14 CST 2014
     */
    public IrpTagExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table irp_tag
     *
     * @ibatorgenerated Sat Nov 22 18:18:14 CST 2014
     */
    protected IrpTagExample(IrpTagExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table irp_tag
     *
     * @ibatorgenerated Sat Nov 22 18:18:14 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table irp_tag
     *
     * @ibatorgenerated Sat Nov 22 18:18:14 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table irp_tag
     *
     * @ibatorgenerated Sat Nov 22 18:18:14 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table irp_tag
     *
     * @ibatorgenerated Sat Nov 22 18:18:14 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table irp_tag
     *
     * @ibatorgenerated Sat Nov 22 18:18:14 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table irp_tag
     *
     * @ibatorgenerated Sat Nov 22 18:18:14 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table irp_tag
     *
     * @ibatorgenerated Sat Nov 22 18:18:14 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table irp_tag
     *
     * @ibatorgenerated Sat Nov 22 18:18:14 CST 2014
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andTagidIsNull() {
            addCriterion("TAGID is null");
            return this;
        }

        public Criteria andTagidIsNotNull() {
            addCriterion("TAGID is not null");
            return this;
        }

        public Criteria andTagidEqualTo(Long value) {
            addCriterion("TAGID =", value, "tagid");
            return this;
        }

        public Criteria andTagidNotEqualTo(Long value) {
            addCriterion("TAGID <>", value, "tagid");
            return this;
        }

        public Criteria andTagidGreaterThan(Long value) {
            addCriterion("TAGID >", value, "tagid");
            return this;
        }

        public Criteria andTagidGreaterThanOrEqualTo(Long value) {
            addCriterion("TAGID >=", value, "tagid");
            return this;
        }

        public Criteria andTagidLessThan(Long value) {
            addCriterion("TAGID <", value, "tagid");
            return this;
        }

        public Criteria andTagidLessThanOrEqualTo(Long value) {
            addCriterion("TAGID <=", value, "tagid");
            return this;
        }

        public Criteria andTagidIn(List<Long> values) {
            addCriterion("TAGID in", values, "tagid");
            return this;
        }

        public Criteria andTagidNotIn(List<Long> values) {
            addCriterion("TAGID not in", values, "tagid");
            return this;
        }

        public Criteria andTagidBetween(Long value1, Long value2) {
            addCriterion("TAGID between", value1, value2, "tagid");
            return this;
        }

        public Criteria andTagidNotBetween(Long value1, Long value2) {
            addCriterion("TAGID not between", value1, value2, "tagid");
            return this;
        }

        public Criteria andTagnameIsNull() {
            addCriterion("TAGNAME is null");
            return this;
        }

        public Criteria andTagnameIsNotNull() {
            addCriterion("TAGNAME is not null");
            return this;
        }

        public Criteria andTagnameEqualTo(String value) {
            addCriterion("TAGNAME =", value, "tagname");
            return this;
        }

        public Criteria andTagnameNotEqualTo(String value) {
            addCriterion("TAGNAME <>", value, "tagname");
            return this;
        }

        public Criteria andTagnameGreaterThan(String value) {
            addCriterion("TAGNAME >", value, "tagname");
            return this;
        }

        public Criteria andTagnameGreaterThanOrEqualTo(String value) {
            addCriterion("TAGNAME >=", value, "tagname");
            return this;
        }

        public Criteria andTagnameLessThan(String value) {
            addCriterion("TAGNAME <", value, "tagname");
            return this;
        }

        public Criteria andTagnameLessThanOrEqualTo(String value) {
            addCriterion("TAGNAME <=", value, "tagname");
            return this;
        }

        public Criteria andTagnameLike(String value) {
            addCriterion("TAGNAME like", value, "tagname");
            return this;
        }

        public Criteria andTagnameNotLike(String value) {
            addCriterion("TAGNAME not like", value, "tagname");
            return this;
        }

        public Criteria andTagnameIn(List<String> values) {
            addCriterion("TAGNAME in", values, "tagname");
            return this;
        }

        public Criteria andTagnameNotIn(List<String> values) {
            addCriterion("TAGNAME not in", values, "tagname");
            return this;
        }

        public Criteria andTagnameBetween(String value1, String value2) {
            addCriterion("TAGNAME between", value1, value2, "tagname");
            return this;
        }

        public Criteria andTagnameNotBetween(String value1, String value2) {
            addCriterion("TAGNAME not between", value1, value2, "tagname");
            return this;
        }

        public Criteria andNcountIsNull() {
            addCriterion("NCOUNT is null");
            return this;
        }

        public Criteria andNcountIsNotNull() {
            addCriterion("NCOUNT is not null");
            return this;
        }

        public Criteria andNcountEqualTo(Long value) {
            addCriterion("NCOUNT =", value, "ncount");
            return this;
        }

        public Criteria andNcountNotEqualTo(Long value) {
            addCriterion("NCOUNT <>", value, "ncount");
            return this;
        }

        public Criteria andNcountGreaterThan(Long value) {
            addCriterion("NCOUNT >", value, "ncount");
            return this;
        }

        public Criteria andNcountGreaterThanOrEqualTo(Long value) {
            addCriterion("NCOUNT >=", value, "ncount");
            return this;
        }

        public Criteria andNcountLessThan(Long value) {
            addCriterion("NCOUNT <", value, "ncount");
            return this;
        }

        public Criteria andNcountLessThanOrEqualTo(Long value) {
            addCriterion("NCOUNT <=", value, "ncount");
            return this;
        }

        public Criteria andNcountIn(List<Long> values) {
            addCriterion("NCOUNT in", values, "ncount");
            return this;
        }

        public Criteria andNcountNotIn(List<Long> values) {
            addCriterion("NCOUNT not in", values, "ncount");
            return this;
        }

        public Criteria andNcountBetween(Long value1, Long value2) {
            addCriterion("NCOUNT between", value1, value2, "ncount");
            return this;
        }

        public Criteria andNcountNotBetween(Long value1, Long value2) {
            addCriterion("NCOUNT not between", value1, value2, "ncount");
            return this;
        }

        public Criteria andTagtypeidIsNull() {
            addCriterion("TAGTYPEID is null");
            return this;
        }

        public Criteria andTagtypeidIsNotNull() {
            addCriterion("TAGTYPEID is not null");
            return this;
        }

        public Criteria andTagtypeidEqualTo(Long value) {
            addCriterion("TAGTYPEID =", value, "tagtypeid");
            return this;
        }

        public Criteria andTagtypeidNotEqualTo(Long value) {
            addCriterion("TAGTYPEID <>", value, "tagtypeid");
            return this;
        }

        public Criteria andTagtypeidGreaterThan(Long value) {
            addCriterion("TAGTYPEID >", value, "tagtypeid");
            return this;
        }

        public Criteria andTagtypeidGreaterThanOrEqualTo(Long value) {
            addCriterion("TAGTYPEID >=", value, "tagtypeid");
            return this;
        }

        public Criteria andTagtypeidLessThan(Long value) {
            addCriterion("TAGTYPEID <", value, "tagtypeid");
            return this;
        }

        public Criteria andTagtypeidLessThanOrEqualTo(Long value) {
            addCriterion("TAGTYPEID <=", value, "tagtypeid");
            return this;
        }

        public Criteria andTagtypeidIn(List<Long> values) {
            addCriterion("TAGTYPEID in", values, "tagtypeid");
            return this;
        }

        public Criteria andTagtypeidNotIn(List<Long> values) {
            addCriterion("TAGTYPEID not in", values, "tagtypeid");
            return this;
        }

        public Criteria andTagtypeidBetween(Long value1, Long value2) {
            addCriterion("TAGTYPEID between", value1, value2, "tagtypeid");
            return this;
        }

        public Criteria andTagtypeidNotBetween(Long value1, Long value2) {
            addCriterion("TAGTYPEID not between", value1, value2, "tagtypeid");
            return this;
        }
    }
}