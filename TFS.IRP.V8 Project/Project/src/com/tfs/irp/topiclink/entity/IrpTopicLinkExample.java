package com.tfs.irp.topiclink.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class IrpTopicLinkExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_TOPIC_LINK
	 * @ibatorgenerated  Wed Dec 25 17:22:04 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_TOPIC_LINK
	 * @ibatorgenerated  Wed Dec 25 17:22:04 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TOPIC_LINK
	 * @ibatorgenerated  Wed Dec 25 17:22:04 CST 2013
	 */
	public IrpTopicLinkExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TOPIC_LINK
	 * @ibatorgenerated  Wed Dec 25 17:22:04 CST 2013
	 */
	protected IrpTopicLinkExample(IrpTopicLinkExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TOPIC_LINK
	 * @ibatorgenerated  Wed Dec 25 17:22:04 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TOPIC_LINK
	 * @ibatorgenerated  Wed Dec 25 17:22:04 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TOPIC_LINK
	 * @ibatorgenerated  Wed Dec 25 17:22:04 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TOPIC_LINK
	 * @ibatorgenerated  Wed Dec 25 17:22:04 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TOPIC_LINK
	 * @ibatorgenerated  Wed Dec 25 17:22:04 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TOPIC_LINK
	 * @ibatorgenerated  Wed Dec 25 17:22:04 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_TOPIC_LINK
	 * @ibatorgenerated  Wed Dec 25 17:22:04 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_TOPIC_LINK
	 * @ibatorgenerated  Wed Dec 25 17:22:04 CST 2013
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andTopiclinkidIsNull() {
			addCriterion("TOPICLINKID is null");
			return this;
		}

		public Criteria andTopiclinkidIsNotNull() {
			addCriterion("TOPICLINKID is not null");
			return this;
		}

		public Criteria andTopiclinkidEqualTo(Long value) {
			addCriterion("TOPICLINKID =", value, "topiclinkid");
			return this;
		}

		public Criteria andTopiclinkidNotEqualTo(Long value) {
			addCriterion("TOPICLINKID <>", value, "topiclinkid");
			return this;
		}

		public Criteria andTopiclinkidGreaterThan(Long value) {
			addCriterion("TOPICLINKID >", value, "topiclinkid");
			return this;
		}

		public Criteria andTopiclinkidGreaterThanOrEqualTo(Long value) {
			addCriterion("TOPICLINKID >=", value, "topiclinkid");
			return this;
		}

		public Criteria andTopiclinkidLessThan(Long value) {
			addCriterion("TOPICLINKID <", value, "topiclinkid");
			return this;
		}

		public Criteria andTopiclinkidLessThanOrEqualTo(Long value) {
			addCriterion("TOPICLINKID <=", value, "topiclinkid");
			return this;
		}

		public Criteria andTopiclinkidIn(List<Long> values) {
			addCriterion("TOPICLINKID in", values, "topiclinkid");
			return this;
		}

		public Criteria andTopiclinkidNotIn(List<Long> values) {
			addCriterion("TOPICLINKID not in", values, "topiclinkid");
			return this;
		}

		public Criteria andTopiclinkidBetween(Long value1, Long value2) {
			addCriterion("TOPICLINKID between", value1, value2, "topiclinkid");
			return this;
		}

		public Criteria andTopiclinkidNotBetween(Long value1, Long value2) {
			addCriterion("TOPICLINKID not between", value1, value2,
					"topiclinkid");
			return this;
		}

		public Criteria andTopicnameIsNull() {
			addCriterion("TOPICNAME is null");
			return this;
		}

		public Criteria andTopicnameIsNotNull() {
			addCriterion("TOPICNAME is not null");
			return this;
		}

		public Criteria andTopicnameEqualTo(String value) {
			addCriterion("TOPICNAME =", value, "topicname");
			return this;
		}

		public Criteria andTopicnameNotEqualTo(String value) {
			addCriterion("TOPICNAME <>", value, "topicname");
			return this;
		}

		public Criteria andTopicnameGreaterThan(String value) {
			addCriterion("TOPICNAME >", value, "topicname");
			return this;
		}

		public Criteria andTopicnameGreaterThanOrEqualTo(String value) {
			addCriterion("TOPICNAME >=", value, "topicname");
			return this;
		}

		public Criteria andTopicnameLessThan(String value) {
			addCriterion("TOPICNAME <", value, "topicname");
			return this;
		}

		public Criteria andTopicnameLessThanOrEqualTo(String value) {
			addCriterion("TOPICNAME <=", value, "topicname");
			return this;
		}

		public Criteria andTopicnameLike(String value) {
			addCriterion("TOPICNAME like", value, "topicname");
			return this;
		}

		public Criteria andTopicnameNotLike(String value) {
			addCriterion("TOPICNAME not like", value, "topicname");
			return this;
		}

		public Criteria andTopicnameIn(List<String> values) {
			addCriterion("TOPICNAME in", values, "topicname");
			return this;
		}

		public Criteria andTopicnameNotIn(List<String> values) {
			addCriterion("TOPICNAME not in", values, "topicname");
			return this;
		}

		public Criteria andTopicnameBetween(String value1, String value2) {
			addCriterion("TOPICNAME between", value1, value2, "topicname");
			return this;
		}

		public Criteria andTopicnameNotBetween(String value1, String value2) {
			addCriterion("TOPICNAME not between", value1, value2, "topicname");
			return this;
		}

		public Criteria andMicroblogidIsNull() {
			addCriterion("MICROBLOGID is null");
			return this;
		}

		public Criteria andMicroblogidIsNotNull() {
			addCriterion("MICROBLOGID is not null");
			return this;
		}

		public Criteria andMicroblogidEqualTo(Long value) {
			addCriterion("MICROBLOGID =", value, "microblogid");
			return this;
		}

		public Criteria andMicroblogidNotEqualTo(Long value) {
			addCriterion("MICROBLOGID <>", value, "microblogid");
			return this;
		}

		public Criteria andMicroblogidGreaterThan(Long value) {
			addCriterion("MICROBLOGID >", value, "microblogid");
			return this;
		}

		public Criteria andMicroblogidGreaterThanOrEqualTo(Long value) {
			addCriterion("MICROBLOGID >=", value, "microblogid");
			return this;
		}

		public Criteria andMicroblogidLessThan(Long value) {
			addCriterion("MICROBLOGID <", value, "microblogid");
			return this;
		}

		public Criteria andMicroblogidLessThanOrEqualTo(Long value) {
			addCriterion("MICROBLOGID <=", value, "microblogid");
			return this;
		}

		public Criteria andMicroblogidIn(List<Long> values) {
			addCriterion("MICROBLOGID in", values, "microblogid");
			return this;
		}

		public Criteria andMicroblogidNotIn(List<Long> values) {
			addCriterion("MICROBLOGID not in", values, "microblogid");
			return this;
		}

		public Criteria andMicroblogidBetween(Long value1, Long value2) {
			addCriterion("MICROBLOGID between", value1, value2, "microblogid");
			return this;
		}

		public Criteria andMicroblogidNotBetween(Long value1, Long value2) {
			addCriterion("MICROBLOGID not between", value1, value2,
					"microblogid");
			return this;
		}

		public Criteria andTopictypeIsNull() {
			addCriterion("TOPICTYPE is null");
			return this;
		}

		public Criteria andTopictypeIsNotNull() {
			addCriterion("TOPICTYPE is not null");
			return this;
		}

		public Criteria andTopictypeEqualTo(Integer value) {
			addCriterion("TOPICTYPE =", value, "topictype");
			return this;
		}

		public Criteria andTopictypeNotEqualTo(Integer value) {
			addCriterion("TOPICTYPE <>", value, "topictype");
			return this;
		}

		public Criteria andTopictypeGreaterThan(Integer value) {
			addCriterion("TOPICTYPE >", value, "topictype");
			return this;
		}

		public Criteria andTopictypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("TOPICTYPE >=", value, "topictype");
			return this;
		}

		public Criteria andTopictypeLessThan(Integer value) {
			addCriterion("TOPICTYPE <", value, "topictype");
			return this;
		}

		public Criteria andTopictypeLessThanOrEqualTo(Integer value) {
			addCriterion("TOPICTYPE <=", value, "topictype");
			return this;
		}

		public Criteria andTopictypeIn(List<Integer> values) {
			addCriterion("TOPICTYPE in", values, "topictype");
			return this;
		}

		public Criteria andTopictypeNotIn(List<Integer> values) {
			addCriterion("TOPICTYPE not in", values, "topictype");
			return this;
		}

		public Criteria andTopictypeBetween(Integer value1, Integer value2) {
			addCriterion("TOPICTYPE between", value1, value2, "topictype");
			return this;
		}

		public Criteria andTopictypeNotBetween(Integer value1, Integer value2) {
			addCriterion("TOPICTYPE not between", value1, value2, "topictype");
			return this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME =", value, "crtime");
			return this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <>", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterionForJDBCDate("CRTIME >", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME >=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterionForJDBCDate("CRTIME <", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME not in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME not between", value1, value2,
					"crtime");
			return this;
		}

		public Criteria andCruseridIsNull() {
			addCriterion("CRUSERID is null");
			return this;
		}

		public Criteria andCruseridIsNotNull() {
			addCriterion("CRUSERID is not null");
			return this;
		}

		public Criteria andCruseridEqualTo(Long value) {
			addCriterion("CRUSERID =", value, "cruserid");
			return this;
		}

		public Criteria andCruseridNotEqualTo(Long value) {
			addCriterion("CRUSERID <>", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThan(Long value) {
			addCriterion("CRUSERID >", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThanOrEqualTo(Long value) {
			addCriterion("CRUSERID >=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThan(Long value) {
			addCriterion("CRUSERID <", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThanOrEqualTo(Long value) {
			addCriterion("CRUSERID <=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridIn(List<Long> values) {
			addCriterion("CRUSERID in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridNotIn(List<Long> values) {
			addCriterion("CRUSERID not in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridBetween(Long value1, Long value2) {
			addCriterion("CRUSERID between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCruseridNotBetween(Long value1, Long value2) {
			addCriterion("CRUSERID not between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andExpandfieldIsNull() {
			addCriterion("EXPANDFIELD is null");
			return this;
		}

		public Criteria andExpandfieldIsNotNull() {
			addCriterion("EXPANDFIELD is not null");
			return this;
		}

		public Criteria andExpandfieldEqualTo(Long value) {
			addCriterion("EXPANDFIELD =", value, "expandfield");
			return this;
		}

		public Criteria andExpandfieldNotEqualTo(Long value) {
			addCriterion("EXPANDFIELD <>", value, "expandfield");
			return this;
		}

		public Criteria andExpandfieldGreaterThan(Long value) {
			addCriterion("EXPANDFIELD >", value, "expandfield");
			return this;
		}

		public Criteria andExpandfieldGreaterThanOrEqualTo(Long value) {
			addCriterion("EXPANDFIELD >=", value, "expandfield");
			return this;
		}

		public Criteria andExpandfieldLessThan(Long value) {
			addCriterion("EXPANDFIELD <", value, "expandfield");
			return this;
		}

		public Criteria andExpandfieldLessThanOrEqualTo(Long value) {
			addCriterion("EXPANDFIELD <=", value, "expandfield");
			return this;
		}

		public Criteria andExpandfieldIn(List<Long> values) {
			addCriterion("EXPANDFIELD in", values, "expandfield");
			return this;
		}

		public Criteria andExpandfieldNotIn(List<Long> values) {
			addCriterion("EXPANDFIELD not in", values, "expandfield");
			return this;
		}

		public Criteria andExpandfieldBetween(Long value1, Long value2) {
			addCriterion("EXPANDFIELD between", value1, value2, "expandfield");
			return this;
		}

		public Criteria andExpandfieldNotBetween(Long value1, Long value2) {
			addCriterion("EXPANDFIELD not between", value1, value2,
					"expandfield");
			return this;
		}

		public Criteria andTopicidIsNull() {
			addCriterion("TOPICID is null");
			return this;
		}

		public Criteria andTopicidIsNotNull() {
			addCriterion("TOPICID is not null");
			return this;
		}

		public Criteria andTopicidEqualTo(Long value) {
			addCriterion("TOPICID =", value, "topicid");
			return this;
		}

		public Criteria andTopicidNotEqualTo(Long value) {
			addCriterion("TOPICID <>", value, "topicid");
			return this;
		}

		public Criteria andTopicidGreaterThan(Long value) {
			addCriterion("TOPICID >", value, "topicid");
			return this;
		}

		public Criteria andTopicidGreaterThanOrEqualTo(Long value) {
			addCriterion("TOPICID >=", value, "topicid");
			return this;
		}

		public Criteria andTopicidLessThan(Long value) {
			addCriterion("TOPICID <", value, "topicid");
			return this;
		}

		public Criteria andTopicidLessThanOrEqualTo(Long value) {
			addCriterion("TOPICID <=", value, "topicid");
			return this;
		}

		public Criteria andTopicidIn(List<Long> values) {
			addCriterion("TOPICID in", values, "topicid");
			return this;
		}

		public Criteria andTopicidNotIn(List<Long> values) {
			addCriterion("TOPICID not in", values, "topicid");
			return this;
		}

		public Criteria andTopicidBetween(Long value1, Long value2) {
			addCriterion("TOPICID between", value1, value2, "topicid");
			return this;
		}

		public Criteria andTopicidNotBetween(Long value1, Long value2) {
			addCriterion("TOPICID not between", value1, value2, "topicid");
			return this;
		}
	}
}