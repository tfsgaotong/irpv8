package com.tfs.irp.userRandom.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpUserrandomExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_USERRANDOM
     *
     * @ibatorgenerated Wed Sep 25 15:31:22 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_USERRANDOM
     *
     * @ibatorgenerated Wed Sep 25 15:31:22 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_USERRANDOM
     *
     * @ibatorgenerated Wed Sep 25 15:31:22 CST 2013
     */
    public IrpUserrandomExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_USERRANDOM
     *
     * @ibatorgenerated Wed Sep 25 15:31:22 CST 2013
     */
    protected IrpUserrandomExample(IrpUserrandomExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_USERRANDOM
     *
     * @ibatorgenerated Wed Sep 25 15:31:22 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_USERRANDOM
     *
     * @ibatorgenerated Wed Sep 25 15:31:22 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_USERRANDOM
     *
     * @ibatorgenerated Wed Sep 25 15:31:22 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_USERRANDOM
     *
     * @ibatorgenerated Wed Sep 25 15:31:22 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_USERRANDOM
     *
     * @ibatorgenerated Wed Sep 25 15:31:22 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_USERRANDOM
     *
     * @ibatorgenerated Wed Sep 25 15:31:22 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_USERRANDOM
     *
     * @ibatorgenerated Wed Sep 25 15:31:22 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_USERRANDOM
     *
     * @ibatorgenerated Wed Sep 25 15:31:22 CST 2013
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andRandomidIsNull() {
            addCriterion("RANDOMID is null");
            return this;
        }

        public Criteria andRandomidIsNotNull() {
            addCriterion("RANDOMID is not null");
            return this;
        }

        public Criteria andRandomidEqualTo(Long value) {
            addCriterion("RANDOMID =", value, "randomid");
            return this;
        }

        public Criteria andRandomidNotEqualTo(Long value) {
            addCriterion("RANDOMID <>", value, "randomid");
            return this;
        }

        public Criteria andRandomidGreaterThan(Long value) {
            addCriterion("RANDOMID >", value, "randomid");
            return this;
        }

        public Criteria andRandomidGreaterThanOrEqualTo(Long value) {
            addCriterion("RANDOMID >=", value, "randomid");
            return this;
        }

        public Criteria andRandomidLessThan(Long value) {
            addCriterion("RANDOMID <", value, "randomid");
            return this;
        }

        public Criteria andRandomidLessThanOrEqualTo(Long value) {
            addCriterion("RANDOMID <=", value, "randomid");
            return this;
        }

        public Criteria andRandomidIn(List<Long> values) {
            addCriterion("RANDOMID in", values, "randomid");
            return this;
        }

        public Criteria andRandomidNotIn(List<Long> values) {
            addCriterion("RANDOMID not in", values, "randomid");
            return this;
        }

        public Criteria andRandomidBetween(Long value1, Long value2) {
            addCriterion("RANDOMID between", value1, value2, "randomid");
            return this;
        }

        public Criteria andRandomidNotBetween(Long value1, Long value2) {
            addCriterion("RANDOMID not between", value1, value2, "randomid");
            return this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("USERID is null");
            return this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("USERID is not null");
            return this;
        }

        public Criteria andUseridEqualTo(Long value) {
            addCriterion("USERID =", value, "userid");
            return this;
        }

        public Criteria andUseridNotEqualTo(Long value) {
            addCriterion("USERID <>", value, "userid");
            return this;
        }

        public Criteria andUseridGreaterThan(Long value) {
            addCriterion("USERID >", value, "userid");
            return this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Long value) {
            addCriterion("USERID >=", value, "userid");
            return this;
        }

        public Criteria andUseridLessThan(Long value) {
            addCriterion("USERID <", value, "userid");
            return this;
        }

        public Criteria andUseridLessThanOrEqualTo(Long value) {
            addCriterion("USERID <=", value, "userid");
            return this;
        }

        public Criteria andUseridIn(List<Long> values) {
            addCriterion("USERID in", values, "userid");
            return this;
        }

        public Criteria andUseridNotIn(List<Long> values) {
            addCriterion("USERID not in", values, "userid");
            return this;
        }

        public Criteria andUseridBetween(Long value1, Long value2) {
            addCriterion("USERID between", value1, value2, "userid");
            return this;
        }

        public Criteria andUseridNotBetween(Long value1, Long value2) {
            addCriterion("USERID not between", value1, value2, "userid");
            return this;
        }

        public Criteria andRandomsIsNull() {
            addCriterion("RANDOMS is null");
            return this;
        }

        public Criteria andRandomsIsNotNull() {
            addCriterion("RANDOMS is not null");
            return this;
        }

        public Criteria andRandomsEqualTo(String value) {
            addCriterion("RANDOMS =", value, "randoms");
            return this;
        }

        public Criteria andRandomsNotEqualTo(String value) {
            addCriterion("RANDOMS <>", value, "randoms");
            return this;
        }

        public Criteria andRandomsGreaterThan(String value) {
            addCriterion("RANDOMS >", value, "randoms");
            return this;
        }

        public Criteria andRandomsGreaterThanOrEqualTo(String value) {
            addCriterion("RANDOMS >=", value, "randoms");
            return this;
        }

        public Criteria andRandomsLessThan(String value) {
            addCriterion("RANDOMS <", value, "randoms");
            return this;
        }

        public Criteria andRandomsLessThanOrEqualTo(String value) {
            addCriterion("RANDOMS <=", value, "randoms");
            return this;
        }

        public Criteria andRandomsLike(String value) {
            addCriterion("RANDOMS like", value, "randoms");
            return this;
        }

        public Criteria andRandomsNotLike(String value) {
            addCriterion("RANDOMS not like", value, "randoms");
            return this;
        }

        public Criteria andRandomsIn(List<String> values) {
            addCriterion("RANDOMS in", values, "randoms");
            return this;
        }

        public Criteria andRandomsNotIn(List<String> values) {
            addCriterion("RANDOMS not in", values, "randoms");
            return this;
        }

        public Criteria andRandomsBetween(String value1, String value2) {
            addCriterion("RANDOMS between", value1, value2, "randoms");
            return this;
        }

        public Criteria andRandomsNotBetween(String value1, String value2) {
            addCriterion("RANDOMS not between", value1, value2, "randoms");
            return this;
        }

        public Criteria andSendtimeIsNull() {
            addCriterion("SENDTIME is null");
            return this;
        }

        public Criteria andSendtimeIsNotNull() {
            addCriterion("SENDTIME is not null");
            return this;
        }

        public Criteria andSendtimeEqualTo(Date value) {
            addCriterion("SENDTIME =", value, "sendtime");
            return this;
        }

        public Criteria andSendtimeNotEqualTo(Date value) {
            addCriterion("SENDTIME <>", value, "sendtime");
            return this;
        }

        public Criteria andSendtimeGreaterThan(Date value) {
            addCriterion("SENDTIME >", value, "sendtime");
            return this;
        }

        public Criteria andSendtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("SENDTIME >=", value, "sendtime");
            return this;
        }

        public Criteria andSendtimeLessThan(Date value) {
            addCriterion("SENDTIME <", value, "sendtime");
            return this;
        }

        public Criteria andSendtimeLessThanOrEqualTo(Date value) {
            addCriterion("SENDTIME <=", value, "sendtime");
            return this;
        }

        public Criteria andSendtimeIn(List<Date> values) {
            addCriterion("SENDTIME in", values, "sendtime");
            return this;
        }

        public Criteria andSendtimeNotIn(List<Date> values) {
            addCriterion("SENDTIME not in", values, "sendtime");
            return this;
        }

        public Criteria andSendtimeBetween(Date value1, Date value2) {
            addCriterion("SENDTIME between", value1, value2, "sendtime");
            return this;
        }

        public Criteria andSendtimeNotBetween(Date value1, Date value2) {
            addCriterion("SENDTIME not between", value1, value2, "sendtime");
            return this;
        }

        public Criteria andVidIsNull() {
            addCriterion("VID is null");
            return this;
        }

        public Criteria andVidIsNotNull() {
            addCriterion("VID is not null");
            return this;
        }

        public Criteria andVidEqualTo(Long value) {
            addCriterion("VID =", value, "vid");
            return this;
        }

        public Criteria andVidNotEqualTo(Long value) {
            addCriterion("VID <>", value, "vid");
            return this;
        }

        public Criteria andVidGreaterThan(Long value) {
            addCriterion("VID >", value, "vid");
            return this;
        }

        public Criteria andVidGreaterThanOrEqualTo(Long value) {
            addCriterion("VID >=", value, "vid");
            return this;
        }

        public Criteria andVidLessThan(Long value) {
            addCriterion("VID <", value, "vid");
            return this;
        }

        public Criteria andVidLessThanOrEqualTo(Long value) {
            addCriterion("VID <=", value, "vid");
            return this;
        }

        public Criteria andVidIn(List<Long> values) {
            addCriterion("VID in", values, "vid");
            return this;
        }

        public Criteria andVidNotIn(List<Long> values) {
            addCriterion("VID not in", values, "vid");
            return this;
        }

        public Criteria andVidBetween(Long value1, Long value2) {
            addCriterion("VID between", value1, value2, "vid");
            return this;
        }

        public Criteria andVidNotBetween(Long value1, Long value2) {
            addCriterion("VID not between", value1, value2, "vid");
            return this;
        }

        public Criteria andVtextIsNull() {
            addCriterion("VTEXT is null");
            return this;
        }

        public Criteria andVtextIsNotNull() {
            addCriterion("VTEXT is not null");
            return this;
        }

        public Criteria andVtextEqualTo(String value) {
            addCriterion("VTEXT =", value, "vtext");
            return this;
        }

        public Criteria andVtextNotEqualTo(String value) {
            addCriterion("VTEXT <>", value, "vtext");
            return this;
        }

        public Criteria andVtextGreaterThan(String value) {
            addCriterion("VTEXT >", value, "vtext");
            return this;
        }

        public Criteria andVtextGreaterThanOrEqualTo(String value) {
            addCriterion("VTEXT >=", value, "vtext");
            return this;
        }

        public Criteria andVtextLessThan(String value) {
            addCriterion("VTEXT <", value, "vtext");
            return this;
        }

        public Criteria andVtextLessThanOrEqualTo(String value) {
            addCriterion("VTEXT <=", value, "vtext");
            return this;
        }

        public Criteria andVtextLike(String value) {
            addCriterion("VTEXT like", value, "vtext");
            return this;
        }

        public Criteria andVtextNotLike(String value) {
            addCriterion("VTEXT not like", value, "vtext");
            return this;
        }

        public Criteria andVtextIn(List<String> values) {
            addCriterion("VTEXT in", values, "vtext");
            return this;
        }

        public Criteria andVtextNotIn(List<String> values) {
            addCriterion("VTEXT not in", values, "vtext");
            return this;
        }

        public Criteria andVtextBetween(String value1, String value2) {
            addCriterion("VTEXT between", value1, value2, "vtext");
            return this;
        }

        public Criteria andVtextNotBetween(String value1, String value2) {
            addCriterion("VTEXT not between", value1, value2, "vtext");
            return this;
        }
    }
}