package com.tfs.irp.usermedal.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpUserMedalExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table IRP_USER_MEDAL
     *
     * @abatorgenerated Fri Apr 28 14:44:25 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table IRP_USER_MEDAL
     *
     * @abatorgenerated Fri Apr 28 14:44:25 CST 2017
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table IRP_USER_MEDAL
     *
     * @abatorgenerated Fri Apr 28 14:44:25 CST 2017
     */
    public IrpUserMedalExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table IRP_USER_MEDAL
     *
     * @abatorgenerated Fri Apr 28 14:44:25 CST 2017
     */
    protected IrpUserMedalExample(IrpUserMedalExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table IRP_USER_MEDAL
     *
     * @abatorgenerated Fri Apr 28 14:44:25 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table IRP_USER_MEDAL
     *
     * @abatorgenerated Fri Apr 28 14:44:25 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table IRP_USER_MEDAL
     *
     * @abatorgenerated Fri Apr 28 14:44:25 CST 2017
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table IRP_USER_MEDAL
     *
     * @abatorgenerated Fri Apr 28 14:44:25 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table IRP_USER_MEDAL
     *
     * @abatorgenerated Fri Apr 28 14:44:25 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table IRP_USER_MEDAL
     *
     * @abatorgenerated Fri Apr 28 14:44:25 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table IRP_USER_MEDAL
     *
     * @abatorgenerated Fri Apr 28 14:44:25 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table IRP_USER_MEDAL
     *
     * @abatorgenerated Fri Apr 28 14:44:25 CST 2017
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andUsermedalidIsNull() {
            addCriterion("USERMEDALID is null");
            return this;
        }

        public Criteria andUsermedalidIsNotNull() {
            addCriterion("USERMEDALID is not null");
            return this;
        }

        public Criteria andUsermedalidEqualTo(Long value) {
            addCriterion("USERMEDALID =", value, "usermedalid");
            return this;
        }

        public Criteria andUsermedalidNotEqualTo(Long value) {
            addCriterion("USERMEDALID <>", value, "usermedalid");
            return this;
        }

        public Criteria andUsermedalidGreaterThan(Long value) {
            addCriterion("USERMEDALID >", value, "usermedalid");
            return this;
        }

        public Criteria andUsermedalidGreaterThanOrEqualTo(Long value) {
            addCriterion("USERMEDALID >=", value, "usermedalid");
            return this;
        }

        public Criteria andUsermedalidLessThan(Long value) {
            addCriterion("USERMEDALID <", value, "usermedalid");
            return this;
        }

        public Criteria andUsermedalidLessThanOrEqualTo(Long value) {
            addCriterion("USERMEDALID <=", value, "usermedalid");
            return this;
        }

        public Criteria andUsermedalidIn(List values) {
            addCriterion("USERMEDALID in", values, "usermedalid");
            return this;
        }

        public Criteria andUsermedalidNotIn(List values) {
            addCriterion("USERMEDALID not in", values, "usermedalid");
            return this;
        }

        public Criteria andUsermedalidBetween(Long value1, Long value2) {
            addCriterion("USERMEDALID between", value1, value2, "usermedalid");
            return this;
        }

        public Criteria andUsermedalidNotBetween(Long value1, Long value2) {
            addCriterion("USERMEDALID not between", value1, value2, "usermedalid");
            return this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("USERID is null");
            return this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("USERID is not null");
            return this;
        }

        public Criteria andUseridEqualTo(Long value) {
            addCriterion("USERID =", value, "userid");
            return this;
        }

        public Criteria andUseridNotEqualTo(Long value) {
            addCriterion("USERID <>", value, "userid");
            return this;
        }

        public Criteria andUseridGreaterThan(Long value) {
            addCriterion("USERID >", value, "userid");
            return this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Long value) {
            addCriterion("USERID >=", value, "userid");
            return this;
        }

        public Criteria andUseridLessThan(Long value) {
            addCriterion("USERID <", value, "userid");
            return this;
        }

        public Criteria andUseridLessThanOrEqualTo(Long value) {
            addCriterion("USERID <=", value, "userid");
            return this;
        }

        public Criteria andUseridIn(List values) {
            addCriterion("USERID in", values, "userid");
            return this;
        }

        public Criteria andUseridNotIn(List values) {
            addCriterion("USERID not in", values, "userid");
            return this;
        }

        public Criteria andUseridBetween(Long value1, Long value2) {
            addCriterion("USERID between", value1, value2, "userid");
            return this;
        }

        public Criteria andUseridNotBetween(Long value1, Long value2) {
            addCriterion("USERID not between", value1, value2, "userid");
            return this;
        }

        public Criteria andUsernameIsNull() {
            addCriterion("USERNAME is null");
            return this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("USERNAME is not null");
            return this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("USERNAME =", value, "username");
            return this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("USERNAME <>", value, "username");
            return this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("USERNAME >", value, "username");
            return this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("USERNAME >=", value, "username");
            return this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("USERNAME <", value, "username");
            return this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("USERNAME <=", value, "username");
            return this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("USERNAME like", value, "username");
            return this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("USERNAME not like", value, "username");
            return this;
        }

        public Criteria andUsernameIn(List values) {
            addCriterion("USERNAME in", values, "username");
            return this;
        }

        public Criteria andUsernameNotIn(List values) {
            addCriterion("USERNAME not in", values, "username");
            return this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("USERNAME between", value1, value2, "username");
            return this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("USERNAME not between", value1, value2, "username");
            return this;
        }

        public Criteria andMedalidIsNull() {
            addCriterion("MEDALID is null");
            return this;
        }

        public Criteria andMedalidIsNotNull() {
            addCriterion("MEDALID is not null");
            return this;
        }

        public Criteria andMedalidEqualTo(Long value) {
            addCriterion("MEDALID =", value, "medalid");
            return this;
        }

        public Criteria andMedalidNotEqualTo(Long value) {
            addCriterion("MEDALID <>", value, "medalid");
            return this;
        }

        public Criteria andMedalidGreaterThan(Long value) {
            addCriterion("MEDALID >", value, "medalid");
            return this;
        }

        public Criteria andMedalidGreaterThanOrEqualTo(Long value) {
            addCriterion("MEDALID >=", value, "medalid");
            return this;
        }

        public Criteria andMedalidLessThan(Long value) {
            addCriterion("MEDALID <", value, "medalid");
            return this;
        }

        public Criteria andMedalidLessThanOrEqualTo(Long value) {
            addCriterion("MEDALID <=", value, "medalid");
            return this;
        }

        public Criteria andMedalidIn(List values) {
            addCriterion("MEDALID in", values, "medalid");
            return this;
        }

        public Criteria andMedalidNotIn(List values) {
            addCriterion("MEDALID not in", values, "medalid");
            return this;
        }

        public Criteria andMedalidBetween(Long value1, Long value2) {
            addCriterion("MEDALID between", value1, value2, "medalid");
            return this;
        }

        public Criteria andMedalidNotBetween(Long value1, Long value2) {
            addCriterion("MEDALID not between", value1, value2, "medalid");
            return this;
        }

        public Criteria andMedalnameIsNull() {
            addCriterion("MEDALNAME is null");
            return this;
        }

        public Criteria andMedalnameIsNotNull() {
            addCriterion("MEDALNAME is not null");
            return this;
        }

        public Criteria andMedalnameEqualTo(String value) {
            addCriterion("MEDALNAME =", value, "medalname");
            return this;
        }

        public Criteria andMedalnameNotEqualTo(String value) {
            addCriterion("MEDALNAME <>", value, "medalname");
            return this;
        }

        public Criteria andMedalnameGreaterThan(String value) {
            addCriterion("MEDALNAME >", value, "medalname");
            return this;
        }

        public Criteria andMedalnameGreaterThanOrEqualTo(String value) {
            addCriterion("MEDALNAME >=", value, "medalname");
            return this;
        }

        public Criteria andMedalnameLessThan(String value) {
            addCriterion("MEDALNAME <", value, "medalname");
            return this;
        }

        public Criteria andMedalnameLessThanOrEqualTo(String value) {
            addCriterion("MEDALNAME <=", value, "medalname");
            return this;
        }

        public Criteria andMedalnameLike(String value) {
            addCriterion("MEDALNAME like", value, "medalname");
            return this;
        }

        public Criteria andMedalnameNotLike(String value) {
            addCriterion("MEDALNAME not like", value, "medalname");
            return this;
        }

        public Criteria andMedalnameIn(List values) {
            addCriterion("MEDALNAME in", values, "medalname");
            return this;
        }

        public Criteria andMedalnameNotIn(List values) {
            addCriterion("MEDALNAME not in", values, "medalname");
            return this;
        }

        public Criteria andMedalnameBetween(String value1, String value2) {
            addCriterion("MEDALNAME between", value1, value2, "medalname");
            return this;
        }

        public Criteria andMedalnameNotBetween(String value1, String value2) {
            addCriterion("MEDALNAME not between", value1, value2, "medalname");
            return this;
        }

        public Criteria andMedalstateIsNull() {
            addCriterion("MEDALSTATE is null");
            return this;
        }

        public Criteria andMedalstateIsNotNull() {
            addCriterion("MEDALSTATE is not null");
            return this;
        }

        public Criteria andMedalstateEqualTo(Long value) {
            addCriterion("MEDALSTATE =", value, "medalstate");
            return this;
        }

        public Criteria andMedalstateNotEqualTo(Long value) {
            addCriterion("MEDALSTATE <>", value, "medalstate");
            return this;
        }

        public Criteria andMedalstateGreaterThan(Long value) {
            addCriterion("MEDALSTATE >", value, "medalstate");
            return this;
        }

        public Criteria andMedalstateGreaterThanOrEqualTo(Long value) {
            addCriterion("MEDALSTATE >=", value, "medalstate");
            return this;
        }

        public Criteria andMedalstateLessThan(Long value) {
            addCriterion("MEDALSTATE <", value, "medalstate");
            return this;
        }

        public Criteria andMedalstateLessThanOrEqualTo(Long value) {
            addCriterion("MEDALSTATE <=", value, "medalstate");
            return this;
        }

        public Criteria andMedalstateIn(List values) {
            addCriterion("MEDALSTATE in", values, "medalstate");
            return this;
        }

        public Criteria andMedalstateNotIn(List values) {
            addCriterion("MEDALSTATE not in", values, "medalstate");
            return this;
        }

        public Criteria andMedalstateBetween(Long value1, Long value2) {
            addCriterion("MEDALSTATE between", value1, value2, "medalstate");
            return this;
        }

        public Criteria andMedalstateNotBetween(Long value1, Long value2) {
            addCriterion("MEDALSTATE not between", value1, value2, "medalstate");
            return this;
        }

        public Criteria andCoverttimeIsNull() {
            addCriterion("COVERTTIME is null");
            return this;
        }

        public Criteria andCoverttimeIsNotNull() {
            addCriterion("COVERTTIME is not null");
            return this;
        }

        public Criteria andCoverttimeEqualTo(Date value) {
            addCriterion("COVERTTIME =", value, "coverttime");
            return this;
        }

        public Criteria andCoverttimeNotEqualTo(Date value) {
            addCriterion("COVERTTIME <>", value, "coverttime");
            return this;
        }

        public Criteria andCoverttimeGreaterThan(Date value) {
            addCriterion("COVERTTIME >", value, "coverttime");
            return this;
        }

        public Criteria andCoverttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("COVERTTIME >=", value, "coverttime");
            return this;
        }

        public Criteria andCoverttimeLessThan(Date value) {
            addCriterion("COVERTTIME <", value, "coverttime");
            return this;
        }

        public Criteria andCoverttimeLessThanOrEqualTo(Date value) {
            addCriterion("COVERTTIME <=", value, "coverttime");
            return this;
        }

        public Criteria andCoverttimeIn(List values) {
            addCriterion("COVERTTIME in", values, "coverttime");
            return this;
        }

        public Criteria andCoverttimeNotIn(List values) {
            addCriterion("COVERTTIME not in", values, "coverttime");
            return this;
        }

        public Criteria andCoverttimeBetween(Date value1, Date value2) {
            addCriterion("COVERTTIME between", value1, value2, "coverttime");
            return this;
        }

        public Criteria andCoverttimeNotBetween(Date value1, Date value2) {
            addCriterion("COVERTTIME not between", value1, value2, "coverttime");
            return this;
        }
    }
}