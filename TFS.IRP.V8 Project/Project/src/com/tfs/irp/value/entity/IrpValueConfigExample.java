package com.tfs.irp.value.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpValueConfigExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_VALUE_CONFIG
	 * @ibatorgenerated  Wed Jul 17 11:13:57 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_VALUE_CONFIG
	 * @ibatorgenerated  Wed Jul 17 11:13:57 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_CONFIG
	 * @ibatorgenerated  Wed Jul 17 11:13:57 CST 2013
	 */
	public IrpValueConfigExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_CONFIG
	 * @ibatorgenerated  Wed Jul 17 11:13:57 CST 2013
	 */
	protected IrpValueConfigExample(IrpValueConfigExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_CONFIG
	 * @ibatorgenerated  Wed Jul 17 11:13:57 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_CONFIG
	 * @ibatorgenerated  Wed Jul 17 11:13:57 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_CONFIG
	 * @ibatorgenerated  Wed Jul 17 11:13:57 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_CONFIG
	 * @ibatorgenerated  Wed Jul 17 11:13:57 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_CONFIG
	 * @ibatorgenerated  Wed Jul 17 11:13:57 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_CONFIG
	 * @ibatorgenerated  Wed Jul 17 11:13:57 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_CONFIG
	 * @ibatorgenerated  Wed Jul 17 11:13:57 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_VALUE_CONFIG
	 * @ibatorgenerated  Wed Jul 17 11:13:57 CST 2013
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andValueidIsNull() {
			addCriterion("VALUEID is null");
			return this;
		}

		public Criteria andValueidIsNotNull() {
			addCriterion("VALUEID is not null");
			return this;
		}

		public Criteria andValueidEqualTo(Long value) {
			addCriterion("VALUEID =", value, "valueid");
			return this;
		}

		public Criteria andValueidNotEqualTo(Long value) {
			addCriterion("VALUEID <>", value, "valueid");
			return this;
		}

		public Criteria andValueidGreaterThan(Long value) {
			addCriterion("VALUEID >", value, "valueid");
			return this;
		}

		public Criteria andValueidGreaterThanOrEqualTo(Long value) {
			addCriterion("VALUEID >=", value, "valueid");
			return this;
		}

		public Criteria andValueidLessThan(Long value) {
			addCriterion("VALUEID <", value, "valueid");
			return this;
		}

		public Criteria andValueidLessThanOrEqualTo(Long value) {
			addCriterion("VALUEID <=", value, "valueid");
			return this;
		}

		public Criteria andValueidIn(List<Long> values) {
			addCriterion("VALUEID in", values, "valueid");
			return this;
		}

		public Criteria andValueidNotIn(List<Long> values) {
			addCriterion("VALUEID not in", values, "valueid");
			return this;
		}

		public Criteria andValueidBetween(Long value1, Long value2) {
			addCriterion("VALUEID between", value1, value2, "valueid");
			return this;
		}

		public Criteria andValueidNotBetween(Long value1, Long value2) {
			addCriterion("VALUEID not between", value1, value2, "valueid");
			return this;
		}

		public Criteria andValuekeyIsNull() {
			addCriterion("VALUEKEY is null");
			return this;
		}

		public Criteria andValuekeyIsNotNull() {
			addCriterion("VALUEKEY is not null");
			return this;
		}

		public Criteria andValuekeyEqualTo(String value) {
			addCriterion("VALUEKEY =", value, "valuekey");
			return this;
		}

		public Criteria andValuekeyNotEqualTo(String value) {
			addCriterion("VALUEKEY <>", value, "valuekey");
			return this;
		}

		public Criteria andValuekeyGreaterThan(String value) {
			addCriterion("VALUEKEY >", value, "valuekey");
			return this;
		}

		public Criteria andValuekeyGreaterThanOrEqualTo(String value) {
			addCriterion("VALUEKEY >=", value, "valuekey");
			return this;
		}

		public Criteria andValuekeyLessThan(String value) {
			addCriterion("VALUEKEY <", value, "valuekey");
			return this;
		}

		public Criteria andValuekeyLessThanOrEqualTo(String value) {
			addCriterion("VALUEKEY <=", value, "valuekey");
			return this;
		}

		public Criteria andValuekeyLike(String value) {
			addCriterion("VALUEKEY like", value, "valuekey");
			return this;
		}

		public Criteria andValuekeyNotLike(String value) {
			addCriterion("VALUEKEY not like", value, "valuekey");
			return this;
		}

		public Criteria andValuekeyIn(List<String> values) {
			addCriterion("VALUEKEY in", values, "valuekey");
			return this;
		}

		public Criteria andValuekeyNotIn(List<String> values) {
			addCriterion("VALUEKEY not in", values, "valuekey");
			return this;
		}

		public Criteria andValuekeyBetween(String value1, String value2) {
			addCriterion("VALUEKEY between", value1, value2, "valuekey");
			return this;
		}

		public Criteria andValuekeyNotBetween(String value1, String value2) {
			addCriterion("VALUEKEY not between", value1, value2, "valuekey");
			return this;
		}

		public Criteria andValuedescIsNull() {
			addCriterion("VALUEDESC is null");
			return this;
		}

		public Criteria andValuedescIsNotNull() {
			addCriterion("VALUEDESC is not null");
			return this;
		}

		public Criteria andValuedescEqualTo(String value) {
			addCriterion("VALUEDESC =", value, "valuedesc");
			return this;
		}

		public Criteria andValuedescNotEqualTo(String value) {
			addCriterion("VALUEDESC <>", value, "valuedesc");
			return this;
		}

		public Criteria andValuedescGreaterThan(String value) {
			addCriterion("VALUEDESC >", value, "valuedesc");
			return this;
		}

		public Criteria andValuedescGreaterThanOrEqualTo(String value) {
			addCriterion("VALUEDESC >=", value, "valuedesc");
			return this;
		}

		public Criteria andValuedescLessThan(String value) {
			addCriterion("VALUEDESC <", value, "valuedesc");
			return this;
		}

		public Criteria andValuedescLessThanOrEqualTo(String value) {
			addCriterion("VALUEDESC <=", value, "valuedesc");
			return this;
		}

		public Criteria andValuedescLike(String value) {
			addCriterion("VALUEDESC like", value, "valuedesc");
			return this;
		}

		public Criteria andValuedescNotLike(String value) {
			addCriterion("VALUEDESC not like", value, "valuedesc");
			return this;
		}

		public Criteria andValuedescIn(List<String> values) {
			addCriterion("VALUEDESC in", values, "valuedesc");
			return this;
		}

		public Criteria andValuedescNotIn(List<String> values) {
			addCriterion("VALUEDESC not in", values, "valuedesc");
			return this;
		}

		public Criteria andValuedescBetween(String value1, String value2) {
			addCriterion("VALUEDESC between", value1, value2, "valuedesc");
			return this;
		}

		public Criteria andValuedescNotBetween(String value1, String value2) {
			addCriterion("VALUEDESC not between", value1, value2, "valuedesc");
			return this;
		}

		public Criteria andScoreIsNull() {
			addCriterion("SCORE is null");
			return this;
		}

		public Criteria andScoreIsNotNull() {
			addCriterion("SCORE is not null");
			return this;
		}

		public Criteria andScoreEqualTo(Long value) {
			addCriterion("SCORE =", value, "score");
			return this;
		}

		public Criteria andScoreNotEqualTo(Long value) {
			addCriterion("SCORE <>", value, "score");
			return this;
		}

		public Criteria andScoreGreaterThan(Long value) {
			addCriterion("SCORE >", value, "score");
			return this;
		}

		public Criteria andScoreGreaterThanOrEqualTo(Long value) {
			addCriterion("SCORE >=", value, "score");
			return this;
		}

		public Criteria andScoreLessThan(Long value) {
			addCriterion("SCORE <", value, "score");
			return this;
		}

		public Criteria andScoreLessThanOrEqualTo(Long value) {
			addCriterion("SCORE <=", value, "score");
			return this;
		}

		public Criteria andScoreIn(List<Long> values) {
			addCriterion("SCORE in", values, "score");
			return this;
		}

		public Criteria andScoreNotIn(List<Long> values) {
			addCriterion("SCORE not in", values, "score");
			return this;
		}

		public Criteria andScoreBetween(Long value1, Long value2) {
			addCriterion("SCORE between", value1, value2, "score");
			return this;
		}

		public Criteria andScoreNotBetween(Long value1, Long value2) {
			addCriterion("SCORE not between", value1, value2, "score");
			return this;
		}

		public Criteria andExperienceIsNull() {
			addCriterion("EXPERIENCE is null");
			return this;
		}

		public Criteria andExperienceIsNotNull() {
			addCriterion("EXPERIENCE is not null");
			return this;
		}

		public Criteria andExperienceEqualTo(Long value) {
			addCriterion("EXPERIENCE =", value, "experience");
			return this;
		}

		public Criteria andExperienceNotEqualTo(Long value) {
			addCriterion("EXPERIENCE <>", value, "experience");
			return this;
		}

		public Criteria andExperienceGreaterThan(Long value) {
			addCriterion("EXPERIENCE >", value, "experience");
			return this;
		}

		public Criteria andExperienceGreaterThanOrEqualTo(Long value) {
			addCriterion("EXPERIENCE >=", value, "experience");
			return this;
		}

		public Criteria andExperienceLessThan(Long value) {
			addCriterion("EXPERIENCE <", value, "experience");
			return this;
		}

		public Criteria andExperienceLessThanOrEqualTo(Long value) {
			addCriterion("EXPERIENCE <=", value, "experience");
			return this;
		}

		public Criteria andExperienceIn(List<Long> values) {
			addCriterion("EXPERIENCE in", values, "experience");
			return this;
		}

		public Criteria andExperienceNotIn(List<Long> values) {
			addCriterion("EXPERIENCE not in", values, "experience");
			return this;
		}

		public Criteria andExperienceBetween(Long value1, Long value2) {
			addCriterion("EXPERIENCE between", value1, value2, "experience");
			return this;
		}

		public Criteria andExperienceNotBetween(Long value1, Long value2) {
			addCriterion("EXPERIENCE not between", value1, value2, "experience");
			return this;
		}

		public Criteria andStartusingIsNull() {
			addCriterion("STARTUSING is null");
			return this;
		}

		public Criteria andStartusingIsNotNull() {
			addCriterion("STARTUSING is not null");
			return this;
		}

		public Criteria andStartusingEqualTo(Integer value) {
			addCriterion("STARTUSING =", value, "startusing");
			return this;
		}

		public Criteria andStartusingNotEqualTo(Integer value) {
			addCriterion("STARTUSING <>", value, "startusing");
			return this;
		}

		public Criteria andStartusingGreaterThan(Integer value) {
			addCriterion("STARTUSING >", value, "startusing");
			return this;
		}

		public Criteria andStartusingGreaterThanOrEqualTo(Integer value) {
			addCriterion("STARTUSING >=", value, "startusing");
			return this;
		}

		public Criteria andStartusingLessThan(Integer value) {
			addCriterion("STARTUSING <", value, "startusing");
			return this;
		}

		public Criteria andStartusingLessThanOrEqualTo(Integer value) {
			addCriterion("STARTUSING <=", value, "startusing");
			return this;
		}

		public Criteria andStartusingIn(List<Integer> values) {
			addCriterion("STARTUSING in", values, "startusing");
			return this;
		}

		public Criteria andStartusingNotIn(List<Integer> values) {
			addCriterion("STARTUSING not in", values, "startusing");
			return this;
		}

		public Criteria andStartusingBetween(Integer value1, Integer value2) {
			addCriterion("STARTUSING between", value1, value2, "startusing");
			return this;
		}

		public Criteria andStartusingNotBetween(Integer value1, Integer value2) {
			addCriterion("STARTUSING not between", value1, value2, "startusing");
			return this;
		}

		public Criteria andMethodnameIsNull() {
			addCriterion("METHODNAME is null");
			return this;
		}

		public Criteria andMethodnameIsNotNull() {
			addCriterion("METHODNAME is not null");
			return this;
		}

		public Criteria andMethodnameEqualTo(String value) {
			addCriterion("METHODNAME =", value, "methodname");
			return this;
		}

		public Criteria andMethodnameNotEqualTo(String value) {
			addCriterion("METHODNAME <>", value, "methodname");
			return this;
		}

		public Criteria andMethodnameGreaterThan(String value) {
			addCriterion("METHODNAME >", value, "methodname");
			return this;
		}

		public Criteria andMethodnameGreaterThanOrEqualTo(String value) {
			addCriterion("METHODNAME >=", value, "methodname");
			return this;
		}

		public Criteria andMethodnameLessThan(String value) {
			addCriterion("METHODNAME <", value, "methodname");
			return this;
		}

		public Criteria andMethodnameLessThanOrEqualTo(String value) {
			addCriterion("METHODNAME <=", value, "methodname");
			return this;
		}

		public Criteria andMethodnameLike(String value) {
			addCriterion("METHODNAME like", value, "methodname");
			return this;
		}

		public Criteria andMethodnameNotLike(String value) {
			addCriterion("METHODNAME not like", value, "methodname");
			return this;
		}

		public Criteria andMethodnameIn(List<String> values) {
			addCriterion("METHODNAME in", values, "methodname");
			return this;
		}

		public Criteria andMethodnameNotIn(List<String> values) {
			addCriterion("METHODNAME not in", values, "methodname");
			return this;
		}

		public Criteria andMethodnameBetween(String value1, String value2) {
			addCriterion("METHODNAME between", value1, value2, "methodname");
			return this;
		}

		public Criteria andMethodnameNotBetween(String value1, String value2) {
			addCriterion("METHODNAME not between", value1, value2, "methodname");
			return this;
		}

		public Criteria andParametersIsNull() {
			addCriterion("PARAMETERS is null");
			return this;
		}

		public Criteria andParametersIsNotNull() {
			addCriterion("PARAMETERS is not null");
			return this;
		}

		public Criteria andParametersEqualTo(String value) {
			addCriterion("PARAMETERS =", value, "parameters");
			return this;
		}

		public Criteria andParametersNotEqualTo(String value) {
			addCriterion("PARAMETERS <>", value, "parameters");
			return this;
		}

		public Criteria andParametersGreaterThan(String value) {
			addCriterion("PARAMETERS >", value, "parameters");
			return this;
		}

		public Criteria andParametersGreaterThanOrEqualTo(String value) {
			addCriterion("PARAMETERS >=", value, "parameters");
			return this;
		}

		public Criteria andParametersLessThan(String value) {
			addCriterion("PARAMETERS <", value, "parameters");
			return this;
		}

		public Criteria andParametersLessThanOrEqualTo(String value) {
			addCriterion("PARAMETERS <=", value, "parameters");
			return this;
		}

		public Criteria andParametersLike(String value) {
			addCriterion("PARAMETERS like", value, "parameters");
			return this;
		}

		public Criteria andParametersNotLike(String value) {
			addCriterion("PARAMETERS not like", value, "parameters");
			return this;
		}

		public Criteria andParametersIn(List<String> values) {
			addCriterion("PARAMETERS in", values, "parameters");
			return this;
		}

		public Criteria andParametersNotIn(List<String> values) {
			addCriterion("PARAMETERS not in", values, "parameters");
			return this;
		}

		public Criteria andParametersBetween(String value1, String value2) {
			addCriterion("PARAMETERS between", value1, value2, "parameters");
			return this;
		}

		public Criteria andParametersNotBetween(String value1, String value2) {
			addCriterion("PARAMETERS not between", value1, value2, "parameters");
			return this;
		}

		public Criteria andBeandaoIsNull() {
			addCriterion("BEANDAO is null");
			return this;
		}

		public Criteria andBeandaoIsNotNull() {
			addCriterion("BEANDAO is not null");
			return this;
		}

		public Criteria andBeandaoEqualTo(String value) {
			addCriterion("BEANDAO =", value, "beandao");
			return this;
		}

		public Criteria andBeandaoNotEqualTo(String value) {
			addCriterion("BEANDAO <>", value, "beandao");
			return this;
		}

		public Criteria andBeandaoGreaterThan(String value) {
			addCriterion("BEANDAO >", value, "beandao");
			return this;
		}

		public Criteria andBeandaoGreaterThanOrEqualTo(String value) {
			addCriterion("BEANDAO >=", value, "beandao");
			return this;
		}

		public Criteria andBeandaoLessThan(String value) {
			addCriterion("BEANDAO <", value, "beandao");
			return this;
		}

		public Criteria andBeandaoLessThanOrEqualTo(String value) {
			addCriterion("BEANDAO <=", value, "beandao");
			return this;
		}

		public Criteria andBeandaoLike(String value) {
			addCriterion("BEANDAO like", value, "beandao");
			return this;
		}

		public Criteria andBeandaoNotLike(String value) {
			addCriterion("BEANDAO not like", value, "beandao");
			return this;
		}

		public Criteria andBeandaoIn(List<String> values) {
			addCriterion("BEANDAO in", values, "beandao");
			return this;
		}

		public Criteria andBeandaoNotIn(List<String> values) {
			addCriterion("BEANDAO not in", values, "beandao");
			return this;
		}

		public Criteria andBeandaoBetween(String value1, String value2) {
			addCriterion("BEANDAO between", value1, value2, "beandao");
			return this;
		}

		public Criteria andBeandaoNotBetween(String value1, String value2) {
			addCriterion("BEANDAO not between", value1, value2, "beandao");
			return this;
		}

		public Criteria andBeanidnameIsNull() {
			addCriterion("BEANIDNAME is null");
			return this;
		}

		public Criteria andBeanidnameIsNotNull() {
			addCriterion("BEANIDNAME is not null");
			return this;
		}

		public Criteria andBeanidnameEqualTo(String value) {
			addCriterion("BEANIDNAME =", value, "beanidname");
			return this;
		}

		public Criteria andBeanidnameNotEqualTo(String value) {
			addCriterion("BEANIDNAME <>", value, "beanidname");
			return this;
		}

		public Criteria andBeanidnameGreaterThan(String value) {
			addCriterion("BEANIDNAME >", value, "beanidname");
			return this;
		}

		public Criteria andBeanidnameGreaterThanOrEqualTo(String value) {
			addCriterion("BEANIDNAME >=", value, "beanidname");
			return this;
		}

		public Criteria andBeanidnameLessThan(String value) {
			addCriterion("BEANIDNAME <", value, "beanidname");
			return this;
		}

		public Criteria andBeanidnameLessThanOrEqualTo(String value) {
			addCriterion("BEANIDNAME <=", value, "beanidname");
			return this;
		}

		public Criteria andBeanidnameLike(String value) {
			addCriterion("BEANIDNAME like", value, "beanidname");
			return this;
		}

		public Criteria andBeanidnameNotLike(String value) {
			addCriterion("BEANIDNAME not like", value, "beanidname");
			return this;
		}

		public Criteria andBeanidnameIn(List<String> values) {
			addCriterion("BEANIDNAME in", values, "beanidname");
			return this;
		}

		public Criteria andBeanidnameNotIn(List<String> values) {
			addCriterion("BEANIDNAME not in", values, "beanidname");
			return this;
		}

		public Criteria andBeanidnameBetween(String value1, String value2) {
			addCriterion("BEANIDNAME between", value1, value2, "beanidname");
			return this;
		}

		public Criteria andBeanidnameNotBetween(String value1, String value2) {
			addCriterion("BEANIDNAME not between", value1, value2, "beanidname");
			return this;
		}

		public Criteria andUsernameIsNull() {
			addCriterion("USERNAME is null");
			return this;
		}

		public Criteria andUsernameIsNotNull() {
			addCriterion("USERNAME is not null");
			return this;
		}

		public Criteria andUsernameEqualTo(String value) {
			addCriterion("USERNAME =", value, "username");
			return this;
		}

		public Criteria andUsernameNotEqualTo(String value) {
			addCriterion("USERNAME <>", value, "username");
			return this;
		}

		public Criteria andUsernameGreaterThan(String value) {
			addCriterion("USERNAME >", value, "username");
			return this;
		}

		public Criteria andUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("USERNAME >=", value, "username");
			return this;
		}

		public Criteria andUsernameLessThan(String value) {
			addCriterion("USERNAME <", value, "username");
			return this;
		}

		public Criteria andUsernameLessThanOrEqualTo(String value) {
			addCriterion("USERNAME <=", value, "username");
			return this;
		}

		public Criteria andUsernameLike(String value) {
			addCriterion("USERNAME like", value, "username");
			return this;
		}

		public Criteria andUsernameNotLike(String value) {
			addCriterion("USERNAME not like", value, "username");
			return this;
		}

		public Criteria andUsernameIn(List<String> values) {
			addCriterion("USERNAME in", values, "username");
			return this;
		}

		public Criteria andUsernameNotIn(List<String> values) {
			addCriterion("USERNAME not in", values, "username");
			return this;
		}

		public Criteria andUsernameBetween(String value1, String value2) {
			addCriterion("USERNAME between", value1, value2, "username");
			return this;
		}

		public Criteria andUsernameNotBetween(String value1, String value2) {
			addCriterion("USERNAME not between", value1, value2, "username");
			return this;
		}
	}
}