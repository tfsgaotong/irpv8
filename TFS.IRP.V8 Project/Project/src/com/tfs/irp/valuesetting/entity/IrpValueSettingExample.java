package com.tfs.irp.valuesetting.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpValueSettingExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_VALUE_SETTING
	 * @ibatorgenerated  Thu Jul 11 15:59:28 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_VALUE_SETTING
	 * @ibatorgenerated  Thu Jul 11 15:59:28 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_SETTING
	 * @ibatorgenerated  Thu Jul 11 15:59:28 CST 2013
	 */
	public IrpValueSettingExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_SETTING
	 * @ibatorgenerated  Thu Jul 11 15:59:28 CST 2013
	 */
	protected IrpValueSettingExample(IrpValueSettingExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_SETTING
	 * @ibatorgenerated  Thu Jul 11 15:59:28 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_SETTING
	 * @ibatorgenerated  Thu Jul 11 15:59:28 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_SETTING
	 * @ibatorgenerated  Thu Jul 11 15:59:28 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_SETTING
	 * @ibatorgenerated  Thu Jul 11 15:59:28 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_SETTING
	 * @ibatorgenerated  Thu Jul 11 15:59:28 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_SETTING
	 * @ibatorgenerated  Thu Jul 11 15:59:28 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_VALUE_SETTING
	 * @ibatorgenerated  Thu Jul 11 15:59:28 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_VALUE_SETTING
	 * @ibatorgenerated  Thu Jul 11 15:59:28 CST 2013
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andSettingidIsNull() {
			addCriterion("SETTINGID is null");
			return this;
		}

		public Criteria andSettingidIsNotNull() {
			addCriterion("SETTINGID is not null");
			return this;
		}

		public Criteria andSettingidEqualTo(Long value) {
			addCriterion("SETTINGID =", value, "settingid");
			return this;
		}

		public Criteria andSettingidNotEqualTo(Long value) {
			addCriterion("SETTINGID <>", value, "settingid");
			return this;
		}

		public Criteria andSettingidGreaterThan(Long value) {
			addCriterion("SETTINGID >", value, "settingid");
			return this;
		}

		public Criteria andSettingidGreaterThanOrEqualTo(Long value) {
			addCriterion("SETTINGID >=", value, "settingid");
			return this;
		}

		public Criteria andSettingidLessThan(Long value) {
			addCriterion("SETTINGID <", value, "settingid");
			return this;
		}

		public Criteria andSettingidLessThanOrEqualTo(Long value) {
			addCriterion("SETTINGID <=", value, "settingid");
			return this;
		}

		public Criteria andSettingidIn(List<Long> values) {
			addCriterion("SETTINGID in", values, "settingid");
			return this;
		}

		public Criteria andSettingidNotIn(List<Long> values) {
			addCriterion("SETTINGID not in", values, "settingid");
			return this;
		}

		public Criteria andSettingidBetween(Long value1, Long value2) {
			addCriterion("SETTINGID between", value1, value2, "settingid");
			return this;
		}

		public Criteria andSettingidNotBetween(Long value1, Long value2) {
			addCriterion("SETTINGID not between", value1, value2, "settingid");
			return this;
		}

		public Criteria andRanknameIsNull() {
			addCriterion("RANKNAME is null");
			return this;
		}

		public Criteria andRanknameIsNotNull() {
			addCriterion("RANKNAME is not null");
			return this;
		}

		public Criteria andRanknameEqualTo(String value) {
			addCriterion("RANKNAME =", value, "rankname");
			return this;
		}

		public Criteria andRanknameNotEqualTo(String value) {
			addCriterion("RANKNAME <>", value, "rankname");
			return this;
		}

		public Criteria andRanknameGreaterThan(String value) {
			addCriterion("RANKNAME >", value, "rankname");
			return this;
		}

		public Criteria andRanknameGreaterThanOrEqualTo(String value) {
			addCriterion("RANKNAME >=", value, "rankname");
			return this;
		}

		public Criteria andRanknameLessThan(String value) {
			addCriterion("RANKNAME <", value, "rankname");
			return this;
		}

		public Criteria andRanknameLessThanOrEqualTo(String value) {
			addCriterion("RANKNAME <=", value, "rankname");
			return this;
		}

		public Criteria andRanknameLike(String value) {
			addCriterion("RANKNAME like", value, "rankname");
			return this;
		}

		public Criteria andRanknameNotLike(String value) {
			addCriterion("RANKNAME not like", value, "rankname");
			return this;
		}

		public Criteria andRanknameIn(List<String> values) {
			addCriterion("RANKNAME in", values, "rankname");
			return this;
		}

		public Criteria andRanknameNotIn(List<String> values) {
			addCriterion("RANKNAME not in", values, "rankname");
			return this;
		}

		public Criteria andRanknameBetween(String value1, String value2) {
			addCriterion("RANKNAME between", value1, value2, "rankname");
			return this;
		}

		public Criteria andRanknameNotBetween(String value1, String value2) {
			addCriterion("RANKNAME not between", value1, value2, "rankname");
			return this;
		}

		public Criteria andRankdescIsNull() {
			addCriterion("RANKDESC is null");
			return this;
		}

		public Criteria andRankdescIsNotNull() {
			addCriterion("RANKDESC is not null");
			return this;
		}

		public Criteria andRankdescEqualTo(String value) {
			addCriterion("RANKDESC =", value, "rankdesc");
			return this;
		}

		public Criteria andRankdescNotEqualTo(String value) {
			addCriterion("RANKDESC <>", value, "rankdesc");
			return this;
		}

		public Criteria andRankdescGreaterThan(String value) {
			addCriterion("RANKDESC >", value, "rankdesc");
			return this;
		}

		public Criteria andRankdescGreaterThanOrEqualTo(String value) {
			addCriterion("RANKDESC >=", value, "rankdesc");
			return this;
		}

		public Criteria andRankdescLessThan(String value) {
			addCriterion("RANKDESC <", value, "rankdesc");
			return this;
		}

		public Criteria andRankdescLessThanOrEqualTo(String value) {
			addCriterion("RANKDESC <=", value, "rankdesc");
			return this;
		}

		public Criteria andRankdescLike(String value) {
			addCriterion("RANKDESC like", value, "rankdesc");
			return this;
		}

		public Criteria andRankdescNotLike(String value) {
			addCriterion("RANKDESC not like", value, "rankdesc");
			return this;
		}

		public Criteria andRankdescIn(List<String> values) {
			addCriterion("RANKDESC in", values, "rankdesc");
			return this;
		}

		public Criteria andRankdescNotIn(List<String> values) {
			addCriterion("RANKDESC not in", values, "rankdesc");
			return this;
		}

		public Criteria andRankdescBetween(String value1, String value2) {
			addCriterion("RANKDESC between", value1, value2, "rankdesc");
			return this;
		}

		public Criteria andRankdescNotBetween(String value1, String value2) {
			addCriterion("RANKDESC not between", value1, value2, "rankdesc");
			return this;
		}

		public Criteria andRankexpandIsNull() {
			addCriterion("RANKEXPAND is null");
			return this;
		}

		public Criteria andRankexpandIsNotNull() {
			addCriterion("RANKEXPAND is not null");
			return this;
		}

		public Criteria andRankexpandEqualTo(String value) {
			addCriterion("RANKEXPAND =", value, "rankexpand");
			return this;
		}

		public Criteria andRankexpandNotEqualTo(String value) {
			addCriterion("RANKEXPAND <>", value, "rankexpand");
			return this;
		}

		public Criteria andRankexpandGreaterThan(String value) {
			addCriterion("RANKEXPAND >", value, "rankexpand");
			return this;
		}

		public Criteria andRankexpandGreaterThanOrEqualTo(String value) {
			addCriterion("RANKEXPAND >=", value, "rankexpand");
			return this;
		}

		public Criteria andRankexpandLessThan(String value) {
			addCriterion("RANKEXPAND <", value, "rankexpand");
			return this;
		}

		public Criteria andRankexpandLessThanOrEqualTo(String value) {
			addCriterion("RANKEXPAND <=", value, "rankexpand");
			return this;
		}

		public Criteria andRankexpandLike(String value) {
			addCriterion("RANKEXPAND like", value, "rankexpand");
			return this;
		}

		public Criteria andRankexpandNotLike(String value) {
			addCriterion("RANKEXPAND not like", value, "rankexpand");
			return this;
		}

		public Criteria andRankexpandIn(List<String> values) {
			addCriterion("RANKEXPAND in", values, "rankexpand");
			return this;
		}

		public Criteria andRankexpandNotIn(List<String> values) {
			addCriterion("RANKEXPAND not in", values, "rankexpand");
			return this;
		}

		public Criteria andRankexpandBetween(String value1, String value2) {
			addCriterion("RANKEXPAND between", value1, value2, "rankexpand");
			return this;
		}

		public Criteria andRankexpandNotBetween(String value1, String value2) {
			addCriterion("RANKEXPAND not between", value1, value2, "rankexpand");
			return this;
		}

		public Criteria andBeginscoreIsNull() {
			addCriterion("BEGINSCORE is null");
			return this;
		}

		public Criteria andBeginscoreIsNotNull() {
			addCriterion("BEGINSCORE is not null");
			return this;
		}

		public Criteria andBeginscoreEqualTo(Long value) {
			addCriterion("BEGINSCORE =", value, "beginscore");
			return this;
		}

		public Criteria andBeginscoreNotEqualTo(Long value) {
			addCriterion("BEGINSCORE <>", value, "beginscore");
			return this;
		}

		public Criteria andBeginscoreGreaterThan(Long value) {
			addCriterion("BEGINSCORE >", value, "beginscore");
			return this;
		}

		public Criteria andBeginscoreGreaterThanOrEqualTo(Long value) {
			addCriterion("BEGINSCORE >=", value, "beginscore");
			return this;
		}

		public Criteria andBeginscoreLessThan(Long value) {
			addCriterion("BEGINSCORE <", value, "beginscore");
			return this;
		}

		public Criteria andBeginscoreLessThanOrEqualTo(Long value) {
			addCriterion("BEGINSCORE <=", value, "beginscore");
			return this;
		}

		public Criteria andBeginscoreIn(List<Long> values) {
			addCriterion("BEGINSCORE in", values, "beginscore");
			return this;
		}

		public Criteria andBeginscoreNotIn(List<Long> values) {
			addCriterion("BEGINSCORE not in", values, "beginscore");
			return this;
		}

		public Criteria andBeginscoreBetween(Long value1, Long value2) {
			addCriterion("BEGINSCORE between", value1, value2, "beginscore");
			return this;
		}

		public Criteria andBeginscoreNotBetween(Long value1, Long value2) {
			addCriterion("BEGINSCORE not between", value1, value2, "beginscore");
			return this;
		}

		public Criteria andEndscoreIsNull() {
			addCriterion("ENDSCORE is null");
			return this;
		}

		public Criteria andEndscoreIsNotNull() {
			addCriterion("ENDSCORE is not null");
			return this;
		}

		public Criteria andEndscoreEqualTo(Long value) {
			addCriterion("ENDSCORE =", value, "endscore");
			return this;
		}

		public Criteria andEndscoreNotEqualTo(Long value) {
			addCriterion("ENDSCORE <>", value, "endscore");
			return this;
		}

		public Criteria andEndscoreGreaterThan(Long value) {
			addCriterion("ENDSCORE >", value, "endscore");
			return this;
		}

		public Criteria andEndscoreGreaterThanOrEqualTo(Long value) {
			addCriterion("ENDSCORE >=", value, "endscore");
			return this;
		}

		public Criteria andEndscoreLessThan(Long value) {
			addCriterion("ENDSCORE <", value, "endscore");
			return this;
		}

		public Criteria andEndscoreLessThanOrEqualTo(Long value) {
			addCriterion("ENDSCORE <=", value, "endscore");
			return this;
		}

		public Criteria andEndscoreIn(List<Long> values) {
			addCriterion("ENDSCORE in", values, "endscore");
			return this;
		}

		public Criteria andEndscoreNotIn(List<Long> values) {
			addCriterion("ENDSCORE not in", values, "endscore");
			return this;
		}

		public Criteria andEndscoreBetween(Long value1, Long value2) {
			addCriterion("ENDSCORE between", value1, value2, "endscore");
			return this;
		}

		public Criteria andEndscoreNotBetween(Long value1, Long value2) {
			addCriterion("ENDSCORE not between", value1, value2, "endscore");
			return this;
		}

		public Criteria andCrgroupnumIsNull() {
			addCriterion("CRGROUPNUM is null");
			return this;
		}

		public Criteria andCrgroupnumIsNotNull() {
			addCriterion("CRGROUPNUM is not null");
			return this;
		}

		public Criteria andCrgroupnumEqualTo(Long value) {
			addCriterion("CRGROUPNUM =", value, "crgroupnum");
			return this;
		}

		public Criteria andCrgroupnumNotEqualTo(Long value) {
			addCriterion("CRGROUPNUM <>", value, "crgroupnum");
			return this;
		}

		public Criteria andCrgroupnumGreaterThan(Long value) {
			addCriterion("CRGROUPNUM >", value, "crgroupnum");
			return this;
		}

		public Criteria andCrgroupnumGreaterThanOrEqualTo(Long value) {
			addCriterion("CRGROUPNUM >=", value, "crgroupnum");
			return this;
		}

		public Criteria andCrgroupnumLessThan(Long value) {
			addCriterion("CRGROUPNUM <", value, "crgroupnum");
			return this;
		}

		public Criteria andCrgroupnumLessThanOrEqualTo(Long value) {
			addCriterion("CRGROUPNUM <=", value, "crgroupnum");
			return this;
		}

		public Criteria andCrgroupnumIn(List<Long> values) {
			addCriterion("CRGROUPNUM in", values, "crgroupnum");
			return this;
		}

		public Criteria andCrgroupnumNotIn(List<Long> values) {
			addCriterion("CRGROUPNUM not in", values, "crgroupnum");
			return this;
		}

		public Criteria andCrgroupnumBetween(Long value1, Long value2) {
			addCriterion("CRGROUPNUM between", value1, value2, "crgroupnum");
			return this;
		}

		public Criteria andCrgroupnumNotBetween(Long value1, Long value2) {
			addCriterion("CRGROUPNUM not between", value1, value2, "crgroupnum");
			return this;
		}

		public Criteria andCrchannelnumIsNull() {
			addCriterion("CRCHANNELNUM is null");
			return this;
		}

		public Criteria andCrchannelnumIsNotNull() {
			addCriterion("CRCHANNELNUM is not null");
			return this;
		}

		public Criteria andCrchannelnumEqualTo(Long value) {
			addCriterion("CRCHANNELNUM =", value, "crchannelnum");
			return this;
		}

		public Criteria andCrchannelnumNotEqualTo(Long value) {
			addCriterion("CRCHANNELNUM <>", value, "crchannelnum");
			return this;
		}

		public Criteria andCrchannelnumGreaterThan(Long value) {
			addCriterion("CRCHANNELNUM >", value, "crchannelnum");
			return this;
		}

		public Criteria andCrchannelnumGreaterThanOrEqualTo(Long value) {
			addCriterion("CRCHANNELNUM >=", value, "crchannelnum");
			return this;
		}

		public Criteria andCrchannelnumLessThan(Long value) {
			addCriterion("CRCHANNELNUM <", value, "crchannelnum");
			return this;
		}

		public Criteria andCrchannelnumLessThanOrEqualTo(Long value) {
			addCriterion("CRCHANNELNUM <=", value, "crchannelnum");
			return this;
		}

		public Criteria andCrchannelnumIn(List<Long> values) {
			addCriterion("CRCHANNELNUM in", values, "crchannelnum");
			return this;
		}

		public Criteria andCrchannelnumNotIn(List<Long> values) {
			addCriterion("CRCHANNELNUM not in", values, "crchannelnum");
			return this;
		}

		public Criteria andCrchannelnumBetween(Long value1, Long value2) {
			addCriterion("CRCHANNELNUM between", value1, value2, "crchannelnum");
			return this;
		}

		public Criteria andCrchannelnumNotBetween(Long value1, Long value2) {
			addCriterion("CRCHANNELNUM not between", value1, value2,
					"crchannelnum");
			return this;
		}
	}
}