package com.tfs.irp.vote.dao.impl;

import com.tfs.irp.util.PageUtil;
import com.tfs.irp.vote.dao.IrpVoteDAO;
import com.tfs.irp.vote.entity.IrpVote;
import com.tfs.irp.vote.entity.IrpVoteExample;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class IrpVoteDAOImpl extends SqlMapClientDaoSupport implements IrpVoteDAO {
   

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTE
     *
     * @ibatorgenerated Wed Nov 13 11:02:42 CST 2013
     */
    public int countByExample(IrpVoteExample example) throws SQLException {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("IRP_VOTE.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTE
     *
     * @ibatorgenerated Wed Nov 13 11:02:42 CST 2013
     */
    public int deleteByExample(IrpVoteExample example) throws SQLException {
        int rows = getSqlMapClientTemplate().delete("IRP_VOTE.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTE
     *
     * @ibatorgenerated Wed Nov 13 11:02:42 CST 2013
     */
    public int deleteByPrimaryKey(Long voteid) throws SQLException {
        IrpVote key = new IrpVote();
        key.setVoteid(voteid);
        int rows = getSqlMapClientTemplate().delete("IRP_VOTE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTE
     *
     * @ibatorgenerated Wed Nov 13 11:02:42 CST 2013
     */
    public void insert(IrpVote record) throws SQLException {
        getSqlMapClientTemplate().insert("IRP_VOTE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTE
     *
     * @ibatorgenerated Wed Nov 13 11:02:42 CST 2013
     */
    public void insertSelective(IrpVote record) throws SQLException {
        getSqlMapClientTemplate().insert("IRP_VOTE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTE
     *
     * @ibatorgenerated Wed Nov 13 11:02:42 CST 2013
     */
    @SuppressWarnings("unchecked")
    public List<IrpVote> selectByExample(IrpVoteExample example) throws SQLException {
        List<IrpVote> list = getSqlMapClientTemplate().queryForList("IRP_VOTE.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTE
     *
     * @ibatorgenerated Wed Nov 13 11:02:42 CST 2013
     */
    public IrpVote selectByPrimaryKey(Long voteid) throws SQLException {
        IrpVote key = new IrpVote();
        key.setVoteid(voteid);
        IrpVote record = (IrpVote) getSqlMapClientTemplate().queryForObject("IRP_VOTE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTE
     *
     * @ibatorgenerated Wed Nov 13 11:02:42 CST 2013
     */
    public int updateByExampleSelective(IrpVote record, IrpVoteExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("IRP_VOTE.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTE
     *
     * @ibatorgenerated Wed Nov 13 11:02:42 CST 2013
     */
    public int updateByExample(IrpVote record, IrpVoteExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("IRP_VOTE.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTE
     *
     * @ibatorgenerated Wed Nov 13 11:02:42 CST 2013
     */
    public int updateByPrimaryKeySelective(IrpVote record) throws SQLException {
        int rows = getSqlMapClientTemplate().update("IRP_VOTE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTE
     *
     * @ibatorgenerated Wed Nov 13 11:02:42 CST 2013
     */
    public int updateByPrimaryKey(IrpVote record) throws SQLException {
        int rows = getSqlMapClientTemplate().update("IRP_VOTE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_VOTE
     *
     * @ibatorgenerated Wed Nov 13 11:02:42 CST 2013
     */
    private static class UpdateByExampleParms extends IrpVoteExample {
        private Object record;

        public UpdateByExampleParms(Object record, IrpVoteExample example) {
            super(example);
            this.record = record;
        }

        @SuppressWarnings("unused")
		public Object getRecord() {
            return record;
        }
    }

	@Override
	public Long selectMaxvoteidByuserid(Long cruserid) {
		Long rows = (Long) getSqlMapClientTemplate().queryForObject("IRP_VOTE.findMaxidBycruserid", cruserid);
        return rows;
	}

	@Override
	public List<?> findquestionandoption(Map<String, Object> map) {
		List<?> list=getSqlMapClientTemplate().queryForList("IRP_VOTE.ibatorgenerated_vote",map);
		return list;
	}
	
	@Override
	public List<IrpVote> selectByExample(IrpVoteExample example,
			PageUtil pageUtil) {
		List<IrpVote> list = null;
		if (pageUtil == null) {
			list = getSqlMapClientTemplate().queryForList(
					"IRP_VOTE.ibatorgenerated_selectByExample", example);
		} else {
			list = getSqlMapClientTemplate().queryForList(
					"IRP_VOTE.ibatorgenerated_selectByExample", example,
					pageUtil.getPageIndex(), pageUtil.getPageSize());
		}
		return list;
	}

	@Override
	public int selectByCruseridcount(Map<String, Object> map) {
		int count =(Integer) getSqlMapClientTemplate().queryForObject("IRP_VOTE.ibatorgenerated_countByCuserid",map);
		return count;
	}

	@Override
	public List<IrpVote> selectByCruserid(Map<String, Object> map,
			PageUtil pageUtil) {
		List<IrpVote> list = null;
		if (pageUtil == null) {
			list = getSqlMapClientTemplate().queryForList(
					"IRP_VOTE.ibatorgenerated_ByCuserid", map);
		} else {
			list = getSqlMapClientTemplate().queryForList(
					"IRP_VOTE.ibatorgenerated_ByCuserid", map,
					pageUtil.getPageIndex(), pageUtil.getPageSize());
		}
		return list;
	}
}