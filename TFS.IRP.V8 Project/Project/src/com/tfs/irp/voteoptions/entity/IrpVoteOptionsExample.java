package com.tfs.irp.voteoptions.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpVoteOptionsExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_VOTEOPTIONS
     *
     * @ibatorgenerated Mon Dec 09 16:20:27 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_VOTEOPTIONS
     *
     * @ibatorgenerated Mon Dec 09 16:20:27 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTEOPTIONS
     *
     * @ibatorgenerated Mon Dec 09 16:20:27 CST 2013
     */
    public IrpVoteOptionsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTEOPTIONS
     *
     * @ibatorgenerated Mon Dec 09 16:20:27 CST 2013
     */
    protected IrpVoteOptionsExample(IrpVoteOptionsExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTEOPTIONS
     *
     * @ibatorgenerated Mon Dec 09 16:20:27 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTEOPTIONS
     *
     * @ibatorgenerated Mon Dec 09 16:20:27 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTEOPTIONS
     *
     * @ibatorgenerated Mon Dec 09 16:20:27 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTEOPTIONS
     *
     * @ibatorgenerated Mon Dec 09 16:20:27 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTEOPTIONS
     *
     * @ibatorgenerated Mon Dec 09 16:20:27 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTEOPTIONS
     *
     * @ibatorgenerated Mon Dec 09 16:20:27 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTEOPTIONS
     *
     * @ibatorgenerated Mon Dec 09 16:20:27 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_VOTEOPTIONS
     *
     * @ibatorgenerated Mon Dec 09 16:20:27 CST 2013
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andOptionidIsNull() {
            addCriterion("OPTIONID is null");
            return this;
        }

        public Criteria andOptionidIsNotNull() {
            addCriterion("OPTIONID is not null");
            return this;
        }

        public Criteria andOptionidEqualTo(Long value) {
            addCriterion("OPTIONID =", value, "optionid");
            return this;
        }

        public Criteria andOptionidNotEqualTo(Long value) {
            addCriterion("OPTIONID <>", value, "optionid");
            return this;
        }

        public Criteria andOptionidGreaterThan(Long value) {
            addCriterion("OPTIONID >", value, "optionid");
            return this;
        }

        public Criteria andOptionidGreaterThanOrEqualTo(Long value) {
            addCriterion("OPTIONID >=", value, "optionid");
            return this;
        }

        public Criteria andOptionidLessThan(Long value) {
            addCriterion("OPTIONID <", value, "optionid");
            return this;
        }

        public Criteria andOptionidLessThanOrEqualTo(Long value) {
            addCriterion("OPTIONID <=", value, "optionid");
            return this;
        }

        public Criteria andOptionidIn(List<Long> values) {
            addCriterion("OPTIONID in", values, "optionid");
            return this;
        }

        public Criteria andOptionidNotIn(List<Long> values) {
            addCriterion("OPTIONID not in", values, "optionid");
            return this;
        }

        public Criteria andOptionidBetween(Long value1, Long value2) {
            addCriterion("OPTIONID between", value1, value2, "optionid");
            return this;
        }

        public Criteria andOptionidNotBetween(Long value1, Long value2) {
            addCriterion("OPTIONID not between", value1, value2, "optionid");
            return this;
        }

        public Criteria andVoteoptionIsNull() {
            addCriterion("VOTEOPTION is null");
            return this;
        }

        public Criteria andVoteoptionIsNotNull() {
            addCriterion("VOTEOPTION is not null");
            return this;
        }

        public Criteria andVoteoptionEqualTo(String value) {
            addCriterion("VOTEOPTION =", value, "voteoption");
            return this;
        }

        public Criteria andVoteoptionNotEqualTo(String value) {
            addCriterion("VOTEOPTION <>", value, "voteoption");
            return this;
        }

        public Criteria andVoteoptionGreaterThan(String value) {
            addCriterion("VOTEOPTION >", value, "voteoption");
            return this;
        }

        public Criteria andVoteoptionGreaterThanOrEqualTo(String value) {
            addCriterion("VOTEOPTION >=", value, "voteoption");
            return this;
        }

        public Criteria andVoteoptionLessThan(String value) {
            addCriterion("VOTEOPTION <", value, "voteoption");
            return this;
        }

        public Criteria andVoteoptionLessThanOrEqualTo(String value) {
            addCriterion("VOTEOPTION <=", value, "voteoption");
            return this;
        }

        public Criteria andVoteoptionLike(String value) {
            addCriterion("VOTEOPTION like", value, "voteoption");
            return this;
        }

        public Criteria andVoteoptionNotLike(String value) {
            addCriterion("VOTEOPTION not like", value, "voteoption");
            return this;
        }

        public Criteria andVoteoptionIn(List<String> values) {
            addCriterion("VOTEOPTION in", values, "voteoption");
            return this;
        }

        public Criteria andVoteoptionNotIn(List<String> values) {
            addCriterion("VOTEOPTION not in", values, "voteoption");
            return this;
        }

        public Criteria andVoteoptionBetween(String value1, String value2) {
            addCriterion("VOTEOPTION between", value1, value2, "voteoption");
            return this;
        }

        public Criteria andVoteoptionNotBetween(String value1, String value2) {
            addCriterion("VOTEOPTION not between", value1, value2, "voteoption");
            return this;
        }

        public Criteria andCountIsNull() {
            addCriterion("COUNT is null");
            return this;
        }

        public Criteria andCountIsNotNull() {
            addCriterion("COUNT is not null");
            return this;
        }

        public Criteria andCountEqualTo(Long value) {
            addCriterion("COUNT =", value, "count");
            return this;
        }

        public Criteria andCountNotEqualTo(Long value) {
            addCriterion("COUNT <>", value, "count");
            return this;
        }

        public Criteria andCountGreaterThan(Long value) {
            addCriterion("COUNT >", value, "count");
            return this;
        }

        public Criteria andCountGreaterThanOrEqualTo(Long value) {
            addCriterion("COUNT >=", value, "count");
            return this;
        }

        public Criteria andCountLessThan(Long value) {
            addCriterion("COUNT <", value, "count");
            return this;
        }

        public Criteria andCountLessThanOrEqualTo(Long value) {
            addCriterion("COUNT <=", value, "count");
            return this;
        }

        public Criteria andCountIn(List<Long> values) {
            addCriterion("COUNT in", values, "count");
            return this;
        }

        public Criteria andCountNotIn(List<Long> values) {
            addCriterion("COUNT not in", values, "count");
            return this;
        }

        public Criteria andCountBetween(Long value1, Long value2) {
            addCriterion("COUNT between", value1, value2, "count");
            return this;
        }

        public Criteria andCountNotBetween(Long value1, Long value2) {
            addCriterion("COUNT not between", value1, value2, "count");
            return this;
        }

        public Criteria andParentidIsNull() {
            addCriterion("PARENTID is null");
            return this;
        }

        public Criteria andParentidIsNotNull() {
            addCriterion("PARENTID is not null");
            return this;
        }

        public Criteria andParentidEqualTo(Long value) {
            addCriterion("PARENTID =", value, "parentid");
            return this;
        }

        public Criteria andParentidNotEqualTo(Long value) {
            addCriterion("PARENTID <>", value, "parentid");
            return this;
        }

        public Criteria andParentidGreaterThan(Long value) {
            addCriterion("PARENTID >", value, "parentid");
            return this;
        }

        public Criteria andParentidGreaterThanOrEqualTo(Long value) {
            addCriterion("PARENTID >=", value, "parentid");
            return this;
        }

        public Criteria andParentidLessThan(Long value) {
            addCriterion("PARENTID <", value, "parentid");
            return this;
        }

        public Criteria andParentidLessThanOrEqualTo(Long value) {
            addCriterion("PARENTID <=", value, "parentid");
            return this;
        }

        public Criteria andParentidIn(List<Long> values) {
            addCriterion("PARENTID in", values, "parentid");
            return this;
        }

        public Criteria andParentidNotIn(List<Long> values) {
            addCriterion("PARENTID not in", values, "parentid");
            return this;
        }

        public Criteria andParentidBetween(Long value1, Long value2) {
            addCriterion("PARENTID between", value1, value2, "parentid");
            return this;
        }

        public Criteria andParentidNotBetween(Long value1, Long value2) {
            addCriterion("PARENTID not between", value1, value2, "parentid");
            return this;
        }

        public Criteria andAttimgIsNull() {
            addCriterion("ATTIMG is null");
            return this;
        }

        public Criteria andAttimgIsNotNull() {
            addCriterion("ATTIMG is not null");
            return this;
        }

        public Criteria andAttimgEqualTo(String value) {
            addCriterion("ATTIMG =", value, "attimg");
            return this;
        }

        public Criteria andAttimgNotEqualTo(String value) {
            addCriterion("ATTIMG <>", value, "attimg");
            return this;
        }

        public Criteria andAttimgGreaterThan(String value) {
            addCriterion("ATTIMG >", value, "attimg");
            return this;
        }

        public Criteria andAttimgGreaterThanOrEqualTo(String value) {
            addCriterion("ATTIMG >=", value, "attimg");
            return this;
        }

        public Criteria andAttimgLessThan(String value) {
            addCriterion("ATTIMG <", value, "attimg");
            return this;
        }

        public Criteria andAttimgLessThanOrEqualTo(String value) {
            addCriterion("ATTIMG <=", value, "attimg");
            return this;
        }

        public Criteria andAttimgLike(String value) {
            addCriterion("ATTIMG like", value, "attimg");
            return this;
        }

        public Criteria andAttimgNotLike(String value) {
            addCriterion("ATTIMG not like", value, "attimg");
            return this;
        }

        public Criteria andAttimgIn(List<String> values) {
            addCriterion("ATTIMG in", values, "attimg");
            return this;
        }

        public Criteria andAttimgNotIn(List<String> values) {
            addCriterion("ATTIMG not in", values, "attimg");
            return this;
        }

        public Criteria andAttimgBetween(String value1, String value2) {
            addCriterion("ATTIMG between", value1, value2, "attimg");
            return this;
        }

        public Criteria andAttimgNotBetween(String value1, String value2) {
            addCriterion("ATTIMG not between", value1, value2, "attimg");
            return this;
        }

        public Criteria andOptionurlIsNull() {
            addCriterion("OPTIONURL is null");
            return this;
        }

        public Criteria andOptionurlIsNotNull() {
            addCriterion("OPTIONURL is not null");
            return this;
        }

        public Criteria andOptionurlEqualTo(String value) {
            addCriterion("OPTIONURL =", value, "optionurl");
            return this;
        }

        public Criteria andOptionurlNotEqualTo(String value) {
            addCriterion("OPTIONURL <>", value, "optionurl");
            return this;
        }

        public Criteria andOptionurlGreaterThan(String value) {
            addCriterion("OPTIONURL >", value, "optionurl");
            return this;
        }

        public Criteria andOptionurlGreaterThanOrEqualTo(String value) {
            addCriterion("OPTIONURL >=", value, "optionurl");
            return this;
        }

        public Criteria andOptionurlLessThan(String value) {
            addCriterion("OPTIONURL <", value, "optionurl");
            return this;
        }

        public Criteria andOptionurlLessThanOrEqualTo(String value) {
            addCriterion("OPTIONURL <=", value, "optionurl");
            return this;
        }

        public Criteria andOptionurlLike(String value) {
            addCriterion("OPTIONURL like", value, "optionurl");
            return this;
        }

        public Criteria andOptionurlNotLike(String value) {
            addCriterion("OPTIONURL not like", value, "optionurl");
            return this;
        }

        public Criteria andOptionurlIn(List<String> values) {
            addCriterion("OPTIONURL in", values, "optionurl");
            return this;
        }

        public Criteria andOptionurlNotIn(List<String> values) {
            addCriterion("OPTIONURL not in", values, "optionurl");
            return this;
        }

        public Criteria andOptionurlBetween(String value1, String value2) {
            addCriterion("OPTIONURL between", value1, value2, "optionurl");
            return this;
        }

        public Criteria andOptionurlNotBetween(String value1, String value2) {
            addCriterion("OPTIONURL not between", value1, value2, "optionurl");
            return this;
        }
    }
}