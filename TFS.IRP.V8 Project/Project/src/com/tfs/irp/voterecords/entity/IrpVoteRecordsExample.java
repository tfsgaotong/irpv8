package com.tfs.irp.voterecords.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpVoteRecordsExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_VOTERECORDS
     *
     * @ibatorgenerated Tue Nov 26 15:46:31 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_VOTERECORDS
     *
     * @ibatorgenerated Tue Nov 26 15:46:31 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTERECORDS
     *
     * @ibatorgenerated Tue Nov 26 15:46:31 CST 2013
     */
    public IrpVoteRecordsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTERECORDS
     *
     * @ibatorgenerated Tue Nov 26 15:46:31 CST 2013
     */
    protected IrpVoteRecordsExample(IrpVoteRecordsExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTERECORDS
     *
     * @ibatorgenerated Tue Nov 26 15:46:31 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTERECORDS
     *
     * @ibatorgenerated Tue Nov 26 15:46:31 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTERECORDS
     *
     * @ibatorgenerated Tue Nov 26 15:46:31 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTERECORDS
     *
     * @ibatorgenerated Tue Nov 26 15:46:31 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTERECORDS
     *
     * @ibatorgenerated Tue Nov 26 15:46:31 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTERECORDS
     *
     * @ibatorgenerated Tue Nov 26 15:46:31 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_VOTERECORDS
     *
     * @ibatorgenerated Tue Nov 26 15:46:31 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_VOTERECORDS
     *
     * @ibatorgenerated Tue Nov 26 15:46:31 CST 2013
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andVoterecordidIsNull() {
            addCriterion("VOTERECORDID is null");
            return this;
        }

        public Criteria andVoterecordidIsNotNull() {
            addCriterion("VOTERECORDID is not null");
            return this;
        }

        public Criteria andVoterecordidEqualTo(Long value) {
            addCriterion("VOTERECORDID =", value, "voterecordid");
            return this;
        }

        public Criteria andVoterecordidNotEqualTo(Long value) {
            addCriterion("VOTERECORDID <>", value, "voterecordid");
            return this;
        }

        public Criteria andVoterecordidGreaterThan(Long value) {
            addCriterion("VOTERECORDID >", value, "voterecordid");
            return this;
        }

        public Criteria andVoterecordidGreaterThanOrEqualTo(Long value) {
            addCriterion("VOTERECORDID >=", value, "voterecordid");
            return this;
        }

        public Criteria andVoterecordidLessThan(Long value) {
            addCriterion("VOTERECORDID <", value, "voterecordid");
            return this;
        }

        public Criteria andVoterecordidLessThanOrEqualTo(Long value) {
            addCriterion("VOTERECORDID <=", value, "voterecordid");
            return this;
        }

        public Criteria andVoterecordidIn(List<Long> values) {
            addCriterion("VOTERECORDID in", values, "voterecordid");
            return this;
        }

        public Criteria andVoterecordidNotIn(List<Long> values) {
            addCriterion("VOTERECORDID not in", values, "voterecordid");
            return this;
        }

        public Criteria andVoterecordidBetween(Long value1, Long value2) {
            addCriterion("VOTERECORDID between", value1, value2, "voterecordid");
            return this;
        }

        public Criteria andVoterecordidNotBetween(Long value1, Long value2) {
            addCriterion("VOTERECORDID not between", value1, value2, "voterecordid");
            return this;
        }

        public Criteria andCruseridIsNull() {
            addCriterion("CRUSERID is null");
            return this;
        }

        public Criteria andCruseridIsNotNull() {
            addCriterion("CRUSERID is not null");
            return this;
        }

        public Criteria andCruseridEqualTo(Long value) {
            addCriterion("CRUSERID =", value, "cruserid");
            return this;
        }

        public Criteria andCruseridNotEqualTo(Long value) {
            addCriterion("CRUSERID <>", value, "cruserid");
            return this;
        }

        public Criteria andCruseridGreaterThan(Long value) {
            addCriterion("CRUSERID >", value, "cruserid");
            return this;
        }

        public Criteria andCruseridGreaterThanOrEqualTo(Long value) {
            addCriterion("CRUSERID >=", value, "cruserid");
            return this;
        }

        public Criteria andCruseridLessThan(Long value) {
            addCriterion("CRUSERID <", value, "cruserid");
            return this;
        }

        public Criteria andCruseridLessThanOrEqualTo(Long value) {
            addCriterion("CRUSERID <=", value, "cruserid");
            return this;
        }

        public Criteria andCruseridIn(List<Long> values) {
            addCriterion("CRUSERID in", values, "cruserid");
            return this;
        }

        public Criteria andCruseridNotIn(List<Long> values) {
            addCriterion("CRUSERID not in", values, "cruserid");
            return this;
        }

        public Criteria andCruseridBetween(Long value1, Long value2) {
            addCriterion("CRUSERID between", value1, value2, "cruserid");
            return this;
        }

        public Criteria andCruseridNotBetween(Long value1, Long value2) {
            addCriterion("CRUSERID not between", value1, value2, "cruserid");
            return this;
        }

        public Criteria andVoteidIsNull() {
            addCriterion("VOTEID is null");
            return this;
        }

        public Criteria andVoteidIsNotNull() {
            addCriterion("VOTEID is not null");
            return this;
        }

        public Criteria andVoteidEqualTo(Long value) {
            addCriterion("VOTEID =", value, "voteid");
            return this;
        }

        public Criteria andVoteidNotEqualTo(Long value) {
            addCriterion("VOTEID <>", value, "voteid");
            return this;
        }

        public Criteria andVoteidGreaterThan(Long value) {
            addCriterion("VOTEID >", value, "voteid");
            return this;
        }

        public Criteria andVoteidGreaterThanOrEqualTo(Long value) {
            addCriterion("VOTEID >=", value, "voteid");
            return this;
        }

        public Criteria andVoteidLessThan(Long value) {
            addCriterion("VOTEID <", value, "voteid");
            return this;
        }

        public Criteria andVoteidLessThanOrEqualTo(Long value) {
            addCriterion("VOTEID <=", value, "voteid");
            return this;
        }

        public Criteria andVoteidIn(List<Long> values) {
            addCriterion("VOTEID in", values, "voteid");
            return this;
        }

        public Criteria andVoteidNotIn(List<Long> values) {
            addCriterion("VOTEID not in", values, "voteid");
            return this;
        }

        public Criteria andVoteidBetween(Long value1, Long value2) {
            addCriterion("VOTEID between", value1, value2, "voteid");
            return this;
        }

        public Criteria andVoteidNotBetween(Long value1, Long value2) {
            addCriterion("VOTEID not between", value1, value2, "voteid");
            return this;
        }

        public Criteria andOptionidIsNull() {
            addCriterion("OPTIONID is null");
            return this;
        }

        public Criteria andOptionidIsNotNull() {
            addCriterion("OPTIONID is not null");
            return this;
        }

        public Criteria andOptionidEqualTo(Long value) {
            addCriterion("OPTIONID =", value, "optionid");
            return this;
        }

        public Criteria andOptionidNotEqualTo(Long value) {
            addCriterion("OPTIONID <>", value, "optionid");
            return this;
        }

        public Criteria andOptionidGreaterThan(Long value) {
            addCriterion("OPTIONID >", value, "optionid");
            return this;
        }

        public Criteria andOptionidGreaterThanOrEqualTo(Long value) {
            addCriterion("OPTIONID >=", value, "optionid");
            return this;
        }

        public Criteria andOptionidLessThan(Long value) {
            addCriterion("OPTIONID <", value, "optionid");
            return this;
        }

        public Criteria andOptionidLessThanOrEqualTo(Long value) {
            addCriterion("OPTIONID <=", value, "optionid");
            return this;
        }

        public Criteria andOptionidIn(List<Long> values) {
            addCriterion("OPTIONID in", values, "optionid");
            return this;
        }

        public Criteria andOptionidNotIn(List<Long> values) {
            addCriterion("OPTIONID not in", values, "optionid");
            return this;
        }

        public Criteria andOptionidBetween(Long value1, Long value2) {
            addCriterion("OPTIONID between", value1, value2, "optionid");
            return this;
        }

        public Criteria andOptionidNotBetween(Long value1, Long value2) {
            addCriterion("OPTIONID not between", value1, value2, "optionid");
            return this;
        }
    }
}