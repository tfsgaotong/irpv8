package com.tfs.irp.workflow.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpObjWorkflowLinkExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_OBJ_WORKFLOW_LINK
	 * @ibatorgenerated  Tue May 14 15:40:19 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_OBJ_WORKFLOW_LINK
	 * @ibatorgenerated  Tue May 14 15:40:19 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_OBJ_WORKFLOW_LINK
	 * @ibatorgenerated  Tue May 14 15:40:19 CST 2013
	 */
	public IrpObjWorkflowLinkExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_OBJ_WORKFLOW_LINK
	 * @ibatorgenerated  Tue May 14 15:40:19 CST 2013
	 */
	protected IrpObjWorkflowLinkExample(IrpObjWorkflowLinkExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_OBJ_WORKFLOW_LINK
	 * @ibatorgenerated  Tue May 14 15:40:19 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_OBJ_WORKFLOW_LINK
	 * @ibatorgenerated  Tue May 14 15:40:19 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_OBJ_WORKFLOW_LINK
	 * @ibatorgenerated  Tue May 14 15:40:19 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_OBJ_WORKFLOW_LINK
	 * @ibatorgenerated  Tue May 14 15:40:19 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_OBJ_WORKFLOW_LINK
	 * @ibatorgenerated  Tue May 14 15:40:19 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_OBJ_WORKFLOW_LINK
	 * @ibatorgenerated  Tue May 14 15:40:19 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_OBJ_WORKFLOW_LINK
	 * @ibatorgenerated  Tue May 14 15:40:19 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_OBJ_WORKFLOW_LINK
	 * @ibatorgenerated  Tue May 14 15:40:19 CST 2013
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andObjflowidIsNull() {
			addCriterion("OBJFLOWID is null");
			return this;
		}

		public Criteria andObjflowidIsNotNull() {
			addCriterion("OBJFLOWID is not null");
			return this;
		}

		public Criteria andObjflowidEqualTo(Long value) {
			addCriterion("OBJFLOWID =", value, "objflowid");
			return this;
		}

		public Criteria andObjflowidNotEqualTo(Long value) {
			addCriterion("OBJFLOWID <>", value, "objflowid");
			return this;
		}

		public Criteria andObjflowidGreaterThan(Long value) {
			addCriterion("OBJFLOWID >", value, "objflowid");
			return this;
		}

		public Criteria andObjflowidGreaterThanOrEqualTo(Long value) {
			addCriterion("OBJFLOWID >=", value, "objflowid");
			return this;
		}

		public Criteria andObjflowidLessThan(Long value) {
			addCriterion("OBJFLOWID <", value, "objflowid");
			return this;
		}

		public Criteria andObjflowidLessThanOrEqualTo(Long value) {
			addCriterion("OBJFLOWID <=", value, "objflowid");
			return this;
		}

		public Criteria andObjflowidIn(List<Long> values) {
			addCriterion("OBJFLOWID in", values, "objflowid");
			return this;
		}

		public Criteria andObjflowidNotIn(List<Long> values) {
			addCriterion("OBJFLOWID not in", values, "objflowid");
			return this;
		}

		public Criteria andObjflowidBetween(Long value1, Long value2) {
			addCriterion("OBJFLOWID between", value1, value2, "objflowid");
			return this;
		}

		public Criteria andObjflowidNotBetween(Long value1, Long value2) {
			addCriterion("OBJFLOWID not between", value1, value2, "objflowid");
			return this;
		}

		public Criteria andFlowidIsNull() {
			addCriterion("FLOWID is null");
			return this;
		}

		public Criteria andFlowidIsNotNull() {
			addCriterion("FLOWID is not null");
			return this;
		}

		public Criteria andFlowidEqualTo(Long value) {
			addCriterion("FLOWID =", value, "flowid");
			return this;
		}

		public Criteria andFlowidNotEqualTo(Long value) {
			addCriterion("FLOWID <>", value, "flowid");
			return this;
		}

		public Criteria andFlowidGreaterThan(Long value) {
			addCriterion("FLOWID >", value, "flowid");
			return this;
		}

		public Criteria andFlowidGreaterThanOrEqualTo(Long value) {
			addCriterion("FLOWID >=", value, "flowid");
			return this;
		}

		public Criteria andFlowidLessThan(Long value) {
			addCriterion("FLOWID <", value, "flowid");
			return this;
		}

		public Criteria andFlowidLessThanOrEqualTo(Long value) {
			addCriterion("FLOWID <=", value, "flowid");
			return this;
		}

		public Criteria andFlowidIn(List<Long> values) {
			addCriterion("FLOWID in", values, "flowid");
			return this;
		}

		public Criteria andFlowidNotIn(List<Long> values) {
			addCriterion("FLOWID not in", values, "flowid");
			return this;
		}

		public Criteria andFlowidBetween(Long value1, Long value2) {
			addCriterion("FLOWID between", value1, value2, "flowid");
			return this;
		}

		public Criteria andFlowidNotBetween(Long value1, Long value2) {
			addCriterion("FLOWID not between", value1, value2, "flowid");
			return this;
		}

		public Criteria andObjidIsNull() {
			addCriterion("OBJID is null");
			return this;
		}

		public Criteria andObjidIsNotNull() {
			addCriterion("OBJID is not null");
			return this;
		}

		public Criteria andObjidEqualTo(Long value) {
			addCriterion("OBJID =", value, "objid");
			return this;
		}

		public Criteria andObjidNotEqualTo(Long value) {
			addCriterion("OBJID <>", value, "objid");
			return this;
		}

		public Criteria andObjidGreaterThan(Long value) {
			addCriterion("OBJID >", value, "objid");
			return this;
		}

		public Criteria andObjidGreaterThanOrEqualTo(Long value) {
			addCriterion("OBJID >=", value, "objid");
			return this;
		}

		public Criteria andObjidLessThan(Long value) {
			addCriterion("OBJID <", value, "objid");
			return this;
		}

		public Criteria andObjidLessThanOrEqualTo(Long value) {
			addCriterion("OBJID <=", value, "objid");
			return this;
		}

		public Criteria andObjidIn(List<Long> values) {
			addCriterion("OBJID in", values, "objid");
			return this;
		}

		public Criteria andObjidNotIn(List<Long> values) {
			addCriterion("OBJID not in", values, "objid");
			return this;
		}

		public Criteria andObjidBetween(Long value1, Long value2) {
			addCriterion("OBJID between", value1, value2, "objid");
			return this;
		}

		public Criteria andObjidNotBetween(Long value1, Long value2) {
			addCriterion("OBJID not between", value1, value2, "objid");
			return this;
		}

		public Criteria andObjtypeIsNull() {
			addCriterion("OBJTYPE is null");
			return this;
		}

		public Criteria andObjtypeIsNotNull() {
			addCriterion("OBJTYPE is not null");
			return this;
		}

		public Criteria andObjtypeEqualTo(String value) {
			addCriterion("OBJTYPE =", value, "objtype");
			return this;
		}

		public Criteria andObjtypeNotEqualTo(String value) {
			addCriterion("OBJTYPE <>", value, "objtype");
			return this;
		}

		public Criteria andObjtypeGreaterThan(String value) {
			addCriterion("OBJTYPE >", value, "objtype");
			return this;
		}

		public Criteria andObjtypeGreaterThanOrEqualTo(String value) {
			addCriterion("OBJTYPE >=", value, "objtype");
			return this;
		}

		public Criteria andObjtypeLessThan(String value) {
			addCriterion("OBJTYPE <", value, "objtype");
			return this;
		}

		public Criteria andObjtypeLessThanOrEqualTo(String value) {
			addCriterion("OBJTYPE <=", value, "objtype");
			return this;
		}

		public Criteria andObjtypeLike(String value) {
			addCriterion("OBJTYPE like", value, "objtype");
			return this;
		}

		public Criteria andObjtypeNotLike(String value) {
			addCriterion("OBJTYPE not like", value, "objtype");
			return this;
		}

		public Criteria andObjtypeIn(List<String> values) {
			addCriterion("OBJTYPE in", values, "objtype");
			return this;
		}

		public Criteria andObjtypeNotIn(List<String> values) {
			addCriterion("OBJTYPE not in", values, "objtype");
			return this;
		}

		public Criteria andObjtypeBetween(String value1, String value2) {
			addCriterion("OBJTYPE between", value1, value2, "objtype");
			return this;
		}

		public Criteria andObjtypeNotBetween(String value1, String value2) {
			addCriterion("OBJTYPE not between", value1, value2, "objtype");
			return this;
		}
	}
}