package com.tfs.irp.workflow.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class IrpWorkflowEmployExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_WORKFLOW_EMPLOY
     *
     * @ibatorgenerated Sun Apr 28 15:25:36 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table IRP_WORKFLOW_EMPLOY
     *
     * @ibatorgenerated Sun Apr 28 15:25:36 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_WORKFLOW_EMPLOY
     *
     * @ibatorgenerated Sun Apr 28 15:25:36 CST 2013
     */
    public IrpWorkflowEmployExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_WORKFLOW_EMPLOY
     *
     * @ibatorgenerated Sun Apr 28 15:25:36 CST 2013
     */
    protected IrpWorkflowEmployExample(IrpWorkflowEmployExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_WORKFLOW_EMPLOY
     *
     * @ibatorgenerated Sun Apr 28 15:25:36 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_WORKFLOW_EMPLOY
     *
     * @ibatorgenerated Sun Apr 28 15:25:36 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_WORKFLOW_EMPLOY
     *
     * @ibatorgenerated Sun Apr 28 15:25:36 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_WORKFLOW_EMPLOY
     *
     * @ibatorgenerated Sun Apr 28 15:25:36 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_WORKFLOW_EMPLOY
     *
     * @ibatorgenerated Sun Apr 28 15:25:36 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_WORKFLOW_EMPLOY
     *
     * @ibatorgenerated Sun Apr 28 15:25:36 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table IRP_WORKFLOW_EMPLOY
     *
     * @ibatorgenerated Sun Apr 28 15:25:36 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table IRP_WORKFLOW_EMPLOY
     *
     * @ibatorgenerated Sun Apr 28 15:25:36 CST 2013
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andEmployidIsNull() {
            addCriterion("EMPLOYID is null");
            return this;
        }

        public Criteria andEmployidIsNotNull() {
            addCriterion("EMPLOYID is not null");
            return this;
        }

        public Criteria andEmployidEqualTo(Long value) {
            addCriterion("EMPLOYID =", value, "employid");
            return this;
        }

        public Criteria andEmployidNotEqualTo(Long value) {
            addCriterion("EMPLOYID <>", value, "employid");
            return this;
        }

        public Criteria andEmployidGreaterThan(Long value) {
            addCriterion("EMPLOYID >", value, "employid");
            return this;
        }

        public Criteria andEmployidGreaterThanOrEqualTo(Long value) {
            addCriterion("EMPLOYID >=", value, "employid");
            return this;
        }

        public Criteria andEmployidLessThan(Long value) {
            addCriterion("EMPLOYID <", value, "employid");
            return this;
        }

        public Criteria andEmployidLessThanOrEqualTo(Long value) {
            addCriterion("EMPLOYID <=", value, "employid");
            return this;
        }

        public Criteria andEmployidIn(List<Long> values) {
            addCriterion("EMPLOYID in", values, "employid");
            return this;
        }

        public Criteria andEmployidNotIn(List<Long> values) {
            addCriterion("EMPLOYID not in", values, "employid");
            return this;
        }

        public Criteria andEmployidBetween(Long value1, Long value2) {
            addCriterion("EMPLOYID between", value1, value2, "employid");
            return this;
        }

        public Criteria andEmployidNotBetween(Long value1, Long value2) {
            addCriterion("EMPLOYID not between", value1, value2, "employid");
            return this;
        }

        public Criteria andFlownodeidIsNull() {
            addCriterion("FLOWNODEID is null");
            return this;
        }

        public Criteria andFlownodeidIsNotNull() {
            addCriterion("FLOWNODEID is not null");
            return this;
        }

        public Criteria andFlownodeidEqualTo(Long value) {
            addCriterion("FLOWNODEID =", value, "flownodeid");
            return this;
        }

        public Criteria andFlownodeidNotEqualTo(Long value) {
            addCriterion("FLOWNODEID <>", value, "flownodeid");
            return this;
        }

        public Criteria andFlownodeidGreaterThan(Long value) {
            addCriterion("FLOWNODEID >", value, "flownodeid");
            return this;
        }

        public Criteria andFlownodeidGreaterThanOrEqualTo(Long value) {
            addCriterion("FLOWNODEID >=", value, "flownodeid");
            return this;
        }

        public Criteria andFlownodeidLessThan(Long value) {
            addCriterion("FLOWNODEID <", value, "flownodeid");
            return this;
        }

        public Criteria andFlownodeidLessThanOrEqualTo(Long value) {
            addCriterion("FLOWNODEID <=", value, "flownodeid");
            return this;
        }

        public Criteria andFlownodeidIn(List<Long> values) {
            addCriterion("FLOWNODEID in", values, "flownodeid");
            return this;
        }

        public Criteria andFlownodeidNotIn(List<Long> values) {
            addCriterion("FLOWNODEID not in", values, "flownodeid");
            return this;
        }

        public Criteria andFlownodeidBetween(Long value1, Long value2) {
            addCriterion("FLOWNODEID between", value1, value2, "flownodeid");
            return this;
        }

        public Criteria andFlownodeidNotBetween(Long value1, Long value2) {
            addCriterion("FLOWNODEID not between", value1, value2, "flownodeid");
            return this;
        }

        public Criteria andEmployobjidIsNull() {
            addCriterion("EMPLOYOBJID is null");
            return this;
        }

        public Criteria andEmployobjidIsNotNull() {
            addCriterion("EMPLOYOBJID is not null");
            return this;
        }

        public Criteria andEmployobjidEqualTo(Long value) {
            addCriterion("EMPLOYOBJID =", value, "employobjid");
            return this;
        }

        public Criteria andEmployobjidNotEqualTo(Long value) {
            addCriterion("EMPLOYOBJID <>", value, "employobjid");
            return this;
        }

        public Criteria andEmployobjidGreaterThan(Long value) {
            addCriterion("EMPLOYOBJID >", value, "employobjid");
            return this;
        }

        public Criteria andEmployobjidGreaterThanOrEqualTo(Long value) {
            addCriterion("EMPLOYOBJID >=", value, "employobjid");
            return this;
        }

        public Criteria andEmployobjidLessThan(Long value) {
            addCriterion("EMPLOYOBJID <", value, "employobjid");
            return this;
        }

        public Criteria andEmployobjidLessThanOrEqualTo(Long value) {
            addCriterion("EMPLOYOBJID <=", value, "employobjid");
            return this;
        }

        public Criteria andEmployobjidIn(List<Long> values) {
            addCriterion("EMPLOYOBJID in", values, "employobjid");
            return this;
        }

        public Criteria andEmployobjidNotIn(List<Long> values) {
            addCriterion("EMPLOYOBJID not in", values, "employobjid");
            return this;
        }

        public Criteria andEmployobjidBetween(Long value1, Long value2) {
            addCriterion("EMPLOYOBJID between", value1, value2, "employobjid");
            return this;
        }

        public Criteria andEmployobjidNotBetween(Long value1, Long value2) {
            addCriterion("EMPLOYOBJID not between", value1, value2, "employobjid");
            return this;
        }

        public Criteria andEmployobjtypeIsNull() {
            addCriterion("EMPLOYOBJTYPE is null");
            return this;
        }

        public Criteria andEmployobjtypeIsNotNull() {
            addCriterion("EMPLOYOBJTYPE is not null");
            return this;
        }

        public Criteria andEmployobjtypeEqualTo(String value) {
            addCriterion("EMPLOYOBJTYPE =", value, "employobjtype");
            return this;
        }

        public Criteria andEmployobjtypeNotEqualTo(String value) {
            addCriterion("EMPLOYOBJTYPE <>", value, "employobjtype");
            return this;
        }

        public Criteria andEmployobjtypeGreaterThan(String value) {
            addCriterion("EMPLOYOBJTYPE >", value, "employobjtype");
            return this;
        }

        public Criteria andEmployobjtypeGreaterThanOrEqualTo(String value) {
            addCriterion("EMPLOYOBJTYPE >=", value, "employobjtype");
            return this;
        }

        public Criteria andEmployobjtypeLessThan(String value) {
            addCriterion("EMPLOYOBJTYPE <", value, "employobjtype");
            return this;
        }

        public Criteria andEmployobjtypeLessThanOrEqualTo(String value) {
            addCriterion("EMPLOYOBJTYPE <=", value, "employobjtype");
            return this;
        }

        public Criteria andEmployobjtypeLike(String value) {
            addCriterion("EMPLOYOBJTYPE like", value, "employobjtype");
            return this;
        }

        public Criteria andEmployobjtypeNotLike(String value) {
            addCriterion("EMPLOYOBJTYPE not like", value, "employobjtype");
            return this;
        }

        public Criteria andEmployobjtypeIn(List<String> values) {
            addCriterion("EMPLOYOBJTYPE in", values, "employobjtype");
            return this;
        }

        public Criteria andEmployobjtypeNotIn(List<String> values) {
            addCriterion("EMPLOYOBJTYPE not in", values, "employobjtype");
            return this;
        }

        public Criteria andEmployobjtypeBetween(String value1, String value2) {
            addCriterion("EMPLOYOBJTYPE between", value1, value2, "employobjtype");
            return this;
        }

        public Criteria andEmployobjtypeNotBetween(String value1, String value2) {
            addCriterion("EMPLOYOBJTYPE not between", value1, value2, "employobjtype");
            return this;
        }
    }
}