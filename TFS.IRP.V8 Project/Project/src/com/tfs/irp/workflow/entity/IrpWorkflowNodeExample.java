package com.tfs.irp.workflow.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class IrpWorkflowNodeExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_WORKFLOW_NODE
	 * @ibatorgenerated  Fri May 03 15:20:04 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table IRP_WORKFLOW_NODE
	 * @ibatorgenerated  Fri May 03 15:20:04 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_WORKFLOW_NODE
	 * @ibatorgenerated  Fri May 03 15:20:04 CST 2013
	 */
	public IrpWorkflowNodeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_WORKFLOW_NODE
	 * @ibatorgenerated  Fri May 03 15:20:04 CST 2013
	 */
	protected IrpWorkflowNodeExample(IrpWorkflowNodeExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_WORKFLOW_NODE
	 * @ibatorgenerated  Fri May 03 15:20:04 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_WORKFLOW_NODE
	 * @ibatorgenerated  Fri May 03 15:20:04 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_WORKFLOW_NODE
	 * @ibatorgenerated  Fri May 03 15:20:04 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_WORKFLOW_NODE
	 * @ibatorgenerated  Fri May 03 15:20:04 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_WORKFLOW_NODE
	 * @ibatorgenerated  Fri May 03 15:20:04 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_WORKFLOW_NODE
	 * @ibatorgenerated  Fri May 03 15:20:04 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IRP_WORKFLOW_NODE
	 * @ibatorgenerated  Fri May 03 15:20:04 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table IRP_WORKFLOW_NODE
	 * @ibatorgenerated  Fri May 03 15:20:04 CST 2013
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andNodeidIsNull() {
			addCriterion("NODEID is null");
			return this;
		}

		public Criteria andNodeidIsNotNull() {
			addCriterion("NODEID is not null");
			return this;
		}

		public Criteria andNodeidEqualTo(Long value) {
			addCriterion("NODEID =", value, "nodeid");
			return this;
		}

		public Criteria andNodeidNotEqualTo(Long value) {
			addCriterion("NODEID <>", value, "nodeid");
			return this;
		}

		public Criteria andNodeidGreaterThan(Long value) {
			addCriterion("NODEID >", value, "nodeid");
			return this;
		}

		public Criteria andNodeidGreaterThanOrEqualTo(Long value) {
			addCriterion("NODEID >=", value, "nodeid");
			return this;
		}

		public Criteria andNodeidLessThan(Long value) {
			addCriterion("NODEID <", value, "nodeid");
			return this;
		}

		public Criteria andNodeidLessThanOrEqualTo(Long value) {
			addCriterion("NODEID <=", value, "nodeid");
			return this;
		}

		public Criteria andNodeidIn(List<Long> values) {
			addCriterion("NODEID in", values, "nodeid");
			return this;
		}

		public Criteria andNodeidNotIn(List<Long> values) {
			addCriterion("NODEID not in", values, "nodeid");
			return this;
		}

		public Criteria andNodeidBetween(Long value1, Long value2) {
			addCriterion("NODEID between", value1, value2, "nodeid");
			return this;
		}

		public Criteria andNodeidNotBetween(Long value1, Long value2) {
			addCriterion("NODEID not between", value1, value2, "nodeid");
			return this;
		}

		public Criteria andFlowidIsNull() {
			addCriterion("FLOWID is null");
			return this;
		}

		public Criteria andFlowidIsNotNull() {
			addCriterion("FLOWID is not null");
			return this;
		}

		public Criteria andFlowidEqualTo(Long value) {
			addCriterion("FLOWID =", value, "flowid");
			return this;
		}

		public Criteria andFlowidNotEqualTo(Long value) {
			addCriterion("FLOWID <>", value, "flowid");
			return this;
		}

		public Criteria andFlowidGreaterThan(Long value) {
			addCriterion("FLOWID >", value, "flowid");
			return this;
		}

		public Criteria andFlowidGreaterThanOrEqualTo(Long value) {
			addCriterion("FLOWID >=", value, "flowid");
			return this;
		}

		public Criteria andFlowidLessThan(Long value) {
			addCriterion("FLOWID <", value, "flowid");
			return this;
		}

		public Criteria andFlowidLessThanOrEqualTo(Long value) {
			addCriterion("FLOWID <=", value, "flowid");
			return this;
		}

		public Criteria andFlowidIn(List<Long> values) {
			addCriterion("FLOWID in", values, "flowid");
			return this;
		}

		public Criteria andFlowidNotIn(List<Long> values) {
			addCriterion("FLOWID not in", values, "flowid");
			return this;
		}

		public Criteria andFlowidBetween(Long value1, Long value2) {
			addCriterion("FLOWID between", value1, value2, "flowid");
			return this;
		}

		public Criteria andFlowidNotBetween(Long value1, Long value2) {
			addCriterion("FLOWID not between", value1, value2, "flowid");
			return this;
		}

		public Criteria andNodekeyIsNull() {
			addCriterion("NODEKEY is null");
			return this;
		}

		public Criteria andNodekeyIsNotNull() {
			addCriterion("NODEKEY is not null");
			return this;
		}

		public Criteria andNodekeyEqualTo(String value) {
			addCriterion("NODEKEY =", value, "nodekey");
			return this;
		}

		public Criteria andNodekeyNotEqualTo(String value) {
			addCriterion("NODEKEY <>", value, "nodekey");
			return this;
		}

		public Criteria andNodekeyGreaterThan(String value) {
			addCriterion("NODEKEY >", value, "nodekey");
			return this;
		}

		public Criteria andNodekeyGreaterThanOrEqualTo(String value) {
			addCriterion("NODEKEY >=", value, "nodekey");
			return this;
		}

		public Criteria andNodekeyLessThan(String value) {
			addCriterion("NODEKEY <", value, "nodekey");
			return this;
		}

		public Criteria andNodekeyLessThanOrEqualTo(String value) {
			addCriterion("NODEKEY <=", value, "nodekey");
			return this;
		}

		public Criteria andNodekeyLike(String value) {
			addCriterion("NODEKEY like", value, "nodekey");
			return this;
		}

		public Criteria andNodekeyNotLike(String value) {
			addCriterion("NODEKEY not like", value, "nodekey");
			return this;
		}

		public Criteria andNodekeyIn(List<String> values) {
			addCriterion("NODEKEY in", values, "nodekey");
			return this;
		}

		public Criteria andNodekeyNotIn(List<String> values) {
			addCriterion("NODEKEY not in", values, "nodekey");
			return this;
		}

		public Criteria andNodekeyBetween(String value1, String value2) {
			addCriterion("NODEKEY between", value1, value2, "nodekey");
			return this;
		}

		public Criteria andNodekeyNotBetween(String value1, String value2) {
			addCriterion("NODEKEY not between", value1, value2, "nodekey");
			return this;
		}

		public Criteria andNodenameIsNull() {
			addCriterion("NODENAME is null");
			return this;
		}

		public Criteria andNodenameIsNotNull() {
			addCriterion("NODENAME is not null");
			return this;
		}

		public Criteria andNodenameEqualTo(String value) {
			addCriterion("NODENAME =", value, "nodename");
			return this;
		}

		public Criteria andNodenameNotEqualTo(String value) {
			addCriterion("NODENAME <>", value, "nodename");
			return this;
		}

		public Criteria andNodenameGreaterThan(String value) {
			addCriterion("NODENAME >", value, "nodename");
			return this;
		}

		public Criteria andNodenameGreaterThanOrEqualTo(String value) {
			addCriterion("NODENAME >=", value, "nodename");
			return this;
		}

		public Criteria andNodenameLessThan(String value) {
			addCriterion("NODENAME <", value, "nodename");
			return this;
		}

		public Criteria andNodenameLessThanOrEqualTo(String value) {
			addCriterion("NODENAME <=", value, "nodename");
			return this;
		}

		public Criteria andNodenameLike(String value) {
			addCriterion("NODENAME like", value, "nodename");
			return this;
		}

		public Criteria andNodenameNotLike(String value) {
			addCriterion("NODENAME not like", value, "nodename");
			return this;
		}

		public Criteria andNodenameIn(List<String> values) {
			addCriterion("NODENAME in", values, "nodename");
			return this;
		}

		public Criteria andNodenameNotIn(List<String> values) {
			addCriterion("NODENAME not in", values, "nodename");
			return this;
		}

		public Criteria andNodenameBetween(String value1, String value2) {
			addCriterion("NODENAME between", value1, value2, "nodename");
			return this;
		}

		public Criteria andNodenameNotBetween(String value1, String value2) {
			addCriterion("NODENAME not between", value1, value2, "nodename");
			return this;
		}

		public Criteria andNodedescIsNull() {
			addCriterion("NODEDESC is null");
			return this;
		}

		public Criteria andNodedescIsNotNull() {
			addCriterion("NODEDESC is not null");
			return this;
		}

		public Criteria andNodedescEqualTo(String value) {
			addCriterion("NODEDESC =", value, "nodedesc");
			return this;
		}

		public Criteria andNodedescNotEqualTo(String value) {
			addCriterion("NODEDESC <>", value, "nodedesc");
			return this;
		}

		public Criteria andNodedescGreaterThan(String value) {
			addCriterion("NODEDESC >", value, "nodedesc");
			return this;
		}

		public Criteria andNodedescGreaterThanOrEqualTo(String value) {
			addCriterion("NODEDESC >=", value, "nodedesc");
			return this;
		}

		public Criteria andNodedescLessThan(String value) {
			addCriterion("NODEDESC <", value, "nodedesc");
			return this;
		}

		public Criteria andNodedescLessThanOrEqualTo(String value) {
			addCriterion("NODEDESC <=", value, "nodedesc");
			return this;
		}

		public Criteria andNodedescLike(String value) {
			addCriterion("NODEDESC like", value, "nodedesc");
			return this;
		}

		public Criteria andNodedescNotLike(String value) {
			addCriterion("NODEDESC not like", value, "nodedesc");
			return this;
		}

		public Criteria andNodedescIn(List<String> values) {
			addCriterion("NODEDESC in", values, "nodedesc");
			return this;
		}

		public Criteria andNodedescNotIn(List<String> values) {
			addCriterion("NODEDESC not in", values, "nodedesc");
			return this;
		}

		public Criteria andNodedescBetween(String value1, String value2) {
			addCriterion("NODEDESC between", value1, value2, "nodedesc");
			return this;
		}

		public Criteria andNodedescNotBetween(String value1, String value2) {
			addCriterion("NODEDESC not between", value1, value2, "nodedesc");
			return this;
		}

		public Criteria andNodetypeIsNull() {
			addCriterion("NODETYPE is null");
			return this;
		}

		public Criteria andNodetypeIsNotNull() {
			addCriterion("NODETYPE is not null");
			return this;
		}

		public Criteria andNodetypeEqualTo(String value) {
			addCriterion("NODETYPE =", value, "nodetype");
			return this;
		}

		public Criteria andNodetypeNotEqualTo(String value) {
			addCriterion("NODETYPE <>", value, "nodetype");
			return this;
		}

		public Criteria andNodetypeGreaterThan(String value) {
			addCriterion("NODETYPE >", value, "nodetype");
			return this;
		}

		public Criteria andNodetypeGreaterThanOrEqualTo(String value) {
			addCriterion("NODETYPE >=", value, "nodetype");
			return this;
		}

		public Criteria andNodetypeLessThan(String value) {
			addCriterion("NODETYPE <", value, "nodetype");
			return this;
		}

		public Criteria andNodetypeLessThanOrEqualTo(String value) {
			addCriterion("NODETYPE <=", value, "nodetype");
			return this;
		}

		public Criteria andNodetypeLike(String value) {
			addCriterion("NODETYPE like", value, "nodetype");
			return this;
		}

		public Criteria andNodetypeNotLike(String value) {
			addCriterion("NODETYPE not like", value, "nodetype");
			return this;
		}

		public Criteria andNodetypeIn(List<String> values) {
			addCriterion("NODETYPE in", values, "nodetype");
			return this;
		}

		public Criteria andNodetypeNotIn(List<String> values) {
			addCriterion("NODETYPE not in", values, "nodetype");
			return this;
		}

		public Criteria andNodetypeBetween(String value1, String value2) {
			addCriterion("NODETYPE between", value1, value2, "nodetype");
			return this;
		}

		public Criteria andNodetypeNotBetween(String value1, String value2) {
			addCriterion("NODETYPE not between", value1, value2, "nodetype");
			return this;
		}

		public Criteria andDocstatusIsNull() {
			addCriterion("DOCSTATUS is null");
			return this;
		}

		public Criteria andDocstatusIsNotNull() {
			addCriterion("DOCSTATUS is not null");
			return this;
		}

		public Criteria andDocstatusEqualTo(Integer value) {
			addCriterion("DOCSTATUS =", value, "docstatus");
			return this;
		}

		public Criteria andDocstatusNotEqualTo(Integer value) {
			addCriterion("DOCSTATUS <>", value, "docstatus");
			return this;
		}

		public Criteria andDocstatusGreaterThan(Integer value) {
			addCriterion("DOCSTATUS >", value, "docstatus");
			return this;
		}

		public Criteria andDocstatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("DOCSTATUS >=", value, "docstatus");
			return this;
		}

		public Criteria andDocstatusLessThan(Integer value) {
			addCriterion("DOCSTATUS <", value, "docstatus");
			return this;
		}

		public Criteria andDocstatusLessThanOrEqualTo(Integer value) {
			addCriterion("DOCSTATUS <=", value, "docstatus");
			return this;
		}

		public Criteria andDocstatusIn(List<Integer> values) {
			addCriterion("DOCSTATUS in", values, "docstatus");
			return this;
		}

		public Criteria andDocstatusNotIn(List<Integer> values) {
			addCriterion("DOCSTATUS not in", values, "docstatus");
			return this;
		}

		public Criteria andDocstatusBetween(Integer value1, Integer value2) {
			addCriterion("DOCSTATUS between", value1, value2, "docstatus");
			return this;
		}

		public Criteria andDocstatusNotBetween(Integer value1, Integer value2) {
			addCriterion("DOCSTATUS not between", value1, value2, "docstatus");
			return this;
		}

		public Criteria andParentidIsNull() {
			addCriterion("PARENTID is null");
			return this;
		}

		public Criteria andParentidIsNotNull() {
			addCriterion("PARENTID is not null");
			return this;
		}

		public Criteria andParentidEqualTo(Long value) {
			addCriterion("PARENTID =", value, "parentid");
			return this;
		}

		public Criteria andParentidNotEqualTo(Long value) {
			addCriterion("PARENTID <>", value, "parentid");
			return this;
		}

		public Criteria andParentidGreaterThan(Long value) {
			addCriterion("PARENTID >", value, "parentid");
			return this;
		}

		public Criteria andParentidGreaterThanOrEqualTo(Long value) {
			addCriterion("PARENTID >=", value, "parentid");
			return this;
		}

		public Criteria andParentidLessThan(Long value) {
			addCriterion("PARENTID <", value, "parentid");
			return this;
		}

		public Criteria andParentidLessThanOrEqualTo(Long value) {
			addCriterion("PARENTID <=", value, "parentid");
			return this;
		}

		public Criteria andParentidIn(List<Long> values) {
			addCriterion("PARENTID in", values, "parentid");
			return this;
		}

		public Criteria andParentidNotIn(List<Long> values) {
			addCriterion("PARENTID not in", values, "parentid");
			return this;
		}

		public Criteria andParentidBetween(Long value1, Long value2) {
			addCriterion("PARENTID between", value1, value2, "parentid");
			return this;
		}

		public Criteria andParentidNotBetween(Long value1, Long value2) {
			addCriterion("PARENTID not between", value1, value2, "parentid");
			return this;
		}

		public Criteria andXindexIsNull() {
			addCriterion("XINDEX is null");
			return this;
		}

		public Criteria andXindexIsNotNull() {
			addCriterion("XINDEX is not null");
			return this;
		}

		public Criteria andXindexEqualTo(Integer value) {
			addCriterion("XINDEX =", value, "xindex");
			return this;
		}

		public Criteria andXindexNotEqualTo(Integer value) {
			addCriterion("XINDEX <>", value, "xindex");
			return this;
		}

		public Criteria andXindexGreaterThan(Integer value) {
			addCriterion("XINDEX >", value, "xindex");
			return this;
		}

		public Criteria andXindexGreaterThanOrEqualTo(Integer value) {
			addCriterion("XINDEX >=", value, "xindex");
			return this;
		}

		public Criteria andXindexLessThan(Integer value) {
			addCriterion("XINDEX <", value, "xindex");
			return this;
		}

		public Criteria andXindexLessThanOrEqualTo(Integer value) {
			addCriterion("XINDEX <=", value, "xindex");
			return this;
		}

		public Criteria andXindexIn(List<Integer> values) {
			addCriterion("XINDEX in", values, "xindex");
			return this;
		}

		public Criteria andXindexNotIn(List<Integer> values) {
			addCriterion("XINDEX not in", values, "xindex");
			return this;
		}

		public Criteria andXindexBetween(Integer value1, Integer value2) {
			addCriterion("XINDEX between", value1, value2, "xindex");
			return this;
		}

		public Criteria andXindexNotBetween(Integer value1, Integer value2) {
			addCriterion("XINDEX not between", value1, value2, "xindex");
			return this;
		}

		public Criteria andYindexIsNull() {
			addCriterion("YINDEX is null");
			return this;
		}

		public Criteria andYindexIsNotNull() {
			addCriterion("YINDEX is not null");
			return this;
		}

		public Criteria andYindexEqualTo(Integer value) {
			addCriterion("YINDEX =", value, "yindex");
			return this;
		}

		public Criteria andYindexNotEqualTo(Integer value) {
			addCriterion("YINDEX <>", value, "yindex");
			return this;
		}

		public Criteria andYindexGreaterThan(Integer value) {
			addCriterion("YINDEX >", value, "yindex");
			return this;
		}

		public Criteria andYindexGreaterThanOrEqualTo(Integer value) {
			addCriterion("YINDEX >=", value, "yindex");
			return this;
		}

		public Criteria andYindexLessThan(Integer value) {
			addCriterion("YINDEX <", value, "yindex");
			return this;
		}

		public Criteria andYindexLessThanOrEqualTo(Integer value) {
			addCriterion("YINDEX <=", value, "yindex");
			return this;
		}

		public Criteria andYindexIn(List<Integer> values) {
			addCriterion("YINDEX in", values, "yindex");
			return this;
		}

		public Criteria andYindexNotIn(List<Integer> values) {
			addCriterion("YINDEX not in", values, "yindex");
			return this;
		}

		public Criteria andYindexBetween(Integer value1, Integer value2) {
			addCriterion("YINDEX between", value1, value2, "yindex");
			return this;
		}

		public Criteria andYindexNotBetween(Integer value1, Integer value2) {
			addCriterion("YINDEX not between", value1, value2, "yindex");
			return this;
		}

		public Criteria andWidthIsNull() {
			addCriterion("WIDTH is null");
			return this;
		}

		public Criteria andWidthIsNotNull() {
			addCriterion("WIDTH is not null");
			return this;
		}

		public Criteria andWidthEqualTo(Integer value) {
			addCriterion("WIDTH =", value, "width");
			return this;
		}

		public Criteria andWidthNotEqualTo(Integer value) {
			addCriterion("WIDTH <>", value, "width");
			return this;
		}

		public Criteria andWidthGreaterThan(Integer value) {
			addCriterion("WIDTH >", value, "width");
			return this;
		}

		public Criteria andWidthGreaterThanOrEqualTo(Integer value) {
			addCriterion("WIDTH >=", value, "width");
			return this;
		}

		public Criteria andWidthLessThan(Integer value) {
			addCriterion("WIDTH <", value, "width");
			return this;
		}

		public Criteria andWidthLessThanOrEqualTo(Integer value) {
			addCriterion("WIDTH <=", value, "width");
			return this;
		}

		public Criteria andWidthIn(List<Integer> values) {
			addCriterion("WIDTH in", values, "width");
			return this;
		}

		public Criteria andWidthNotIn(List<Integer> values) {
			addCriterion("WIDTH not in", values, "width");
			return this;
		}

		public Criteria andWidthBetween(Integer value1, Integer value2) {
			addCriterion("WIDTH between", value1, value2, "width");
			return this;
		}

		public Criteria andWidthNotBetween(Integer value1, Integer value2) {
			addCriterion("WIDTH not between", value1, value2, "width");
			return this;
		}

		public Criteria andHeightIsNull() {
			addCriterion("HEIGHT is null");
			return this;
		}

		public Criteria andHeightIsNotNull() {
			addCriterion("HEIGHT is not null");
			return this;
		}

		public Criteria andHeightEqualTo(Integer value) {
			addCriterion("HEIGHT =", value, "height");
			return this;
		}

		public Criteria andHeightNotEqualTo(Integer value) {
			addCriterion("HEIGHT <>", value, "height");
			return this;
		}

		public Criteria andHeightGreaterThan(Integer value) {
			addCriterion("HEIGHT >", value, "height");
			return this;
		}

		public Criteria andHeightGreaterThanOrEqualTo(Integer value) {
			addCriterion("HEIGHT >=", value, "height");
			return this;
		}

		public Criteria andHeightLessThan(Integer value) {
			addCriterion("HEIGHT <", value, "height");
			return this;
		}

		public Criteria andHeightLessThanOrEqualTo(Integer value) {
			addCriterion("HEIGHT <=", value, "height");
			return this;
		}

		public Criteria andHeightIn(List<Integer> values) {
			addCriterion("HEIGHT in", values, "height");
			return this;
		}

		public Criteria andHeightNotIn(List<Integer> values) {
			addCriterion("HEIGHT not in", values, "height");
			return this;
		}

		public Criteria andHeightBetween(Integer value1, Integer value2) {
			addCriterion("HEIGHT between", value1, value2, "height");
			return this;
		}

		public Criteria andHeightNotBetween(Integer value1, Integer value2) {
			addCriterion("HEIGHT not between", value1, value2, "height");
			return this;
		}

		public Criteria andAttributeIsNull() {
			addCriterion("ATTRIBUTE is null");
			return this;
		}

		public Criteria andAttributeIsNotNull() {
			addCriterion("ATTRIBUTE is not null");
			return this;
		}

		public Criteria andAttributeEqualTo(String value) {
			addCriterion("ATTRIBUTE =", value, "attribute");
			return this;
		}

		public Criteria andAttributeNotEqualTo(String value) {
			addCriterion("ATTRIBUTE <>", value, "attribute");
			return this;
		}

		public Criteria andAttributeGreaterThan(String value) {
			addCriterion("ATTRIBUTE >", value, "attribute");
			return this;
		}

		public Criteria andAttributeGreaterThanOrEqualTo(String value) {
			addCriterion("ATTRIBUTE >=", value, "attribute");
			return this;
		}

		public Criteria andAttributeLessThan(String value) {
			addCriterion("ATTRIBUTE <", value, "attribute");
			return this;
		}

		public Criteria andAttributeLessThanOrEqualTo(String value) {
			addCriterion("ATTRIBUTE <=", value, "attribute");
			return this;
		}

		public Criteria andAttributeLike(String value) {
			addCriterion("ATTRIBUTE like", value, "attribute");
			return this;
		}

		public Criteria andAttributeNotLike(String value) {
			addCriterion("ATTRIBUTE not like", value, "attribute");
			return this;
		}

		public Criteria andAttributeIn(List<String> values) {
			addCriterion("ATTRIBUTE in", values, "attribute");
			return this;
		}

		public Criteria andAttributeNotIn(List<String> values) {
			addCriterion("ATTRIBUTE not in", values, "attribute");
			return this;
		}

		public Criteria andAttributeBetween(String value1, String value2) {
			addCriterion("ATTRIBUTE between", value1, value2, "attribute");
			return this;
		}

		public Criteria andAttributeNotBetween(String value1, String value2) {
			addCriterion("ATTRIBUTE not between", value1, value2, "attribute");
			return this;
		}

		public Criteria andCruseridIsNull() {
			addCriterion("CRUSERID is null");
			return this;
		}

		public Criteria andCruseridIsNotNull() {
			addCriterion("CRUSERID is not null");
			return this;
		}

		public Criteria andCruseridEqualTo(Long value) {
			addCriterion("CRUSERID =", value, "cruserid");
			return this;
		}

		public Criteria andCruseridNotEqualTo(Long value) {
			addCriterion("CRUSERID <>", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThan(Long value) {
			addCriterion("CRUSERID >", value, "cruserid");
			return this;
		}

		public Criteria andCruseridGreaterThanOrEqualTo(Long value) {
			addCriterion("CRUSERID >=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThan(Long value) {
			addCriterion("CRUSERID <", value, "cruserid");
			return this;
		}

		public Criteria andCruseridLessThanOrEqualTo(Long value) {
			addCriterion("CRUSERID <=", value, "cruserid");
			return this;
		}

		public Criteria andCruseridIn(List<Long> values) {
			addCriterion("CRUSERID in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridNotIn(List<Long> values) {
			addCriterion("CRUSERID not in", values, "cruserid");
			return this;
		}

		public Criteria andCruseridBetween(Long value1, Long value2) {
			addCriterion("CRUSERID between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCruseridNotBetween(Long value1, Long value2) {
			addCriterion("CRUSERID not between", value1, value2, "cruserid");
			return this;
		}

		public Criteria andCruserIsNull() {
			addCriterion("CRUSER is null");
			return this;
		}

		public Criteria andCruserIsNotNull() {
			addCriterion("CRUSER is not null");
			return this;
		}

		public Criteria andCruserEqualTo(String value) {
			addCriterion("CRUSER =", value, "cruser");
			return this;
		}

		public Criteria andCruserNotEqualTo(String value) {
			addCriterion("CRUSER <>", value, "cruser");
			return this;
		}

		public Criteria andCruserGreaterThan(String value) {
			addCriterion("CRUSER >", value, "cruser");
			return this;
		}

		public Criteria andCruserGreaterThanOrEqualTo(String value) {
			addCriterion("CRUSER >=", value, "cruser");
			return this;
		}

		public Criteria andCruserLessThan(String value) {
			addCriterion("CRUSER <", value, "cruser");
			return this;
		}

		public Criteria andCruserLessThanOrEqualTo(String value) {
			addCriterion("CRUSER <=", value, "cruser");
			return this;
		}

		public Criteria andCruserLike(String value) {
			addCriterion("CRUSER like", value, "cruser");
			return this;
		}

		public Criteria andCruserNotLike(String value) {
			addCriterion("CRUSER not like", value, "cruser");
			return this;
		}

		public Criteria andCruserIn(List<String> values) {
			addCriterion("CRUSER in", values, "cruser");
			return this;
		}

		public Criteria andCruserNotIn(List<String> values) {
			addCriterion("CRUSER not in", values, "cruser");
			return this;
		}

		public Criteria andCruserBetween(String value1, String value2) {
			addCriterion("CRUSER between", value1, value2, "cruser");
			return this;
		}

		public Criteria andCruserNotBetween(String value1, String value2) {
			addCriterion("CRUSER not between", value1, value2, "cruser");
			return this;
		}

		public Criteria andCrtimeIsNull() {
			addCriterion("CRTIME is null");
			return this;
		}

		public Criteria andCrtimeIsNotNull() {
			addCriterion("CRTIME is not null");
			return this;
		}

		public Criteria andCrtimeEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME =", value, "crtime");
			return this;
		}

		public Criteria andCrtimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <>", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThan(Date value) {
			addCriterionForJDBCDate("CRTIME >", value, "crtime");
			return this;
		}

		public Criteria andCrtimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME >=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThan(Date value) {
			addCriterionForJDBCDate("CRTIME <", value, "crtime");
			return this;
		}

		public Criteria andCrtimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CRTIME <=", value, "crtime");
			return this;
		}

		public Criteria andCrtimeIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("CRTIME not in", values, "crtime");
			return this;
		}

		public Criteria andCrtimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME between", value1, value2, "crtime");
			return this;
		}

		public Criteria andCrtimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CRTIME not between", value1, value2,
					"crtime");
			return this;
		}
	}
}